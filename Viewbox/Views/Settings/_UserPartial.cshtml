@model Viewbox.Models.UserSettingsModel
@using Viewbox.Properties
@using Viewbox
@helper DisplayProperty(int index, int id, SystemDb.PropertyType type, string name, string description, string value)
{
    <div class="property @type">
        <div class="shortname">@name</div>
        <div class="link">
            <a class="text change" href="#">@Resources.Alter</a>
            <a class="text cancel" href="#">@Resources.Cancel</a>
            <a class="text update" href="#">@Resources.Save</a>
        </div>
        <div class="description">@description</div>
        <div class="value">
            <input type="hidden" name="[@index].Id" value="@id" />
            @if (type == SystemDb.PropertyType.Bool)
            {
                bool isChecked = false;
                bool.TryParse(value, out isChecked);
                <input type="hidden" name="[@index].Value" value="@value" class="hidden-value" />
                <div class="display-value">@(isChecked ? Resources.Yes : Resources.No)</div>
                <div class="changed-value">@(isChecked ? Resources.No : Resources.Yes)</div>
            }
            else
            {
                @Html.TextBox(String.Format("[{0}].Value", index), value, new { Class = "textbox changed-value" })
                <div class="display-value">@value</div>
            }
        </div>
    </div>
}
@using (Html.BeginForm("Personal", "Settings"))
{
    var user = Model.RightsMode && Model.RightsModeUser != null ? Model.RightsModeUser : Model.User;
    bool isUserSpecial = false;
    <table width="100%" style="margin: 0px;">
        @if (user.UserName == "avendata_admin" || user.UserName == "avendata_qs")
        {
            isUserSpecial = true;
        }
        @if (!user.IsADUser)
        {
            <tr>
                <td>
                    <div class="property String">
                        <div class="shortname@(isUserSpecial ? "-disabled" : "")">@Resources.Username</div>

                        <div class="link">
                            <a class="text change@(isUserSpecial ? "-disabled" : "")" href="#">@Resources.Alter</a>
                            @if (!isUserSpecial)
                            {
                                <a class="text cancel" href="#">@Resources.Cancel</a>
                                <a class="text update" href="#">@Resources.Save</a>
                            }
                        </div>

                        <div class="description">@(user == Model.User ? Resources.YourUsername : String.Format(Resources.TheirUsername, user.Name))</div>
                        @if (!isUserSpecial)
                        {
                            <div class="value">
                                @Html.TextBox("userName", user.UserName, new { Class = "textbox changed-value", AutoComplete = "off" })
                                <div class="display-value">@user.UserName</div>
                            </div>
                        }
                    </div>
                </td>
            </tr>
        }
        <tr>
            <td>
                <div class="property String">
                    <div class="shortname@(isUserSpecial ? "-disabled" : "")">@Resources.Name</div>
                    <div class="link">
                        <a class="text change@(isUserSpecial ? "-disabled" : "")" href="#">@Resources.Alter</a>
                        @if (!isUserSpecial)
                        {
                            <a class="text cancel" href="#">@Resources.Cancel</a>
                            <a class="text update" href="#">@Resources.Save</a>
                        }
                    </div>
                    <div class="description">@(user == Model.User ? Resources.YourName : String.Format(Resources.TheirName, user.Name))</div>
                    @if (!isUserSpecial)
                    {
                        <div class="value">
                            @Html.TextBox("name", user.Name, new { Class = "textbox changed-value", AutoComplete = "off" })
                            <div class="display-value">@user.Name</div>
                        </div>
                    }
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="property String">
                    <div class="shortname@(isUserSpecial ? "-disabled" : "")">@Resources.EMail</div>
                    <div class="link">
                        <a class="text change@(isUserSpecial ? "-disabled" : "")" href="#">@Resources.Alter</a>
                        @if (!isUserSpecial)
                        {
                            <a class="text cancel" href="#">@Resources.Cancel</a>
                            <a class="text update" href="#">@Resources.Save</a>
                        }
                    </div>
                    <div class="description">@(user == Model.User ? Resources.YourEmail : String.Format(Resources.TheirEmail, user.Name))</div>
                    @if (!isUserSpecial)
                    {
                        <div class="value">
                            @Html.TextBox("email", user.Email, new { Class = "textbox changed-value", AutoComplete = "off" })
                            <div class="display-value">@user.Email</div>
                        </div>
                    }
                </div>
            </td>
        </tr>
        @if (!user.IsADUser)
        {
            <tr>
                <td>
                    <div class="property String Password">
                        <div class="shortname@(isUserSpecial ? "-disabled" : "")">@Resources.Password</div>
                        <div class="link">
                            <div class="text promptNewPwdMessage">@Resources.PromptForNewPassword</div>
                            <a class="text change@(isUserSpecial ? "-disabled" : "")" href="#">@Resources.Alter</a>
                            @if (!isUserSpecial)
                            {
                                <a class="text cancel" href="#">@Resources.Cancel</a>
                                <a class="text update" href="#">@Resources.Save</a>
                            }
                        </div>
                        <div class="description">@(user == Model.User ? Resources.YourPassword : String.Format(Resources.TheirPassword, user.Name))</div>
                        @if (!isUserSpecial)
                        {
                            <div class="value">
                                <div id="invalidPasswordMessage" style="display: inline-block;color:red;float: right;"></div>
                                @Html.Hidden("set_password", false)
                                @*<table style ="width:60%" align="left">
                                        <tr>
                                            <td>
                                                @Html.Label("", "New Password", new { style = "border: 0", Class = "textbox changed-value", AutoComplete = "off" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.Label("", "Re New Password", new { style = "border: 0", Class = "textbox changed-value", AutoComplete = "off" })
                                            </td>
                                        </tr>
                                    </table>
                                    <table style="width:40%" align="right">
                                        <tr>
                                            <td>
                                                @Html.Password("password", String.Empty, new { Class = "textbox changed-value", AutoComplete = "off" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                @Html.Password("password2", String.Empty, new { Class = "textbox changed-value", AutoComplete = "off" })
                                            </td>
                                        </tr>
                                    </table>*@
                                <div class="password-container">
                                    <div class="left-container">
                                        @Html.Label("", Resources.OldPassword, new { style = "border: 0", Class = "textbox changed-value", AutoComplete = "off" })
                                        @Html.Label("", Resources.NewPassword, new { style = "border: 0", Class = "textbox changed-value", AutoComplete = "off" })
                                        @Html.Label("", Resources.ReNewPassword, new { style = "border: 0", Class = "textbox changed-value", AutoComplete = "off" })
                                    </div>
                                    <div class="right-container">
                                        @Html.Password("oldpassword", String.Empty, new { Class = "textbox changed-value", AutoComplete = "off" })
                                        @Html.Password("newpassword", String.Empty, new { Class = "textbox changed-value", AutoComplete = "off" })
                                        @Html.Password("newpassword2", String.Empty, new { Class = "textbox changed-value", AutoComplete = "off" })
                                    </div>
                                </div>
                                <div class="display-value">••••••••</div>
                            </div>
                        }
                    </div>
                </td>
            </tr>
        }
        <tr>
            <td>
                <div class="property String Numeric">
                    <div class="shortname">@Resources.RowCount</div>
                    <div class="link">
                        <a class="text change" href="#">@Resources.Alter</a>
                        <a class="text cancel" href="#">@Resources.Cancel</a>
                        <a class="text update" href="#">@Resources.Save</a>
                    </div>
                    <div class="description">@Resources.TableRowCount</div>
                    <div class="value">
                        @Html.TextBox("displayrowcount", user.DisplayRowCount, new { Class = "textbox changed-value", AutoComplete = "off" })
                        <div class="display-value">@user.DisplayRowCount</div>
                    </div>
                </div>
            </td>
        </tr>
    </table>

        int i = 0;
        foreach (var p in Model.Properties)
        {
            @DisplayProperty(i++, p.Id, p.Type, p.GetName(), p.GetDescription(), p.Value)
        }
}
@if (Model.Dialog != null)
{
    <div class="hide" id="show-dlg">
        @Html.Partial("_DialogPartial", Model.Dialog)
    </div>
    <script type="text/javascript" language="javascript">
        jQuery('#dialog').show().html(jQuery('#show-dlg').remove().html());
    </script>
}