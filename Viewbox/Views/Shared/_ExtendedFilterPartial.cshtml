@using Viewbox
@using SystemDb
@using ViewboxDb
@using Viewbox.Properties
@using SortDirection = ViewboxDb.SortDirection
@{
    var DataGridModel = Model as Viewbox.Models.DataGridModel;
    var TableInfo = DataGridModel != null ? DataGridModel.TableObject : Model as TableObject;
    var TableObject = DataGridModel != null ? DataGridModel.TableInfo : (TableInfo == null) ? Model as ITableObject : TableInfo.Table;
    var show_placeholder = true;
    var placeholder = String.Empty;
    var issue = TableObject as IIssue;
}
<!-- _ExtendedFilterPartial.cshtml -->
@if(TableObject != null) {
<ul class="dropdown big view" id="extfilteroptions">
	<li class="panel">
        @Html.Partial("_TooltipPartial", Resources.Filter)
		<a class="icon process right dropdown-btn @(TableInfo != null && TableInfo.Filter != null ? "active" : "")"></a>
		<ul class="dropdown-menu">
			<li class="column-view-props visible">
				<div class="box">
					<div class="top">
                        <h4>@Resources.Filter</h4>
                        <div class="close-popup" style="top: 32px;right: 20px;"></div>
					</div>
					<div class="middle filter" id="extfilter">
                        @if(issue == null || issue.Flag == 0) {
						<div class="operators">
							@foreach(var op in new List<Operator> {
								Operator.Not,
								Operator.And,
								Operator.Or,
								Operator.Less,
								Operator.LessOrEqual,
								Operator.Greater,
								Operator.GreaterOrEqual,
								Operator.Between,
                                Operator.Equals,
								Operator.NotEquals,
								Operator.In,
								Operator.Like,
                                Operator.StartsWith}) {
									<text>
										@Html.Partial("_OperatorsPartial", op)
									</text>
                         }
						</div>
						<div class="filter-tree">
						    <div id="column-dropdown" class="dropdown columns">
						        @foreach (var Column in TableObject.Columns) {
						            <div class="column dropdown_sqlfunction_column_row">
						                <div class="item-id">@Column.Id</div>
						                <div class="colnumber">@(Column.Ordinal + 1)</div>
						                <div class="colname">@Column.GetDescription()</div>
						            </div>
						        }
						    </div>
                            <div id="column-dropdown1" class="dropdown columns column1">
                                @foreach (var Column in TableObject.Columns)
                                {
                                    <div class="column dropdown_sqlfunction_column_row">
                                        <div class="item-id">@Column.Id</div>
                                        <div class="colnumber">@(Column.Ordinal + 1)</div>
                                        <div class="colname">@Column.GetDescription()</div>
                                    </div>
                                }
                            </div>
							<div class="droparea">
							@{ show_placeholder = true; }
							@if(TableInfo != null && TableInfo.Filter != null) {
                                show_placeholder = false;
								<text>@Html.Partial("_OperatorsPartial", TableInfo.Filter)</text>
                            }
							@{ placeholder = "placeholder" + (show_placeholder ? String.Empty : " hide"); }
							</div>
							<div class="@placeholder">
								@Resources.FilterText
							</div>
						</div>
						<div class="buttons">
						@using(Html.BeginForm("SortAndFilter", "DataGrid", new { id = TableObject.Id })) {
                            <input type="hidden" name="save" id="save" />
                            <input type="hidden" name="filter" id="filter" />
                              if(TableInfo != null) 
                              {
                                  if (TableInfo.Sort != null)
                                  {
                                      for(int i = 0; i < TableInfo.Sort.Count; ++i) {
                                                        <input type="hidden" name="sortList[@i].cid" value="@TableInfo.Sort[i].cid" />
                                                        <input type="hidden" name="sortList[@i].dir" value="@(TableInfo.Sort[i].dir == SortDirection.Ascending ? 0 : 1)" />
                                      }
                                  }
                                  if (TableInfo.Sum != null)
                                  {
                                        for (int i = 0; i < TableInfo.Sum.Count; ++i)
                                        {
                                            <input type="hidden" name="summaList[@i]" value="@TableInfo.Sum[i].Id" />
                                        }
                                  }
                              }
                            <input type="submit" class="submit button" value="@Resources.Submit" />
							<input type="button" class="button" value="@Resources.Reset" id="resetfilter" style="margin-right: 10px" />
                            <div class="tableObjectId hide">@TableObject.Id</div>
      }
						</div>
                        }
                        else
                        { 
                            <a class="no-action">@String.Format(Resources.NoAction, Resources.Filter)</a>
                        }
					</div>
					<div class="bottom"></div>
				</div>
			</li>
		</ul>
	</li>
</ul>
}