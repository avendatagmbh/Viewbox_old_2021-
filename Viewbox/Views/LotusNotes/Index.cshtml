@using SystemDb
@using Viewbox
@using Viewbox.Job
@using Viewbox.Properties
@using System.Web.Optimization
@model Viewbox.Models.LotusNotesTableModel
@{
    var count = 3;
    var opt = ViewboxSession.Optimizations.FirstOrDefault();
    if (ViewboxSession.IssueCount == 0 || ViewboxSession.HideIssuesButton) { count--; }
    if (ViewboxSession.ViewCount == 0 || ViewboxSession.HideViewsButton) { count--; }
    if (ViewboxSession.TableCount == 0 || ViewboxSession.HideTablesButton) { count--; }
    int rightCount = 3;
    if (!ViewboxSession.User.AllowedExport && !ViewboxSession.User.IsSuper)
    {
        rightCount--;
    }
    if ((ViewboxSession.Archives.Count == 0 || opt == null || ViewboxSession.Archives.All(a => a.Database.ToLower() != opt.FindValue(OptimizationType.System).ToLower())) && ViewboxApplication.HideDocumentsMenu && !ViewboxSession.ArchiveDocuments.Any()) { rightCount--; }
}

@section HeadSection {
    @*@Scripts.Render("~/bundles/lotus-js")*@
    @Scripts.Render("~/Scripts/LotusNotes.js")
}
<div id="lotus-details-shadow">
</div>
<div id="lotus-details-dialog">
</div>
<div id="DataGrid" class="page-content enlarged">
    <div class="page-header replace">
    </div>
    <div id="tabsleft" class="tabfunctions" style="float: left; margin: 1px 21px 0;">
        <ul>
            @if (opt != null && ViewboxSession.TableCount > 0 && !ViewboxSession.HideTablesButton)
            {
                <a class="tab actualController" id="LotusNotesTab" href="/LotusNotes/Index">@Resources.LotusNotes</a>
                @*if (ViewboxSession.RightsMode)
                        {
                            RightType typeRight;
                            String rightClass = String.Empty;
                            int leftOffset = 298;
                            if (count == 1)
                            {
                                leftOffset = 134;
                            }
                            if (count == 2)
                            {
                                leftOffset = 227;
                            }
                            if (count == 3)
                            {
                                leftOffset = 272;
                            }
                            typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.Table) ? RightType.None : RightType.Read;
                            rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="position: absolute; display: block; top: 3px; width:21px; height:21px; left: @leftOffset.ToString()px" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new { type = TableType.Table, right = typeRight })">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.Tables, typeRight.ToString()))
                        }*@
            }
            @if (ViewboxSession.TableCount > 0 && !ViewboxSession.HideTablesButton)
            {
                <a class="tab" data-id="TabTables" id="TablesTab" href="@Url.Action("Index", "TableList")">@Resources.Tables</a>
                @*if (ViewboxSession.RightsMode)
                        {
                            RightType typeRight;
                            String rightClass = String.Empty;
                            int leftOffset = 298;
                            if (count == 1)
                            {
                                leftOffset = 134;
                            }
                            if (count == 2)
                            {
                                leftOffset = 227;
                            }
                            if (count == 3)
                            {
                                leftOffset = 272;
                            }
                            typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.Table) ? RightType.None : RightType.Read;
                            rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="position: absolute; display: block; top: 3px; width:21px; height:21px; left: @leftOffset.ToString()px" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new { type = TableType.Table, right = typeRight })">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.Tables, typeRight.ToString()))
                        }*@
            }
            @if (ViewboxSession.ViewCount > 0 && !ViewboxSession.HideViewsButton)
            {
                <a class="tab" href="@Url.Action("Index", "ViewList")">@Resources.Views</a>
                @*if (ViewboxSession.RightsMode)
                        {
                            RightType typeRight;
                            String rightClass = String.Empty;
                            int leftOffset = 188;
                            if (count == 1)
                            {
                                leftOffset = 149;
                            }
                            if (count == 2 && ViewboxSession.IssueCount == 0)
                            {
                                leftOffset = 60;
                            }
                            if (count == 2 && ViewboxSession.IssueCount > 0)
                            {
                                leftOffset = 242;
                            }
                            if (count == 3 && ViewboxSession.IssueCount == 0)
                            {
                                leftOffset = 15;
                            }
                            if (count == 3 && ViewboxSession.IssueCount > 0)
                            {
                                leftOffset = 149;
                            }
                            typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.View) ? RightType.None : RightType.Read;
                            rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="position: absolute; display: block; top: 3px; width:21px; height:21px; left: @leftOffset.ToString()px" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new { type = TableType.View, right = typeRight })">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.Views, typeRight.ToString()))
                        }*@
            }
            @if (ViewboxSession.IssueCount > 0 && !ViewboxSession.HideIssuesButton)
            {
                <a class="tab" href="@Url.Action("Index", "IssueList")">@Resources.Issues</a>
                @*if (ViewboxSession.RightsMode)
                        {
                            RightType typeRight;
                            String rightClass = String.Empty;
                            typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.Issue) ? RightType.None : RightType.Read;
                            rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="position: absolute; display: block; top: 3px; width:21px; height:21px; left: 25px;" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new { type = TableType.Issue, right = typeRight })">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.Issues, typeRight.ToString()))
                        }*@
            }
        </ul>
    </div>
    <div id="tabsright" class="tabfunctions" style="position: relative; margin: 1px 21px 0;">
        <ul>
            <a class="tab" href="@Url.Action("Index", "Settings")">@Resources.Settings</a>
            @if (ViewboxSession.User.AllowedExport || ViewboxSession.User.IsSuper)
            {
                <a class="tab" href="@Url.Action("Index", "Export")">@Resources.Export</a>
            }
            @if (ViewboxSession.ArchiveDocuments.Count > 0 && !ViewboxApplication.HideDocumentsMenu)
            {
                <a class="tab" href="@Url.Action("Index", "ArchiveDocuments")">@Resources.DocumentArchive</a>
                if (ViewboxSession.RightsMode)
                {
                    RightType typeRight;
                    String rightClass = String.Empty;
                    int leftOffset = 665;
                    if (rightCount == 2)
                    {
                        leftOffset = 708;
                    }
                    typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.ArchiveDocument) ? RightType.None : RightType.Read;
                    rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="left: @leftOffset.ToString()px" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new { type = TableType.Archive, right = typeRight })">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.DocumentArchive, typeRight.ToString()))
                }
            }
            @if (ViewboxSession.Archives.Count > 0 && !ViewboxApplication.HideDocumentsMenu && opt != null && ViewboxSession.Archives.Any(a => a.Database.ToLower() == opt.FindValue(OptimizationType.System).ToLower()))
            {
                <a class="tab" href="@Url.Action("Index", "Documents")">@Resources.DocumentArchive</a>
                if (ViewboxSession.RightsMode)
                {
                    RightType typeRight;
                    String rightClass = String.Empty;
                    int leftOffset = 665;
                    if (rightCount == 2)
                    {
                        leftOffset = 708;
                    }
                    typeRight = ViewboxSession.IsTableTypeAllowedInRightsMode(TableType.Archive) ? RightType.None : RightType.Read;
                    rightClass = (typeRight == RightType.None) ? "readable" : "navigation-not-readable";
                    <a class="icon tabletyperight-switch @rightClass" style="left: @leftOffset.ToString()px" href="@Url.Action("UpdateTableTypeRightNavigationBar", "UserManagement", new {type = TableType.Archive, right = typeRight})">
                    </a>
                    @Html.Partial("_TooltipPartial", String.Format(Resources.ChangeRightsOnAllType, Resources.DocumentArchive, typeRight.ToString()))
                }
            }
        </ul>
    </div>
    <div class="content-box">
        <div class="content-outer">
            <div class="content-inner">
                <div class="header main-header">

                    <div class="functions">
                        @{
                            var bukrsValue = ViewboxSession.Optimizations.Last().GetOptimizationValue(OptimizationType.SplitTable);
                            var aggregationParams = new List<ViewboxDb.AggregationFunction>();
                            aggregationParams.Add(ViewboxDb.AggregationFunction.Sum);
                        }
                        <div class="filterFor">
                            <span>@Resources.Search : </span>
                            <input type="text" id="searchWord" value="@Model.Filter" />
                            <a><img src="../../Content/img/icons/search.png" /></a>
                        </div>
                        <a href="Back" class="backlink"></a>
                    </div>
                    <div id="lotus-navigation" class="nav-controls lotus-navigation">
                        @if (Model.Page > 1 && Model.Page <= (Model.Count / Model.Size + 1))
                        {
                            <a href="/LotusNotes/Index/?page=1&size=@Model.Size&filter=@Model.Filter"><img src="../../Content/img/icons/first.png" /></a>
                            <a href="/LotusNotes/Index/?page=@(Model.Page-1)&size=@Model.Size&filter=@Model.Filter"><img src="../../Content/img/icons/back.png" /></a>
                        }
                        else
                        {
                            <a><img src="../../Content/img/icons/first-inactive.png" /></a>
                            <a><img src="../../Content/img/icons/back-inactive.png" /></a>
                        }
                        <span>@((Model.Page-1) * Model.Size + 1) -</span>
                        <span>@(((Model.Page) * Model.Size + 1) >= Model.Count ? Model.Count : ((Model.Page) * Model.Size + 1))</span>
                        <span class="current"></span>
                        <span>/</span>
                        <span class="count">@Model.Count</span>
                        <span>@Resources.RowCount</span>
                        <span>|</span>
                        <span>@Resources.Page : </span>
                        <span>
                            <select id="change-page">
                                @for (int i = 1; i < (Model.Count / Model.Size) + 2; i++)
                                {
                                    if (i == Model.Page)
                                    {
                                        <option selected="selected" value="@i">@i</option>
                                    }
                                    else
                                    {
                                        <option value="@i">@i</option>
                                    }
                                }
                            </select>
                        </span>
                        @if (Model.Page >= 1 && Model.Page < (Model.Count / Model.Size + 1))
                        {
                            <a href="/LotusNotes/Index/?page=@(Model.Page+1)&size=@Model.Size&filter=@Model.Filter"><img src="../../Content/img/icons/next.png" /></a>
                            <a href="/LotusNotes/Index/?page=@(Model.Count / Model.Size + 1)&size=@Model.Size&filter = @Model.Filter"><img src="../../Content/img/icons/last.png" /></a>
                        }
                        else
                        {
                            <a><img src="../../Content/img/icons/next-inactive.png" /></a>
                            <a><img src="../../Content/img/icons/last-inactive.png" /></a>
                        }
                        <div class="hide page">@Model.Page</div>
                        <div class="hide size">@Model.Size</div>
                    </div>
                    <input type="hidden" id="thisUrl" name="thisUrl" value="@this.GetUrl(new UrlParam("start", 0))" />
                </div>
                <div class="tabbar">
                </div>
                <div id="isEnlargedTableDesignEnabled">
                </div>
                <div id="loading" style="z-index: -1000; text-align: center; margin-top: 250px; position: relative; display: none;">
                    <img src="../../Content/img/gif-load.gif">
                </div>

                <div class="lotusNotes-container">
                    @if (Model.NodeCount > 1)
                    {
                        @Html.Partial("_LotusDataGrid", Model.GetRootNodes());
                    }
                </div>

            </div>
        </div>
