<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfc="clr-namespace:AvdWpfControls;assembly=AvdWpfControls"
                    xmlns:c1="clr-namespace:AvdWpfControls.Converters;assembly=AvdWpfControls"
                    xmlns:templateSelector="clr-namespace:AvdCommon.Rules.Gui.TemplateSelectors"
                    xmlns:TreeNodes="clr-namespace:AvdCommon.Rules.Gui.TreeNodes"
                    xmlns:Converters="clr-namespace:AvdCommon.Rules.Gui.Converters"
                    x:Class="AvdCommon.Rules.Gui.ResourceDictionaries.RuleTreeViewResources">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/AvdWpfStyles;component/Templates.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <c1:BoolToVisibilityConverter x:Key="falseToVisibilityConverter" VisibleValue="False" HiddenState="Collapsed" />
  <c1:EmptyStringToVisibilityConverter x:Key="emptyStringToVisibilityConverter" />
  <Converters:NullToBoolConverter x:Key="nullToFalseConverter" NullToTrue="false" />

  <templateSelector:RuleToColumnTemplateSelector x:Key="ruleToColumnTemplateSelector" />
  <templateSelector:RuleTemplateSelector x:Key="ruleTemplateSelector" />
  <Style x:Key="ListBoxItemBaseBorder" TargetType="{x:Type Border}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="Padding" Value="3,1,3,1" />
    <Setter Property="Margin" Value="0,0,0,0" />
  </Style>
  <SolidColorBrush x:Key="RuleBorderBorderBrush" Color="#9fba7b" />
  <SolidColorBrush x:Key="SortRuleBorderBorderBrush" Color="#aac4f3" />
  <LinearGradientBrush x:Key="RuleBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#def5cb" Offset="0.0" />
    <GradientStop Color="#b6d68d" Offset="1.0" />
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SortRuleBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#f5d4cb" Offset="0.0" />
    <GradientStop Color="#d76969" Offset="1.0" />
  </LinearGradientBrush>

  <LinearGradientBrush x:Key="selectionOverlayBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#20303030" Offset="0.0" />
    <GradientStop Color="#40303030" Offset="0.8" />
    <GradientStop Color="#50303030" Offset="1.0" />
  </LinearGradientBrush>
  <SolidColorBrush x:Key="RuleTextBrush" Color="Black" />
  <SolidColorBrush x:Key="RuleSelectedTextBrush" Color="#202020" />
  <SolidColorBrush x:Key="ColumnBorderBorderBrush" Color="#aac4f3" />
  <LinearGradientBrush x:Key="ColumnBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#d2ddea" Offset="0.0" />
    <GradientStop Color="#aebdcf" Offset="1.0" />
  </LinearGradientBrush>

  <Style x:Key="RuleBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="{StaticResource RuleBorderBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource RuleBorderBorderBrush}" />
  </Style>
  <Style x:Key="SortRuleBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="{StaticResource SortRuleBorderBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource SortRuleBorderBorderBrush}" />
  </Style>
  <Style x:Key="ColumnBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="{StaticResource ColumnBorderBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource ColumnBorderBorderBrush}" />
  </Style>
  <Style x:Key="SelectionOverlayBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
        <Setter Property="Background" Value="{StaticResource selectionOverlayBackgroundBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="RuleTextStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="{StaticResource RuleTextBrush}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
        <!--<Setter Property="FontWeight" Value="Bold" />-->
        <Setter Property="Foreground" Value="{StaticResource RuleSelectedTextBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="RuleCommentTextStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="Foreground" Value="{StaticResource RuleTextBrush}" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
        <Setter Property="Foreground" Value="{StaticResource RuleSelectedTextBrush}" />
      </DataTrigger>
    </Style.Triggers>
  </Style>
  <HierarchicalDataTemplate x:Key="ColumnListItem" ItemsSource="{Binding Children}"
                            DataType="{x:Type TreeNodes:ColumnTreeNode}">
    <Grid MinHeight="14" Margin="0,0,5,0">
      <Border Style="{StaticResource ColumnBorder}" />
      <Border Style="{StaticResource SelectionOverlayBorder}">
        <Grid>
          <TextBlock Grid.RowSpan="2" x:Name="txtLabel" Text="{Binding Path=Name}" TextWrapping="Wrap"
                     Style="{StaticResource RuleTextStyle}" />
        </Grid>
      </Border>
    </Grid>
  </HierarchicalDataTemplate>

  <DataTemplate x:Key="RuleListItem">
    <Grid MinHeight="24">
      <Border Style="{StaticResource RuleBorder}" />
      <Border Style="{StaticResource SelectionOverlayBorder}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" x:Name="txtLabel" Text="{Binding Path=Name}" TextWrapping="Wrap"
                       Style="{StaticResource RuleTextStyle}"
                       Visibility="{Binding ShowCommentOnly, Converter={StaticResource falseToVisibilityConverter}}" />
            <TextBlock Grid.Row="1" Text="{Binding Path=Comment}" TextWrapping="Wrap"
                       Style="{StaticResource RuleCommentTextStyle}"
                       Visibility="{Binding Comment, Converter={StaticResource emptyStringToVisibilityConverter}}" FontSize="10"
                       FontStyle="Italic" Foreground="#444" />
          </Grid>
          <wpfc:ImageButton Grid.Column="1" VerticalAlignment="Center"
                            ImageSource="pack://application:,,,/AvdCommon;component/Resources/Rules/edit.png" ImageHeight="14"
                            ToolTip="Regel bearbeiten" Click="btnEditRule_Click" Margin="5,0,0,0" />
        </Grid>
      </Border>
    </Grid>
  </DataTemplate>
  <DataTemplate x:Key="SortRuleListItem">
    <Grid MinHeight="24">
      <Border Style="{StaticResource SortRuleBorder}" />
      <Border Style="{StaticResource SelectionOverlayBorder}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>
          <Grid Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" x:Name="txtLabel" Text="{Binding Path=Name}" TextWrapping="Wrap"
                       Style="{StaticResource RuleTextStyle}"
                       Visibility="{Binding ShowCommentOnly, Converter={StaticResource falseToVisibilityConverter}}" />
            <TextBlock Grid.Row="1" Text="{Binding Path=Comment}" TextWrapping="Wrap"
                       Style="{StaticResource RuleCommentTextStyle}"
                       Visibility="{Binding Comment, Converter={StaticResource emptyStringToVisibilityConverter}}" FontSize="10"
                       FontStyle="Italic" Foreground="#444" />
          </Grid>
        </Grid>
      </Border>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ColumnTreeViewItem">
    <Grid MinHeight="24">
      <Border Style="{StaticResource ColumnBorder}" />
      <Border Style="{StaticResource SelectionOverlayBorder}">
        <Grid>
          <TextBlock Grid.RowSpan="2" x:Name="txtLabel" Text="{Binding Path=Name}" TextWrapping="Wrap"
                     Style="{StaticResource RuleTextStyle}" />
        </Grid>
      </Border>
    </Grid>
  </DataTemplate>

  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2"
                       Opacity="0" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RuleTreeViewItem" TargetType="{x:Type TreeViewItem}">
    <Setter Property="AllowDrop" Value="{Binding Value.IsAccessible}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Padding" Value="1,0,0,0" />
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
    <Setter Property="IsExpanded"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="IsSelected"
            Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                          IsChecked="{Binding Path=IsExpanded, 
                                RelativeSource={RelativeSource TemplatedParent}}"
                          ClickMode="Press" />
            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="Stretch" />
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="false">
              <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Width" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasHeader" Value="false" />
                <Condition Property="Height" Value="Auto" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="true">
              <Setter TargetName="Bd" Property="Background" Value="Transparent" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true" />
                <Condition Property="IsSelectionActive" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>