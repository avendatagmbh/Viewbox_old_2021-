<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:ViewAssistant.Converters"
                    xmlns:AeroTheme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:Localisation="clr-namespace:Base.Localisation;assembly=Base">

    <!-- Colors -->

    <Color x:Key="ControlMouseOverLightColor">#B0B0B0</Color>
    <Color x:Key="ControlMouseOverDarkColor">#A0A0A0</Color>
    <Color x:Key="ControlPressedLightColor">#909090</Color>
    <Color x:Key="ControlPressedDarkColor">#808080</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#A0A0A0</Color>
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>
    <Color x:Key="GlyphColor">#FF444444</Color>

    <!-- Brushes -->

    <LinearGradientBrush x:Key="GreyGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#EDEDED" Offset="0" />
        <GradientStop Color="#C9C9C9" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="AvdMenuSplitter" Color="#D0A4A4A4"/>
    <SolidColorBrush x:Key="AvdMenuTextEnabled" Color="#465570" />
    <SolidColorBrush x:Key="AvdMenuTextDisabled" Color="Gray" />
    <SolidColorBrush x:Key="ConnectionStateConnectedBrush" Color="#009c00"/>
    <SolidColorBrush x:Key="ConnectionStateNotConnectedBrush" Color="#CC4500"/>
    <SolidColorBrush x:Key="DataBackgroundBrush" Color="#E5E5E5"/>
    <SolidColorBrush x:Key="HeaderTextBrush" Color="#ffffff"/>
    <SolidColorBrush x:Key="ListBoxSelectionBrush" Color="#d9f3ac"/>
    <SolidColorBrush x:Key="ListBoxTextBackgroundBrush" Color="#F4F8FF"/>
    <SolidColorBrush x:Key="NewDesignBlueBrush" Color="#637493"/>
    <SolidColorBrush x:Key="NewDesignWhiteBrush" Color="White"/>
    <SolidColorBrush x:Key="NewDesignBlackBrush" Color="Black"/>
    <SolidColorBrush x:Key="NewDesignDeepBlueBrush" Color="#243553"/>
    <SolidColorBrush x:Key="RibbonHeaderBrush" Color="#EBEBEB"/>
    <SolidColorBrush x:Key="TextColorBrush" Color="#333333"/>
    <SolidColorBrush x:Key="UnPressedTabPageColor" Color="#cccccc"/>

    <!-- Converters -->

    <Converters:BoolInversionConverter x:Key="BoolInversionConverter" />
    <Converters:BoolToStringConverter x:Key="BoolToStringConverterConnectionButton" 
                                      WhenFalse="/Resources/icon_disconnected.png" 
                                      WhenTrue="/Resources/icon_connected.png"/>
    <Converters:BoolToStringConverter x:Key="BoolToStringConverter" 
                                      WhenFalse="{x:Static Localisation:ResourcesCommon.ConnectionState_NotConnected}" 
                                      WhenTrue="{x:Static Localisation:ResourcesCommon.ConnectionState_Connected}"/>
    <Converters:ItemSelectedToColorConverter x:Key="ConnectionColorConverter" 
                                                 SelectedBrush="{StaticResource ConnectionStateConnectedBrush}" 
                                                 DeselectedBrush="{StaticResource ConnectionStateNotConnectedBrush}"/>
    <Converters:BoolToVisibilityConverter x:Key="HasErrorWarningConverter" 
                                              HiddenState="Hidden" 
                                              VisibleValue="True"/>
    <Converters:BoolToVisibilityConverter x:Key="ShowMergingFunction" 
                                              HiddenState="Collapsed" 
                                              VisibleValue="True"/>
    <Converters:BoolToVisibilityConverter x:Key="ShowFilledTablesConverter" 
                                              HiddenState="Collapsed" 
                                              VisibleValue="True"/>
    <Converters:BoolToVisibilityConverter x:Key="ShowSpecialConverter" 
                                              HiddenState="Collapsed" 
                                              VisibleValue="True"/>
    <Converters:BoolToVisibilityConverter x:Key="ShowEmptyTablesConverter" 
                                              HiddenState="Collapsed" 
                                              VisibleValue="False"/>
    <Converters:BoolToVisibilityConverter x:Key="TrueToVisibilityConverter" 
                                          VisibleValue="True" 
                                          HiddenState="Collapsed" />
    <Converters:ValueExistsToVisibilityConverter x:Key="ValueExistsToVisibilityConverter" />
    <Converters:ValueNotExistsToVisibilityConverter x:Key="ValueNotExistsToVisibilityConverter" />
    <Converters:ItemSelectedToColorConverter x:Key="ItemSelectedToColorConverter" 
                                             SelectedBrush="{StaticResource ListBoxSelectionBrush}" 
                                             DeselectedBrush="{StaticResource ListBoxTextBackgroundBrush}"/>
    <Converters:StringToDecimalConverter x:Key="StringToDecimalConverter" />
    <Converters:DataGridCellToTextConverter x:Key="DataGridCellToTextConverter"/>
    <Converters:SelectedProfileToWindowTitleConverter x:Key="SelectedProfileToWindowTitleConverter"/>

    <!-- ControlTemplates -->

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" CornerRadius="2,0,0,0" BorderThickness="0,0,1,0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>

            </Border.BorderBrush>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ExpandededArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Path x:Name="CollapsedArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                Data="M 0 4 L 4 0 L 8 4 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <Path x:Name="ExpandededArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="Collapsed" Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- Styles -->

    <Style x:Key="HeadlineBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource GreyGradientBrush}" />
    </Style>
    <Style x:Key="RoundButtonTemplate" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="0" Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GroupBoxBorder1" TargetType="{x:Type Border}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="0,3">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="#EEEEEE" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource NewDesignBlueBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <AeroTheme:DataGridHeaderBorder x:Name="headerBorder" Background="{StaticResource NewDesignBlueBrush}">
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource NewDesignWhiteBrush}">
                            <Grid>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" TextWrapping="Wrap" Margin="20,0"/>
                            </Grid>
                        </Border>
                    </AeroTheme:DataGridHeaderBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" VerticalAlignment="Center" Padding="20,0">
                        <TextBlock Foreground="Black">
                                <TextBlock.Text>
                                  <MultiBinding Converter="{StaticResource DataGridCellToTextConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Column.DisplayIndex" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Content.Content.RowEntries" />
                                  </MultiBinding>
                                </TextBlock.Text>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDown" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                            Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                            Value="{StaticResource DisabledBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton OverridesDefaultStyle="True"
                                Template="{StaticResource ExpanderToggleButton}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                        </LinearGradientBrush>
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1" Margin="5,2" VerticalAlignment="Center"
                                    ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border x:Name="ContentRowBorder" Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                            <ContentPresenter x:Name="Content" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ContentRow" Property="Height" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataTemplates -->

    <DataTemplate x:Key="TableItem_NewDesign">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Margin="10,0" VerticalAlignment="Center" IsChecked="{Binding DoExport}" />
                <Border Grid.Column="1" Padding="3,0,0,0">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" Text="{Binding Path=Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Count}" Value="0">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock HorizontalAlignment="Right" Text="{Binding Path=Count, Converter={StaticResource StringToDecimalConverter}}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Italic" />
                            <TextBlock Text="{x:Static Localisation:ResourcesCommon.Datasets}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Italic" Margin="3,0,0,0" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ColumnItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6" ToolTip="{Binding Name}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="300" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" MinWidth="300" />
                    <ColumnDefinition Width="*" MinWidth="300" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" VerticalAlignment="Center" IsChecked="{Binding DoExport}" Margin="10" />

                <Border Grid.Column="1" Padding="3,0,0,0">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{StaticResource ListBoxTextBackgroundBrush}">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Text="{Binding Path=Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />

                        <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource HeaderTextBrush}" FontSize="8" FontStyle="Italic" Visibility="{Binding HasComment, Converter={StaticResource TrueToVisibilityConverter}}" TextWrapping="Wrap" />

                        <Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{x:Static Localisation:ResourcesCommon.DatabaseType}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Normal" TextWrapping="Wrap" />
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding Path=TypeName, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Italic" TextWrapping="Wrap" Margin="5,0,0,0" />
                            <TextBlock Grid.Column="2" HorizontalAlignment="Left" Text="{x:Static Localisation:ResourcesCommon.ColumnLength}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Normal" TextWrapping="Wrap" Margin="5,0,0,0" />
                            <TextBlock Grid.Column="3" HorizontalAlignment="Left" Text="{Binding Path=MaxLength, UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource TextColorBrush}" FontSize="10" FontStyle="Italic" TextWrapping="Wrap" Margin="5,0,0,0" />
                        </Grid>
                    </StackPanel>
                </Border>

                <Border Grid.Column="3" Padding="3,0,0,0">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="4" Padding="5" Name="MyBorder2" Background="{StaticResource ListBoxTextBackgroundBrush}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Text="{x:Static Localisation:ResourcesCommon.ColumnList_Filter1}" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" Margin="10,0,0,0" />
                        <TextBox Text="{Binding Path=Filter_1}" Margin="10,0,10,0" Width="290" Height="25"/>
                    </StackPanel>
                </Border>

                <Border Grid.Column="5" Padding="5" Name="MyBorder3" Background="{StaticResource ListBoxTextBackgroundBrush}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center" Text="{x:Static Localisation:ResourcesCommon.ColumnList_Filter2}" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" Margin="10,0,0,0" />
                        <TextBox Text="{Binding Path=Filter_2}" Margin="10,0,0,0" Width="290" Height="25"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>



    <DataTemplate x:Key="SourceTableItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6" VerticalAlignment="Center" Height="35">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Margin="10,0" VerticalAlignment="Center" IsChecked="{Binding SourceChecked, Mode=TwoWay}" />
                <Border Grid.Column="1" Padding="3,0,0,0">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Button Grid.Column="2" Width="15" Height="15" Margin="3" Command="{Binding RenamerCommand, Mode=OneWay}" ToolTip="{x:Static Localisation:ResourcesCommon.Rename}">
                    <Button.Content>
                        <Image Source="/ViewAssistant;component/Resources/rename_16x16.png" />
                    </Button.Content>
                </Button>
                <Border Grid.Column="3">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="4" Padding="5" VerticalAlignment="Center" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="200"></ColumnDefinition>
                            <ColumnDefinition Width="90"></ColumnDefinition>
                            <ColumnDefinition Width="70"></ColumnDefinition>
                            <ColumnDefinition Width="140"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0" Width="16" Source="/Resources/alert_24x24.png" Margin="0,0,5,0" Visibility="{Binding HasSourceWarning, Converter={StaticResource HasErrorWarningConverter}}">
                            <Image.ToolTip>
                                <ToolTip Content="{Binding SourceWarning}"/>
                            </Image.ToolTip>
                        </Image>
                        <Image Grid.Column="1" Width="16" Source="/Resources/error_24x24.png" Margin="0,0,5,0" Visibility="{Binding HasSourceError, Converter={StaticResource HasErrorWarningConverter}}">
                            <Image.ToolTip>
                                <ToolTip Content="{Binding SourceError}"/>
                            </Image.ToolTip>
                        </Image>

                        <TextBlock Grid.Column="2" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="3" HorizontalAlignment="Left" Text="{Binding SourceRowCount}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <Button Grid.Column="4" HorizontalAlignment="Center" Width="60" Content="{x:Static Localisation:ResourcesCommon.View}" Tag="{Binding Name}" Command="{Binding MainModel.ShowSourceSpecialCommand}" CommandParameter="{Binding}"/>
                        <ProgressBar Grid.Column="5" Maximum="{Binding SourceProgress.Maximum}" 
                                                 Minimum="{Binding SourceProgress.Minimum}" 
                                                 Value="{Binding SourceProgress.Progress, Mode=OneWay}" 
                                                 Width="Auto"></ProgressBar>
                        <TextBlock Grid.Column="5" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding SourceProgress.Description}"></TextBlock>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="SourceColumnItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6">
            <Grid Height="35">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="15" Height="15" Margin="3" Command="{Binding RenamerCommand, Mode=OneWay}" ToolTip="{x:Static Localisation:ResourcesCommon.Rename}">
                    <Button.Content>
                        <Image Source="/ViewAssistant;component/Resources/rename_16x16.png" />
                    </Button.Content>
                </Button>
                <Border Grid.Column="1">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Image Grid.Column="2" Width="16" Source="/Resources/error_24x24.png" Margin="5,0,5,0" Visibility="{Binding HasSourceError, Converter={StaticResource HasErrorWarningConverter}}">
                    <Image.ToolTip>
                        <ToolTip Content="{Binding SourceError}"/>
                    </Image.ToolTip>
                </Image>

                <Border Grid.Column="3" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>

                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding SourceOptimizationTypeString}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="2" HorizontalAlignment="Left" Text="{Binding SourceInfo.Type}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ViewboxTableItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6" VerticalAlignment="Center" Height="35">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <CheckBox Grid.Column="0" Margin="10,0" VerticalAlignment="Center" IsChecked="{Binding ViewboxChecked, Mode=TwoWay}" />
                <Border Grid.Column="1" Padding="3,0,0,0">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Button Grid.Column="2" Width="15" Height="15" Margin="3" Command="{Binding ConfigureTableTextsCommand, Mode=OneWay}">
                    <Button.Content>
                        <Image Source="/Resources/globe_16x16.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <ListBox ItemsSource="{Binding Path=Info.Descriptions, Mode=OneWay}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal"  Height="25">
                                        <Label Content="{Binding Key, Mode=OneWay}" Width="50"/>
                                        <Label Content="{Binding Value, Mode=OneWay}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Button.ToolTip>
                </Button>
                <Border Grid.Column="3">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="4" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="200"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>
                            <ColumnDefinition Width="200"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0" Width="16" Source="/Resources/alert_24x24.png" Margin="0,0,5,0" Visibility="{Binding HasViewboxWarning, Converter={StaticResource HasErrorWarningConverter}}">
                            <Image.ToolTip>
                                <ToolTip Content="{Binding ViewboxWarning}"/>
                            </Image.ToolTip>
                        </Image>
                        <Image Grid.Column="1" Width="16" Source="/Resources/error_24x24.png" Margin="0,0,5,0" Visibility="{Binding HasViewboxError, Converter={StaticResource HasErrorWarningConverter}}">
                            <Image.ToolTip>
                                <ToolTip Content="{Binding ViewboxError}"/>
                            </Image.ToolTip>
                        </Image>

                        <TextBlock Grid.Column="2" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="3" HorizontalAlignment="Left" Text="{Binding ViewboxRowCount}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <ProgressBar Grid.Column="4" Maximum="{Binding ViewboxProgress.Maximum}" 
                                                 Minimum="{Binding ViewboxProgress.Minimum}" 
                                                 Value="{Binding ViewboxProgress.Progress, Mode=OneWay}" 
                                                 Width="Auto" ></ProgressBar>
                        <TextBlock Grid.Column="4" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ViewboxProgress.Description}"></TextBlock>

                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="ViewboxColumnItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6">
            <Grid Height="35" x:Name="gridMainColumnItem" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Width="15" Height="15" Margin="3" Command="{Binding ConfigureColumnTextsCommand, Mode=OneWay}">
                    <Button.Content>
                        <Image Source="/Resources/globe_16x16.png"/>
                    </Button.Content>
                    <Button.ToolTip>
                        <ListBox ItemsSource="{Binding Path=Info.Descriptions, Mode=OneWay}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal"  Height="25">
                                        <Label Content="{Binding Key, Mode=OneWay}" Width="50"/>
                                        <Label Content="{Binding Value, Mode=OneWay}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Button.ToolTip>
                </Button>
                <Border Grid.Column="1">
                    <Separator>
                        <Separator.LayoutTransform>
                            <RotateTransform Angle="90" />
                        </Separator.LayoutTransform>
                    </Separator>
                </Border>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <StackPanel x:Name="stpViewboxColumnItemControls" Background="BurlyWood">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                            <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding ViewboxInfo.DataType}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                            <ComboBox Grid.Column="2" Margin="0,0,10,0" ItemsSource="{Binding Path=MainModel.OptimizationTypeTexts}" DisplayMemberPath="Name" SelectedValuePath="OptimizationType" SelectedValue="{Binding Path=ViewboxOptimizationType, Mode= TwoWay}"></ComboBox>
                            <ComboBox Grid.Column="3" Margin="0,0,10,0" ItemsSource="{Binding Path=MainModel.OperatorsTexts}" DisplayMemberPath="Name" SelectedValuePath="OperatorsForAssistant" SelectedValue="{Binding Path=ViewboxParamOperator, Mode= TwoWay}"></ComboBox>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=ViewboxOptimizationType, Mode=OneWay }" Value="0"/>
                    <Condition Binding="{Binding Path=ViewboxParamOperator, Mode=OneWay}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <!--<Setter TargetName="gridMainColumnItem" Property="Background" Value="Transparent"/>-->
                <Setter TargetName="stpViewboxColumnItemControls" Property="Background" Value="Transparent"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="ViewboxSpecialColumnItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6">
            <Grid Height="35">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <StackPanel>
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition Width="150"></ColumnDefinition>
                                <ColumnDefinition Width="150"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                                <ColumnDefinition Width="100"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                            <ComboBox Grid.Column="1" Margin="0,0,10,0" ItemsSource="{Binding Path=MainModel.OptimizationTypeTexts}" DisplayMemberPath="Name" SelectedValuePath="OptimizationType" SelectedValue="{Binding Path=ViewboxOptimizationType, Mode= TwoWay}"></ComboBox>

                            <ComboBox Grid.Column="2" Margin="0,0,10,0" ItemsSource="{Binding Path=TableModel.ViewboxColumns}" DisplayMemberPath="Name" SelectedValuePath="Name" SelectedValue="{Binding Path=FromColumn, Mode= TwoWay}"></ComboBox>
                            <TextBox Grid.Column="3" Margin="0,0,10,0" Text="{Binding Path=FromColumnFormat, Mode= TwoWay}"></TextBox>
                            <ComboBox Grid.Column="4" Margin="0,0,10,0" ItemsSource="{Binding Path=MainModel.OperatorsTexts}" DisplayMemberPath="Name" SelectedValuePath="OperatorsForAssistant" SelectedValue="{Binding Path=ViewboxParamOperator, Mode= TwoWay}"></ComboBox>
                            <Button Grid.Column="5" Name="RemoveSpecial" Command="{Binding MainModel.DeleteSpecialCommand}" CommandParameter="{Binding}">Remove column</Button>
                        </Grid>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="FinalTableItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6" VerticalAlignment="Center" Height="35">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>
                            <ColumnDefinition Width="70"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding FinalRowCount}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <Button Grid.Column="2" HorizontalAlignment="Center" Width="60" Content="{x:Static Localisation:ResourcesCommon.View}" Tag="{Binding Name}" Command="{Binding MainModel.ShowFinalSpecialCommand}" CommandParameter="{Binding}"  IsEnabled="{Binding ViewboxProgressIsBusy}"/>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="FinalColumnItem">
        <Border BorderBrush="{StaticResource AvdMenuSplitter}" Background="{StaticResource AvdMenuBackground}" BorderThickness="1" Margin="6,0,6,6">
            <Grid Height="35" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="2" Padding="5" Name="MyBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource ItemSelectedToColorConverter}, Path=IsSelected}">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250"></ColumnDefinition>
                            <ColumnDefinition Width="100"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding FinalInfo.Type}" FontWeight="Bold" Foreground="{StaticResource TextColorBrush}" TextWrapping="Wrap" />

                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>