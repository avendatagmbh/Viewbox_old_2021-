<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ArchivingArchiving" xml:space="preserve">
    <value>archiving</value>
  </data>
  <data name="ArchivingButtonCheckAll" xml:space="preserve">
    <value>(Un)Check all</value>
  </data>
  <data name="ArchivingButtonCheckArchived" xml:space="preserve">
    <value>Check all archived</value>
  </data>
  <data name="ArchivingButtonCheckNotInSP" xml:space="preserve">
    <value>Check not in SP</value>
  </data>
  <data name="ArchivingButtonCheckRestored" xml:space="preserve">
    <value>Check all restored</value>
  </data>
  <data name="ArchivingButtonStartArchiving" xml:space="preserve">
    <value>Archive selected</value>
  </data>
  <data name="ArchivingButtonStartDetection" xml:space="preserve">
    <value>Check unused</value>
  </data>
  <data name="ArchivingButtonStartExportingUsed" xml:space="preserve">
    <value>Export used tables</value>
  </data>
  <data name="ArchivingButtonStartRestoring" xml:space="preserve">
    <value>Restore selected</value>
  </data>
  <data name="ArchivingLabelIsArchived" xml:space="preserve">
    <value>Is archived</value>
  </data>
  <data name="ArchivingLabelTableName" xml:space="preserve">
    <value>Table name</value>
  </data>
  <data name="ArchivingNoScriptFileForDetection" xml:space="preserve">
    <value>Detection failed as there are no script files to process!</value>
  </data>
  <data name="ArchivingProgressDialogTitleDetectionStarted" xml:space="preserve">
    <value>Detecting used tables in viewscripts, please wait...</value>
  </data>
  <data name="ArchivingProgressDialogTitleStarted" xml:space="preserve">
    <value>Table processing is in progress, please wait...</value>
  </data>
  <data name="ArchivingProgressErrorArchive" xml:space="preserve">
    <value>Table archiving failed! Error: </value>
  </data>
  <data name="ArchivingProgressErrorRestore" xml:space="preserve">
    <value>Table restoring failed! Error:</value>
  </data>
  <data name="ArchivingRestoring" xml:space="preserve">
    <value>restoring</value>
  </data>
  <data name="ArchivingTableArchivingCancelledArchive" xml:space="preserve">
    <value>Table archiving cancelled!</value>
  </data>
  <data name="ArchivingTableArchivingCancelledRestore" xml:space="preserve">
    <value>Table restoring cancelled!</value>
  </data>
  <data name="ArchivingTableArchivingErrorArchive" xml:space="preserve">
    <value>Table archiving failed! Error:</value>
  </data>
  <data name="ArchivingTableArchivingErrorRestore" xml:space="preserve">
    <value>Table restoring failed! Error:</value>
  </data>
  <data name="ArchivingTableArchivingSuccessfulArchive" xml:space="preserve">
    <value>Table archiving successful!</value>
  </data>
  <data name="ArchivingTableArchivingSuccessfulRestore" xml:space="preserve">
    <value>Table restoring successful!</value>
  </data>
  <data name="ArchivingTableListEmpty" xml:space="preserve">
    <value>Detect could not be executed until the table list is empty!</value>
  </data>
  <data name="ArchivingTableLoaded" xml:space="preserve">
    <value> loaded.</value>
  </data>
  <data name="ArchivingTableSelector" xml:space="preserve">
    <value>Table archiving/restoring setup</value>
  </data>
  <data name="ArchivingTableSelectorLabel" xml:space="preserve">
    <value>Please select tables to archive or restore!</value>
  </data>
  <data name="ArchivingUnexpectedError" xml:space="preserve">
    <value>Unexpected error occured during {0}!</value>
  </data>
  <data name="ArchivingUsedTableCollectingCancelled" xml:space="preserve">
    <value>Used table collecting cancelled!</value>
  </data>
  <data name="ArchivingUsedTableCollectingSuccessful" xml:space="preserve">
    <value>Used table collecting successful!</value>
  </data>
  <data name="ArchivingUsedTableDetectionError" xml:space="preserve">
    <value>Used table detection failed! Error: </value>
  </data>
  <data name="ArchivingUsedTableDetectionUnexpectedError" xml:space="preserve">
    <value>Unexpected error occured during used table s detection!</value>
  </data>
  <data name="DatabaseLabelTableName" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>failed</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>finished</value>
  </data>
  <data name="GenerateIndexData" xml:space="preserve">
    <value>Generate index data</value>
  </data>
  <data name="QuestionResetOptimizations" xml:space="preserve">
    <value>Do you want to reset optimizations based on order areas?</value>
  </data>
  <data name="ReinstallOptimizationsComplete" xml:space="preserve">
    <value>Reinstall optimizations complete!</value>
  </data>
  <data name="ReinstallOptimizationsFailed" xml:space="preserve">
    <value>Reinstall optimizations failed! {0}</value>
  </data>
  <data name="ReloadOptimizations" xml:space="preserve">
    <value>Reload optimizations</value>
  </data>
  <data name="SaveTablesToCSV" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value>started</value>
  </data>
  <data name="UpgradeDatabase" xml:space="preserve">
    <value>Update the Viewbox database</value>
  </data>
  <data name="UpgradeMsg" xml:space="preserve">
    <value>The Viewbox database is out of date. The database should be updated, if not, then the current version of the View Builder cannot be used.</value>
  </data>
</root>