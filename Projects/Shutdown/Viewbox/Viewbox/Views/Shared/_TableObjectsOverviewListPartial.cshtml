@using System.Globalization
@using SystemDb
@using Viewbox
@using Viewbox.Properties
@model Viewbox.Models.ITableObjectList
@helper PrintParameter(IParameter param)
{
    <!-- _TableObjectsOverviewListPartial.cshtml PrintParameter -->
    <div class="parameter">
        <span>@param.GetDescription()</span>
        @if (param.Values != null && !param.UserDefined)
        {
            <input name="param" type="text" class="text field dropdown" value="@param.Default" readonly />
            <div class="dropdown-menu-container">
                <div class="dropdown-menu">
                    @foreach (var v in param.Values)
                    {
                        <div class="entry">
                            @if (v.Value != v.GetDescription())
                            {
                                <div class="value">@v.Value</div>
                                <div class="description">@v.GetDescription()</div>
                            }
                            else
                            {
                                <div class="value-only">@v.Value</div>
                            }
                        </div>
                    }
                </div>
            </div>
        }
        else if (param.DataType == SqlType.Date)
        {
            //Kalenderjahr auf aktuell gewähltes Jahr stellen!
            var date = DateTime.Now.ToShortDateString();
            var opt = ViewboxSession.Optimizations.LastOrDefault();
            var old_year = DateTime.Now.Year;
            var year = DateTime.Now.Year;
            if (opt != null)
            {
                var value = opt.GetOptimizationValue(OptimizationType.SortColumn);
                if (value != null && !String.IsNullOrWhiteSpace(value))
                {
                    int.TryParse(value, out year);
                }
            }
            string defaultDate = "";
            if (param.Default != null)
            {
                DateTime defaultDateTime;
                DateTime.TryParseExact(param.Default, "yyyyMMddHHmmss", new CultureInfo(ViewboxSession.Language.CountryCode), DateTimeStyles.None, out defaultDateTime);
                defaultDate = defaultDateTime.ToShortDateString();
            }
            date = date.Replace(old_year.ToString(), year.ToString());
            string dateValue = "";
            if (param.Default == null)
            {
                dateValue = date;
            }
            else if (param.Default != "")
            {
                dateValue = defaultDate;
            }
            <div class="item-id">@(param.Id)</div>
            <input name="param" type="text" class="text field reportdate report-parameter-validate @(param.HistoryValues.Count > 0 ? "dropdown" : "")" value="@dateValue" />
            if (param.HistoryValues.Count > 0)
            {
                <div class="dropdown-menu-container">
                    <div class="dropdown-menu">
                        @foreach (var v in param.HistoryValues)
                        {
                            <div class="entry">
                                <div class="value-only">@v.Value</div>
                            </div>
                        }
                    </div>
                </div>
            }
            <div class="report-parameter-error hide"></div>
        }
        else if (param.DataType == SqlType.Boolean)
        {
            <input type="hidden" value="@(param.Default == null || param.Default.ToLower() == "true" ? "true" : "false")" name="param" />
            <input type="checkbox" class="boolean field" @(param.Default == null || param.Default.ToLower() == "true" ? "checked='checked'" : "") />
        }
        else if (param.HistoryValues.Count > 0 && param.UserDefined)
        {
            <div class="item-id">@(param.Id)</div>
            <input name="param" type="text" class="report-parameter-validate text field dropdown @(param.DataType == SqlType.Numeric || param.DataType == SqlType.Decimal || param.DataType == SqlType.Integer ? "thousand-separator" : "")" value="@param.Default" />
            <div class="dropdown-menu-container">
                <div class="dropdown-menu">
                    @foreach (var v in param.HistoryValues)
                    {
                        <div class="entry">
                            <div class="value-only">@v.Value</div>
                        </div>
                    }
                </div>
            </div>
            <div class="report-parameter-error hide"></div>
        }
        else
        {
            <div class="item-id">@(param.Id)</div>
            <input name="param" type="text" class="report-parameter-validate text field @(param.DataType == SqlType.Numeric || param.DataType == SqlType.Decimal || param.DataType == SqlType.Integer ? "thousand-separator" : "")" value="@param.Default" />
            <div class="report-parameter-error hide"></div>
        }
    </div>
}
@helper PrintForm(ITableObject TableObject)
{
    using (Html.BeginForm("Index", "DataGrid", new { id = TableObject.Id }))
    {
        <input type="submit" class="submit hide" value="OK" />
        <div class="additional" style="display: inline-block; position: relative; top: 0px; width: 100px;">
            @if (TableObject.UserDefined && (ViewboxSession.User.IsSuper || ViewboxSession.User.CanGrant))
            {
                <div class="delete"><span class="hide">@TableObject.Id</span><a>@Resources.Remove</a></div>
            }
            @if (!TableObject.IsArchived)
            {
                if (ViewboxSession.User.IsSuper && ViewboxSession.User.UserName == "avendata_admin")
                {
                    if (TableObject.IsVisible)
                    {
                        <div class="hide-table"><span class="hide">@TableObject.Id</span><a>@Resources.Hide</a></div>
                    }
                    else
                    {
                        <div class="hide-table"><span class="hide">@TableObject.Id</span><a>@Resources.Show</a></div>
                    }
                }
            }
            @if (ViewboxSession.IsMySQL)
            {
                if (ViewboxSession.User.UserName == "avendata_qs" || ViewboxSession.User.UserName == "avendata_admin")
                {
                    if (TableObject.IsArchived)
                    {
                        <div class="archive-table" style="height: 20px;">
                            @Resources.ArchivedTable <br />
                            @if (ViewboxSession.User.IsSuper)
                            {
                                <a href="@Url.Action("Archive", "TableList", new {id = TableObject.Id, archive = ViewboxDb.ArchiveType.Restore})">@Resources.Restore</a>
                            }
                        </div>
                    }
                    else
                    {
                        if (ViewboxSession.User.UserName == "avendata_qs")
                        { 
                            <div style="height: 12px;">
                            </div>
                        }
                        <div class="archive-table" style="height: 20px;">
                            @if (ViewboxSession.User.IsSuper)
                            {
                                <a href="@Url.Action("Archive", "TableList", new {id = TableObject.Id, archive = ViewboxDb.ArchiveType.Archive})">@Resources.Archive </a>
                            }
                        </div>
                    }
                }
            }
        </div>
    }
}
@{
    String ViewType = "";

}

@foreach (var TableObject in Model.TableObjects)
{
    <!-- _TableObjectsOverviewListPartial.cshtml -->
    var classname = String.Empty;
    if (TableObject == Model.SelectedTableObject)
    {
        classname = "aktiv";
    }
    if (Model.RightsMode)
    {
        classname += TableObject.IsAllowedInRightsMode() ? " readable" : " not-readable";
    }
    if (Model.SortColumn == 4 && TableObject.Type == TableType.View && TableObject.GetObjectType() != ViewType)
    {
        ViewType = TableObject.GetObjectType();
        <tr><td colspan="6" style="padding: 5px 0;"><div class="typegroup">@ViewType</div></td></tr>
    }
    <tr class="tableobject @classname">
        <td class="tono" title="">

            <div data-tableid="@TableObject.Id">@TableObject.TransactionNumber</div>
            @*@if (Model.RightsMode)
            {
                var right = TableObject.IsAllowedInRightsMode() ? RightType.None : RightType.Read;
            <td class="rights">
                <a class="right-switch" href="@Url.Action("UpdateTableObjectRight", "UserManagement", new
                                                        {
                                                            id = TableObject.Id,
                                                            right,
                                                            json = true,
                                                            search = Model.SearchPhrase,
                                                            page = Model.CurrentPage,
                                                            size = Model.PerPage,
                                                            showEmpty = Model.ShowEmpty,
                                                            sortColumn = Model.SortColumn,
                                                            direction = Model.Direction == null ? ViewboxDb.SortDirection.Ascending : Model.Direction,
                                                            catRefresh = false,
                                                            fullRefresh = false,
                                                            showHidden = Model.ShowHidden,
                                                            showArchived = Model.ShowArchived
                                                        })"></a>
                @Html.Partial("_TooltipPartial", ViewboxSession.GetRightInfo(TableObject.Id, UpdateRightType.TableObject, TableObject.IsAllowedInRightsMode()))
            </td>
            }*@
        <td class="toname view">
            @if (!TableObject.IsArchived)
            {
                <a class="viewoptions" style="width: 355px; word-wrap: break-word;" href="@Url.Action("Index","DataGrid", new { id = TableObject.Id })">
                    @TableObject.GetDescription().ToUpper()
                </a>
                if (ViewboxSession.User.UserName == "avendata_qs" || ViewboxSession.User.UserName == "avendata_admin")
                {
                    <input type="hidden" class="description" value="@TableObject.GetDescription()" />
                    <input type="text" class="editTableName" value="@TableObject.GetDescription()" style="display: none;" />
                    <span class="hide">@TableObject.Id</span>
                    <a class="rename-table" data-state="rename">@Resources.Rename</a>
                    <a class="rename-table" data-state="done" style="display: none;">@Resources.Done</a>
                    <a class="rename-table" data-state="cancel" style="display: none;">@Resources.Cancel</a>
                }
            }
            else
            {
                if (ViewboxSession.User.IsSuper)
                {
                    <div class="archive-table"><a href="@Url.Action("Archive", "TableList", new { id = TableObject.Id, archive = ViewboxDb.ArchiveType.Restore })">@TableObject.GetDescription().ToUpper()</a></div>
                }
                else
                {
                    <div class="tryarchive-table"><a href="@Url.Action("TryArchive", "TableList")">@TableObject.GetDescription().ToUpper()</a></div>
                }
            }
        </td>



            @if (Model.Type == TableType.Issue)
            {
                var Issue = TableObject as IIssue;
                <td class="toparams text-right" colspan="3">
                    @using (Html.BeginForm(Issue.IssueType != IssueType.Fake ? "ExecuteIssue" : "Index", "DataGrid", new { id = Issue.Id }, FormMethod.Get, new { autocomplete = "off" }))
                    {
                        var first = true;
                        if (Issue.Parameters.Count > 0)
                        {
                            <div class="first-parameter">
                                @PrintParameter(Issue.Parameters.First())
                            </div>
                            if (Issue.Parameters.Count > 1)
                            {
                                <div class="arrow-orange-bottom-container">
                                    <div class="arrow-orange-bottom"></div>
                                </div>
                            }
                        }
                        <div class="parameters">
                            @foreach (var Parameter in Issue.Parameters)
                            {
                                if (first)
                                {
                                    first = false;
                                    continue;
                                }<text>@PrintParameter(Parameter)</text>
                            }
                        </div>
                        <div class="additional">
                            @if (Issue.UserDefined && (ViewboxSession.User.IsSuper || ViewboxSession.User.CanGrant))
                            {
                                <div class="delete"><span class="hide">@Issue.Id</span><a>@Resources.Remove</a></div>
                                <div class="edit"><span class="hide">@Issue.Id</span><a>@Resources.Edit</a></div>
                            }

                            @if (TableObject.IsVisible)
                            {
                                <div class="hide-table"><span class="hide">@Issue.Id</span><a>@Resources.Hide</a></div>
                            }
                            else
                            {
                                <div class="hide-table"><span class="hide">@Issue.Id</span><a>@Resources.Show</a></div>
                            }

                        </div>
                        <input type="submit" class="submit hide" value="OK" />
                    }
                </td>
            }
            else
            {
                <td class="torowcount"><a class="rowcount">@String.Format("{0:#,0}", TableObject.GetRowCount())</a></td>
                if (Model.Type == TableType.View)
                {
                    <td class="toobjecttype text-right" style="line-height: 35px;">
                        <span style="height: 100%; padding: 5px">@TableObject.GetObjectType()</span>
                    </td>
                    <td class="toparams4 text-right">@PrintForm(TableObject)</td>
                }
                else
                {
                    <td colspan="2" class="toparams2 text-right">@PrintForm(TableObject)</td>
                }
            }
        </tr>
}
<!-- _TableObjectsOverviewListPartial.cshtml -->
<tr>
    <td colspan="6" class="replace">
        <div class="nav-controls">
            @if (Model.Count > Model.PerPage)
            {
                var controller = "IssueList";
                if (Model.Type == TableType.Table)
                {
                    controller = "TableList";
                }
                if (Model.Type == TableType.View)
                {
                    controller = "ViewList";
                }
                var url = "/" + controller + "/Index/";
                @Html.Hidden("listUrl", url)
                if (Model.CurrentPage > 0)
                {
                    <a href="@(url + "?page=0")" class="iconx first"></a>
                    <a href="@(url + "?page=" + (Model.CurrentPage - 1))" class="iconx back"></a>
                }
                else
                {
                    <span class="iconx first"></span>
                    <span class="iconx back"></span>
                }
                if (Model.Count > 0)
                {
                    <span>@((Model.From + 1).ToString("#,0")) -</span>
                    <span class="current">@((Model.To + 1).ToString("#,0"))</span>
                    <span>/</span>
                    <span class="count">@Model.Count.ToString("#,0")</span>
                    <span>@Model.LabelNumberOfRows</span>
                    if (Model.Count > 25)
                    {
                        <span> | </span>
                        <span>@Resources.Page :</span>
                        //using (Html.BeginForm(null, null, FormMethod.Get, new Dictionary<string, object> { { "id", "page_count" }, { "style", "display:inline" } }))
                        //{
                            <input class="pagecount" name="page" type="text" id="pageCount" value="@(Model.CurrentPage + 1)" />
                            @Html.Hidden("maxPagesCount", Model.LastPage)
                            <span>/</span>
                            <span id="pagecount">@((Model.LastPage + 1).ToString("#,0"))</span>
                            <input type="hidden" />
                        //}
                    }
                }
                else
                {
                    <span>@Model.LabelNoData</span>
                }
                if (Model.CurrentPage < Model.LastPage)
                {
                    <a href="@(url + "?page=" + (Model.CurrentPage + 1))" class="iconx next"></a>
                    <a href="@(url + "?page=" + Model.LastPage)" class="iconx last"></a>
                }
                else
                {
                    <span class="iconx next"></span>
                    <span class="iconx last"></span>
                }

                <div class="hide page">@Model.CurrentPage</div>
                <div class="hide size">@Model.PerPage</div>
            }
            <div class="hide sortColumn">@Model.SortColumn</div>
            <div class="hide direction">@Model.Direction</div>
        </div>
        <!-- _TableObjectsOverviewListPartial.cshtml -->
        <div class="tabbar overview-tabbar">
            @{
                foreach (var Category in Model.Categories)
                {
                    RightType right = RightType.None;
                    RightType typeRight = RightType.None;
                    var rightsclass = String.Empty;
                    String rightsTypeclass = String.Empty;
                    if (Model.RightsMode)
                    {
                        //IsAllowed methods are only called once because they are more processor hungry
                        right = Category.IsAllowedInRightsMode() ? RightType.None : RightType.Read;
                        typeRight = Category.IsTableTypeAllowedInRightsMode(Model.Type) ? RightType.None : RightType.Read;
                        //the eye that represents that a table can be added or is it already added to user or role
                        rightsclass += (right == RightType.None) ? "readable" : "not-readable";
                        rightsTypeclass += (typeRight == RightType.None) ? "readable" : "not-readable";
                    }
                    if (Model.RightsMode)
                    {
                        <div class="tabheader @rightsclass">

                            <!--
                            <a class="headercontent" href="@Url.Action(null, new {id = Category.Id, sortColumn = Model.SortColumn, direction = Model.Direction, page = 0, size = Model.PerPage, json = true, search = Model.SearchPhrase})">@(Resources.Category + ":" + Category.GetName())</a>
                            -->
                            <a class="right-switch" href="@Url.Action("UpdateCategoryRight", "UserManagement", new
                                                                                       {
                                                                                           id = Category.Id,
                                                                                           type = Model.Type, right,
                                                                                           json = true,
                                                                                           search = Model.SearchPhrase,
                                                                                           page = Model.CurrentPage,
                                                                                           size = Model.PerPage,
                                                                                           showEmpty = Model.ShowEmpty,
                                                                                           sortColumn = Model.SortColumn,
                                                                                           direction = Model.Direction == null ? ViewboxDb.SortDirection.Ascending : Model.Direction,
                                                                                           showHidden = Model.ShowHidden
                                                                                       })"></a>
                            @Html.Partial("_TooltipPartial", ViewboxSession.GetRightInfo(Category.Id, UpdateRightType.Category, Category.IsAllowedInRightsMode()))
                        </div>
                    }
                    <div class="tabheader @(!(Model.ShowEmpty || Model.ShowHidden || Model.ShowArchived || Model.ShowEmptyHidden) ? "selected" : "") @rightsTypeclass">
                        @if (Model.ShowEmpty || Model.ShowHidden || Model.ShowArchived)
                        {
                            <a class="headercontent" href="@Url.Action(null, new {id = Category.Id, sortColumn = Model.SortColumn, direction = Model.Direction, page = 0, size = Model.PerPage, json = true, search = Model.SearchPhrase})">@(String.Format(Resources.VisibleTables, (Model.Type == TableType.Table ? Resources.Tables : (Model.Type == TableType.View ? Resources.Views : Resources.Issues))) + " (" + Model.TableCount.VisibleTableCount + ")")</a>
                        }
                        else
                        {
                            <div class="headercontent"> @(String.Format(Resources.VisibleTables, (Model.Type == TableType.Table ? Resources.Tables : (Model.Type == TableType.View ? Resources.Views : Resources.Issues))) + " (" + Model.TableCount.VisibleTableCount + ")")</div>
                        }
                    </div>
                }
    //}
            }
            @if (Model.Type != TableType.Issue)
            {
                <div class="tabheader show_empty @(Model.ShowEmpty ? "selected" : "")">@String.Format(Resources.EmptyTables, Model.Type == TableType.Table ? Resources.Tables : Resources.Views) (@Model.TableCount.EmptyTableCount)</div>
            }
            @if (Model.Type != TableType.Issue && ViewboxSession.IsAdmin && ViewboxSession.User.UserName == "avendata_admin")
            {
                <div class="tabheader show_hidden @(Model.ShowHidden ? "selected" : "")">@String.Format(Resources.HiddenTableObjects, Model.Type == TableType.Table ? Resources.Tables : Model.Type == TableType.View ? Resources.Views : Resources.Issues) (@Model.TableCount.InVisibleTableCount)</div>
            }        
            @if (Model.Type != TableType.Issue && ViewboxSession.IsAdmin  && ViewboxSession.User.UserName == "avendata_admin")
            {
                <div class="tabheader show_empty_hidden @(Model.ShowEmptyHidden ? "selected" : "")">@String.Format(Resources.EmptyHiddenTableObjects, Model.Type == TableType.Table ? Resources.Tables : Model.Type == TableType.View ? Resources.Views : Resources.Issues) (@Model.TableCount.EmptyInVisibleTableCount)</div>
            }
            @if (Model.Type != TableType.Issue && (ViewboxSession.User.UserName == "avendata_qs" || ViewboxSession.User.UserName == "avendata_admin"))
            {
                <div class="tabheader show_archived @(Model.ShowArchived ? "selected" : "")">@String.Format(Resources.ArchivedTableObjects, Model.Type == TableType.Table ? Resources.Tables : Model.Type == TableType.View ? Resources.Views : Resources.Issues) (@Model.TableCount.ArchivedTableCount)</div>
            }
        </div>
    </td>
</tr>