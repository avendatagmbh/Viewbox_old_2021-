@using SystemDb
@model Viewbox.Models.TableCrudModel
@helper PrintInput(int column)
{
    <input name="Model.Columns[@(column)].Type" type="hidden" value="@Model.Columns[column].Type"/>
    <input name="Model.Columns[@(column)].Name" type="hidden" value="@Model.Columns[column].Name"/>
    <input name="Model.Columns[@(column)].DisplayName" type="hidden" value="@Model.Columns[column].DisplayName"/>
    <input name="Model.Columns[@(column)].CalculateType" type="hidden" value="@Model.Columns[column].CalculateType"/>
    <input name="Model.Columns[@(column)].HasIndex" type="hidden" value="@Model.Columns[column].HasIndex"/>
    <input name="Model.Columns[@(column)].IndexDataGenerated" type="hidden" value="@Model.Columns[column].IndexDataGenerated"/>
    <input name="Model.Columns[@(column)].FromColumnId" type="hidden" value="@Model.Columns[column].FromColumnId"/>
    <input name="Model.Columns[@(column)].FromColumnName" type="hidden" value="@Model.Columns[column].FromColumnName"/>
    <input name="Model.Columns[@(column)].FromColumnTableDatabase" type="hidden" value="@Model.Columns[column].FromColumnTableDatabase"/>
    <input name="Model.Columns[@(column)].FromColumnTableTableName" type="hidden" value="@Model.Columns[column].FromColumnTableTableName"/>

    <input name="Model.Columns[@(column)].ColumnTableDatabase" type="hidden" value="@Model.Columns[column].ColumnTableDatabase"/>
    <input name="Model.Columns[@(column)].ColumnTableTableName" type="hidden" value="@Model.Columns[column].ColumnTableTableName"/>

    switch (Model.Columns[column].Type)
    {
        case (SqlType.String):
            {
                <input name="Model.Columns[@(column)].ValueString" type="text" class="text value @(Model.Columns[column].CalculateType == 2 ? "calculate-value" : "")" value="@Model.Columns[column].ValueString" @(Model.Columns[column].Calculated ? "disabled" : "")/>
                break;
            }
        case (SqlType.Date):
        case (SqlType.DateTime):
        case (SqlType.Time):
            {
                <input name="Model.Columns[@(column)].ValueDateTime" type="text" class="text value reportdate" value="@(Model.Columns[column].ValueDateTime.HasValue ? Model.Columns[column].ValueDateTime.Value.ToShortDateString() : "")" @(Model.Columns[column].Calculated ? "disabled" : "")/>
                break;
            }
        case (SqlType.Boolean):
            {
                <div>
                    <div class="checkb @(Model.Columns[column].ValueBool ? "checkboxon" : "checkboxoff")" >
                    </div>
                    <input name="Model.Columns[@(column)].ValueBool" type="hidden" value="@Model.Columns[column].ValueBool"/>
                </div>
                break;
            }
        case (SqlType.Numeric):
            {
                <input name="Model.Columns[@(column)].ValueNumericStr" type="text" class="text value thousand-separator @(Model.Columns[column].CalculateType == 2 ? "calculate-value" : "")" value="@Model.Columns[column].ValueNumericStr" @(Model.Columns[column].Calculated ? "disabled" : "")/>
                break;
            }
        case (SqlType.Decimal):
            {
                <input name="Model.Columns[@(column)].ValueDecimalStr" type="text" class="text value thousand-separator @(Model.Columns[column].CalculateType == 2 ? "calculate-value" : "")" value="@Model.Columns[column].ValueDecimalStr" @(Model.Columns[column].Calculated ? "disabled" : "")/>
                break;
            }
        case (SqlType.Integer):
            {
                <input name="Model.Columns[@(column)].ValueInt32" type="text" class="text value thousand-separator @(Model.Columns[column].CalculateType == 2 ? "calculate-value" : "")" value="@Model.Columns[column].ValueInt32" @(Model.Columns[column].Calculated ? "disabled" : "")/>
                break;
            }
    }
    if (Model.Columns[column].CalculateType != 1 && Model.Columns[column].HasIndex && Model.Columns[column].IndexDataGenerated)
    {
        <img class="select-distinct-column" src="/Content/img/buttons/button-book.png" alt="..." title="..." columnId="@Model.Columns[column].FromColumnId"  />
    }
}
<div>
    <div class="crud-data-header hide">
        @Model.Title
    </div>
    <input name="Model.Title" type="hidden" value="@Model.Title"/>
    <input name="Model.Id" type="hidden" value="@Model.Id"/>
    <input name="Model.Schema" type="hidden" value="@Model.Schema"/>
    <input name="Model.TableId" type="hidden" value="@Model.TableId"/>
    <input name="Model.Rowno" type="hidden" value="@Model.Rowno"/>
    @if (Model.Schema == 0)
    {
        <div class="crud-data-columns">
            @for (int i = 0; i < Model.Columns.Count; i++)
            {
                <div class="crud-data-column">
                    <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                    <div class="left crud-data-column-val">@PrintInput(i)</div>
                </div>
                <div class="clear">
                </div>
            }
        </div>
    }
    else if (Model.Schema == 1)
    {
        <div class="clear">
        </div>
        <div class="crud-data-columns">
            <div class="mitglieds crud-data-group">
                <div class="crud-data-group-header">
                    Mitglieder</div>
                <div class="crud-data-column">
                    @{
                        var i = Model.Columns.FindIndex(w => w.Name.ToLower() == "mitgliedsnummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
            </div>
            <div class="bankverbind crud-data-group">
                <div class="crud-data-group-header">
                    Bankverbindung</div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "wert");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i) EUR</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "kontostand");
                        <div class="left crud-data-column-desc">
                            <div class="left">@Model.Columns[i].DisplayName</div>
                            <div class="right crud-data-loading-place">
                                <div id="crud-data-loading" class="crud-data-loading hide">
                                </div>
                            </div>
                            <div class="clear">
                            </div>
                        </div>
                        <div class="left crud-data-column-val">
                            @PrintInput(i) EUR</div>
                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "bankkontonummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "blz");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "bank");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "swift");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "iban");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
            </div>
            <div class="transaktion crud-data-group">
                <div class="crud-data-group-header">
                    Transaktion</div>
                <div class="crud-data-column left">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "unterschift");


                        <div class="left crud-data-column-desc spec">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val spec">@PrintInput(i)</div>

                    }
                </div>
                <div class="crud-data-column left">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "gultig");
                        <div class="left crud-data-column-desc spec">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val spec">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="clear">
                </div>
                <div class="crud-data-column">
                    @{

                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "transaktionstyp");
                        if (i > -1)
                        {
                            <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                            <div class="left crud-data-column-val">@PrintInput(i)</div>
                            <div class="clear">
                            </div>
                        }
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "belegnummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "belegdatum");
                        if (i > -1)
                        {
                            <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                            <div class="left crud-data-column-val">@PrintInput(i)</div>
                            <div class="clear">
                            </div>
                        }
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "autorisierungsnr");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    else if (Model.Schema == 2)
    {
        <div class="clear">
        </div>
        <div class="crud-data-columns">
            <div class="mitglieds crud-data-group">
                <div class="crud-data-group-header">
                    Mitglieder</div>
                <div class="crud-data-column">
                    @{
                        var i = Model.Columns.FindIndex(w => w.Name.ToLower() == "mitgliedsnummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
            </div>
            <div class="bankverbind crud-data-group">
                <div class="crud-data-group-header">
                    Bankverbindung</div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "wert");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i) EUR</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "haendler_bnr");
                        if (i > -1)
                        {
                            <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                            <div class="left crud-data-column-val">@PrintInput(i)</div>
                            <div class="clear">
                            </div>
                        }
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "bankkontonummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "blz");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "bank");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "swift");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "iban");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>

                        <div class="clear">
                        </div>
                    }
                </div>
            </div>
            <div class="transaktion crud-data-group">
                <div class="crud-data-group-header">
                    Transaktion</div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "belegnummer");
                        <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                        <div class="left crud-data-column-val">@PrintInput(i)</div>
                        <div class="clear">
                        </div>
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "datum");
                        if (i > -1)
                        {
                            <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                            <div class="left crud-data-column-val">@PrintInput(i)</div>
                            <div class="clear">
                            </div>
                        }
                    }
                </div>
                <div class="crud-data-column">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "erstellt_am");
                        if (i > -1)
                        {
                            <div class="left crud-data-column-desc">@Model.Columns[i].DisplayName</div>
                            <div class="left crud-data-column-val">@PrintInput(i)</div>
                            <div class="clear">
                            </div>
                        }
                    }
                </div>
                <div class="hide hidden">
                    @{
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "kontostand");
                        if (i > -1)
                        {
                            @PrintInput(i)
                        }
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "autorisierungsnr");
                        if (i > -1)
                        {
                            @PrintInput(i)
                        }
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "unterschift");
                        if (i > -1)
                        {
                            @PrintInput(i)
                        }
                        i = Model.Columns.FindIndex(w => w.Name.ToLower() == "gultig");
                        if (i > -1)
                        {
                            @PrintInput(i)
                        }


                    }
                </div>
            </div>
        </div>
    }
</div>