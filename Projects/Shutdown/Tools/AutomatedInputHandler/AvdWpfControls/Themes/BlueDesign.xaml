<ResourceDictionary x:Class="AvdWpfControls.Themes.BlueDesign"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:AvdWpfControls" 
                    xmlns:Converters="clr-namespace:AvdWpfControls.Converters"
                    xmlns:Localisation="clr-namespace:AvdWpfControls.Localisation"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:dg="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:l="clr-namespace:AvdWpfControls.DeletableTextBox"
                    xmlns:Controls="clr-namespace:AvdWpfControls">
   
    <Converters:BoolInverter x:Key="BoolInverter" />
    <Converters:ObjectToTypeStringConverter x:Key="ObjectToTypeStringConverter" />
    <Converters:ValueExistsToBoolConverter x:Key="ValueExistsToBoolConverter" />
    <Converters:ValueExistsToVisibilityConverter x:Key="ValueExistsToVisibilityConverter" />
    <Converters:BoolToVisibilityConverter x:Key="trueToVisibilityConverter" VisibleValue="True" HiddenState="Collapsed"/>
    <Converters:BoolToVisibilityConverter x:Key="falseToVisibilityConverter" VisibleValue="False" HiddenState="Collapsed"/>
    <Converters:DataGridCellToTextConverter x:Key="dataGridCellToTextConverter"/>


    <!--Main background color.-->
    <SolidColorBrush x:Key="NewDesignLightGreyBrush" Color="#F5F5F5"></SolidColorBrush>
    <!--Titles above controls (lists, table selectors, etc.).-->
    <SolidColorBrush x:Key="NewDesignDeepBlueBrush" Color="#243553"></SolidColorBrush>
    <!--Headers of controls (mainly lists), or tab control, etc.-->
    <SolidColorBrush x:Key="NewDesignBlueBrush" Color="#637493"></SolidColorBrush>
    <!--Special controls color (checkbox labels, specific list items, etc.).-->
    <SolidColorBrush x:Key="NewDesignLightBlueBrush" Color="#0000FF"></SolidColorBrush>
    <!--White color.-->
    <SolidColorBrush x:Key="NewDesignWhiteBrush" Color="White"></SolidColorBrush>
    <!--Black color.-->
    <SolidColorBrush x:Key="NewDesignBlackBrush" Color="Black"></SolidColorBrush>
    <!--Search box color.-->
    <SolidColorBrush x:Key="SearchBoxTextBrush" Color="#bdbdbd"></SolidColorBrush>
    <!--Header color.-->
    <SolidColorBrush x:Key="HeaderTextBrush" Color="#ffffff"></SolidColorBrush>
    <!--Data background color.-->
    <SolidColorBrush x:Key="DataBackgroundBrush" Color="#E5E5E5"></SolidColorBrush>
    <!--Data background color.-->
    <SolidColorBrush x:Key="ConnectionStateConnectedBrush" Color="#009c00"></SolidColorBrush>
    <!--Data background color.-->
    <SolidColorBrush x:Key="ConnectionStateNotConnectedBrush" Color="#CC4500"></SolidColorBrush>
    <!--Data background color.-->
    <SolidColorBrush x:Key="TextColorBrush" Color="#333333"></SolidColorBrush>
    
    <SolidColorBrush x:Key="ListBoxTextBackgroundBrush" Color="#F4F8FF"></SolidColorBrush>
    <SolidColorBrush x:Key="ListBoxSelectionBrush" Color="#d9f3ac"></SolidColorBrush>
    <SolidColorBrush x:Key="UnPressedTabPageColor" Color="#cccccc" />

    <SolidColorBrush x:Key="AvdMenuBackground" Color="#F5F5F5" />
    <SolidColorBrush x:Key="AvdMenuTextEnabled" Color="#465570" />
    <SolidColorBrush x:Key="AvdMenuTextDisabled" Color="Gray" />
    <SolidColorBrush x:Key="AvdMenuTextMouseOver" Color="#009c00" />
    <SolidColorBrush x:Key="AvdMenuSplitter" Color="#D0A4A4A4" />
    <LinearGradientBrush x:Key="AvdMenuItemBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#DADADA" Offset="0" />
        <GradientStop Color="#D0A4A4A4" Offset="1" />
    </LinearGradientBrush>
    <!--<LinearGradientBrush x:Key="TransparentAvdMenuItemBorder" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F0F0F0" Offset="0" />
        <GradientStop Color="#DADADA" Offset="1" />
    </LinearGradientBrush>-->

    <!--<SolidColorBrush x:Key="AvdMenuButtonBackground" Color="#EBEBEB" />-->
    <LinearGradientBrush x:Key="AvdMenuButtonBackground" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#F0F0F0" Offset="0"/>
        <GradientStop Color="#DADADA" Offset="0.8"/>
        <GradientStop Color="#DADADA" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AvdMenuButtonPressedBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="#F0F0F0" Offset="0.5"/>
        <GradientStop Color="#F0F0F0" Offset="1"/>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="AvdMenuButtonBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#F5F5F5" Offset="0"/>
        <GradientStop Color="#D0A4A4A4" Offset="0.2"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AvdMenuButtonMouseOverBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="#F0F0F0" Offset="0.5"/>
        <GradientStop Color="#F0F0F0" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="{x:Type Controls:CheckBoxWithInfoImage}" TargetType="{x:Type Controls:CheckBoxWithInfoImage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CheckBoxWithInfoImage}">
                    <Border x:Name="borderChbWithInfoOuter">
                        <Grid x:Name="gridChbWithInfo">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" x:Name="CheckboxBorder">
                                <CheckBox x:Name="chbCheckBoxWithInfoImage"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                  Path=IsChecked}">
                                    <AccessText TextWrapping="Wrap" Text="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                  Path=Content, Mode=OneWay}"></AccessText>
                                </CheckBox>
                            </Border>
                            <Border Name="InfoBorder" Width="0" Grid.Column="1" HorizontalAlignment="Right" Margin="10,0,0,0">
                                <Image x:Name="InfoIcon"
                                   Stretch="None"
                                   Width="16"
                                   Height="16" 
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   ToolTip="{TemplateBinding InfoText}"
                                   Visibility="Hidden"
                                   >
                                </Image>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasInfoText" Value="True">
                            <Setter Property="Source" TargetName="InfoIcon"
                                Value="pack://application:,,,/AvdWpfControls;component/Resources/btn_info.png" />
                            <Setter Property="Visibility" TargetName="InfoIcon" Value="Visible" />
                            <Setter Property="Width" TargetName="InfoBorder" Value="Auto" />
                        </Trigger>
                        <Trigger Property="ShowOuterBorder" Value="True">
                            <Setter Property="Style" TargetName="borderChbWithInfoOuter" Value="{DynamicResource GroupBoxBorderNoGradient}"/>
                            <Setter Property="Margin" TargetName="gridChbWithInfo" Value="5,5,5,5"/>
                            <Setter Property="Width" TargetName="gridChbWithInfo" Value="Auto"/>
                        </Trigger>
                        <Trigger Property="OuterBorderNotZero" Value="True">
                            <Setter Property="Width" TargetName="borderChbWithInfoOuter" Value="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                  Path=OuterBorderWidth, Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="CheckboxBorderNotZero" Value="True">
                            <Setter Property="Width" TargetName="CheckboxBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent},
                                                  Path=CheckboxBorderWidth, Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="AvdMenuText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#465570" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>

            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>

            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="GroupBoxBorderBorderBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#D0909090" Offset="0" />
        <GradientStop Color="#D0A4A4A4" Offset="0.35" />
        <GradientStop Color="#D0B7B5B5" Offset="0.4" />
        <GradientStop Color="#D0A0A0A0" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GroupBoxBorderBackgroundBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#F8F8F8" Offset="0" />
        <GradientStop Color="#E8E8E8" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="PopupBoxBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource GroupBoxBorderBorderBrush}" />
    </Style>

    <Style x:Key="PopupBoxBackgroundStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource AvdMenuBackground}" />
    </Style>

    <Style x:Key="HeadlineBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource NewDesignDeepBlueBrush}" />
    </Style>

    <Style TargetType="{x:Type local:AvdMenuExpander}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="2,0"/>
        <!--<Setter Property="Padding" Value="10,20,30,40"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AvdMenuExpander}">
                    <Grid VerticalAlignment="Center">
                        <ToggleButton x:Name="Btn" IsHitTestVisible="{Binding ElementName=Popup, Path=IsOpen, Mode=OneWay, Converter={StaticResource BoolInverter}}">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Focusable" Value="False"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                </Style>
                            </ToggleButton.Style>
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Name="border" BorderThickness="1" Padding="3,3,3,1" BorderBrush="{StaticResource AvdMenuButtonBorder}" CornerRadius="2" Background="{StaticResource AvdMenuButtonBackground}">
                                        <Grid VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Image x:Name="image" Height="{Binding RelativeSource={RelativeSource AncestorType=local:AvdMenuExpander}, Path=ImageHeight}" Source="{Binding RelativeSource={RelativeSource AncestorType=local:AvdMenuExpander}, Path=ImageSource}"
                                               HorizontalAlignment="Center"/>
                                            <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal">
                                                <TextBlock Name="menuText" Text="{Binding RelativeSource={RelativeSource AncestorType=local:AvdMenuExpander}, Path=Caption}" 
                                                       Style="{StaticResource AvdMenuText}" VerticalAlignment="Center" />
                                                <!--<Path Margin="5,2,0,0" Fill="#E0E0E0" Data="M 0 0 H 8 L 4 4 Z" VerticalAlignment="Center"/>-->
                                                <Path Name="menuArrow" Margin="5,2,0,0" Fill="{StaticResource AvdMenuTextEnabled}" Data="M 0 0 H 8 L 4 4 Z" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </Grid>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <!--<DropShadowEffect ShadowDepth="1" Opacity="0.5" BlurRadius="2" />-->
                                                        <DropShadowEffect ShadowDepth="1" Opacity="0.2" BlurRadius="2" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonMouseOverBrush}" />
                                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                                            <Setter TargetName="menuArrow" Property="Fill" Value="{StaticResource AvdMenuTextMouseOver}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonMouseOverBrush}" />
                                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                                            <Setter TargetName="menuArrow" Property="Fill" Value="{StaticResource AvdMenuTextMouseOver}" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonPressedBrush}" />
                                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                                            <Setter TargetName="menuArrow" Property="Fill" Value="{StaticResource AvdMenuTextMouseOver}" />
                                        </Trigger>
                                        <!--<Trigger Property="IsDefaulted" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                        </Trigger>-->
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextDisabled}" />
                                            <Setter TargetName="menuArrow" Property="Fill" Value="{StaticResource AvdMenuTextDisabled}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        
                        <Popup x:Name="Popup" IsOpen="{Binding IsChecked, ElementName=Btn}" StaysOpen="False"
                               AllowsTransparency="True" PopupAnimation="Slide" Placement="Bottom" PlacementTarget="{Binding ElementName=Btn}" VerticalOffset="5">
                            <Border>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <!--<DropShadowEffect ShadowDepth="2" Opacity="0.5" BlurRadius="2" />-->
                                                <DropShadowEffect ShadowDepth="1" Opacity="0.2" BlurRadius="2" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Background" Value="{StaticResource GroupBoxBorderBackgroundBrush}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBorderBrush}" />
                                        <Setter Property="CornerRadius" Value="2"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="Margin" Value="0,0,5,5"/>
                                        <Setter Property="Padding" Value="5"/>
                                    </Style>
                                </Border.Style>
                                <StackPanel IsItemsHost="True" />
                            </Border>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AvdMenuExpanderItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AvdMenuExpanderItem}">
                    <!--<Border Name="border" BorderThickness="1" BorderBrush="Transparent" CornerRadius="0" Background="{StaticResource AvdMenuBackground}" Padding="5" Margin="5,0,5,0">-->
                    <Border Name="border" BorderThickness="1" BorderBrush="Transparent" CornerRadius="0" Background="Transparent" Padding="5" Margin="5,0,5,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Grid.RowSpan="2" Source="{TemplateBinding ImageSource}" Height="{TemplateBinding ImageHeight}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                            <TextBlock Name="menuText" Grid.Column="1" Text="{TemplateBinding Caption}" FontWeight="Bold" VerticalAlignment="Center">
                                <!--<TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>-->
                            </TextBlock>
                            <TextBlock Name="menuDescription" Visibility="Collapsed" Grid.Column="1" Grid.Row="1" Text="{TemplateBinding Description}" Margin="0,-2,0,0" TextWrapping="Wrap" VerticalAlignment="Center">
                                <!--<TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>-->
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AvdMenuItemBorder}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                            <Setter TargetName="menuDescription" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AvdMenuItemBorder}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                            <Setter TargetName="menuDescription" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AvdMenuItemBorder}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                            <Setter TargetName="menuDescription" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextDisabled}" />
                            <Setter TargetName="menuDescription" Property="Foreground" Value="{StaticResource AvdMenuTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:AvdMenuButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AvdMenuButton">
                    <Border Name="border" BorderThickness="1" Padding="3,3,3,1" BorderBrush="{StaticResource AvdMenuButtonBorder}" CornerRadius="2" Background="{StaticResource AvdMenuButtonBackground}">
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Row="1" Grid.Column="1" x:Name="content" Source="{TemplateBinding ImageSource}" Height="{TemplateBinding ImageHeight}" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Name="menuText" Text="{TemplateBinding Caption}" VerticalAlignment="Center" Margin="0,0,2,0" 
                                       TextWrapping="Wrap" MaxWidth="95" HorizontalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource AvdMenuText}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TextAllignment, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <DataTrigger.Value>
                                                    <local:TextAllignments>Top</local:TextAllignments>
                                                </DataTrigger.Value>
                                                <Setter Property="Grid.Row" Value="0" />
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TextAllignment, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <DataTrigger.Value>
                                                    <local:TextAllignments>Bottom</local:TextAllignments>
                                                </DataTrigger.Value>
                                                <Setter Property="Grid.Row" Value="2" />
                                                <Setter Property="Grid.Column" Value="1" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TextAllignment, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <DataTrigger.Value>
                                                    <local:TextAllignments>Left</local:TextAllignments>
                                                </DataTrigger.Value>
                                                <Setter Property="Grid.Row" Value="1" />
                                                <Setter Property="Grid.Column" Value="0" />
                                                <Setter Property="TextAlignment" Value="Right" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TextAllignment, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                                <DataTrigger.Value>
                                                    <local:TextAllignments>Right</local:TextAllignments>
                                                </DataTrigger.Value>
                                                <Setter Property="Grid.Row" Value="1" />
                                                <Setter Property="Grid.Column" Value="2" />
                                                <Setter Property="TextAlignment" Value="Left" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                        <Border.Style>
                            <Style TargetType="Border">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <!--<DropShadowEffect ShadowDepth="1" Opacity="0.5" BlurRadius="2" />-->
                                        <DropShadowEffect ShadowDepth="1" Opacity="0.2" BlurRadius="2" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Style>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonMouseOverBrush}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonMouseOverBrush}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AvdMenuButtonPressedBrush}" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            <Setter TargetName="menuText" Property="Foreground" Value="{StaticResource AvdMenuTextDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AvdMenuSeparator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AvdMenuSeparator}">
                    <!--<Image Source="/AvdWpfControls;component/Resources/AvdMenuSeparator.png" Height="62" Width="3" Opacity="0.75" Stretch="Fill" Margin="5,0" VerticalAlignment="Center"/>-->
                    <Border BorderBrush="{StaticResource AvdMenuSplitter}" BorderThickness="0.5" Margin="-5,5,-5,5"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AssistantControlTabPanel}">
        <Setter Property="SelectedIndex" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AssistantControlTabPanel}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border>
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#edb75f" Offset="0" />
                                        <GradientStop Color="#b77401" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <StackPanel Orientation="Horizontal" Margin="5">
                                    <StackPanel.Resources>
                                        <Style TargetType="Label">
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="FontSize" Value="16" />
                                            <Setter Property="FontStyle" Value="Italic" />
                                            <Setter Property="Padding" Value="0" />
                                        </Style>
                                    </StackPanel.Resources>
                                    <Label Content="{x:Static Localisation:ResourcesCommon.Step}" Margin="0,0,5,0"/>
                                    <Label Content="{TemplateBinding CurrentStep}"/>
                                    <Label Content="{x:Static Localisation:ResourcesCommon.Of}" Margin="5,0"/>
                                    <Label Content="{TemplateBinding StepCount}"/>
                                    <Label Content=": "/>
                                    <Label Content="{Binding SelectedItem.Header, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </StackPanel>
                            </Border>
                            <Border Grid.Row="1" Padding="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AssistantControl}">
        <Setter Property="SelectedIndex" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AssistantControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- caption -->
                            <Border  Height="0" Style="{TemplateBinding HeaderBorderStyle}">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#edb75f" Offset="0" />
                                        <GradientStop Color="#b77401" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Orientation="Horizontal" Margin="5">
                                        <StackPanel.Resources>
                                            <Style TargetType="Label">
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="FontSize" Value="16" />
                                                <Setter Property="FontStyle" Value="Italic" />
                                                <Setter Property="Padding" Value="0" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </Style>
                                        </StackPanel.Resources>
                                        <StackPanel Orientation="Horizontal" Visibility="{TemplateBinding ShowSteps, Converter={StaticResource trueToVisibilityConverter}}">
                                            <Label Content="{x:Static Localisation:ResourcesCommon.Step}" Margin="0,0,5,0"/>
                                            <Label Content="{TemplateBinding CurrentStep}"/>
                                            <Label Content="{x:Static Localisation:ResourcesCommon.Of}" Margin="5,0"/>
                                            <Label Content="{TemplateBinding StepCount}"/>
                                            <Label Content=": "/>
                                        </StackPanel>
                                        <Label Content="{Binding SelectedItem.Header, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                                        <ContentPresenter Content="{TemplateBinding AdditionalHeaderContent}" />
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <!-- detail caption -->
                            <Border Grid.Row="1" Background="{TemplateBinding DetailHeaderBackground}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                    <Condition Binding="{Binding SelectedItem.DetailHeader, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueExistsToBoolConverter}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                    <Condition Binding="{Binding SelectedItem.DetailHeaderImageSource, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueExistsToBoolConverter}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                                <StackPanel Orientation="Horizontal" Margin="5,2">
                                    <Image VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                            <Condition Binding="{Binding SelectedItem.DetailHeaderImageSource, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueExistsToBoolConverter}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Source" Value="{Binding SelectedItem.DetailHeaderImageSource, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                        <Setter Property="Height" Value="{Binding SelectedItem.DetailHeaderImageHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Grid.Row="0" TextWrapping="Wrap" FontSize="16" Foreground="#333" FontStyle="Italic" VerticalAlignment="Center">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                            <Condition Binding="{Binding SelectedItem.DetailHeader, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueExistsToBoolConverter}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Setter Property="Text" Value="{Binding SelectedItem.DetailHeader, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Border>

                            <!-- content -->
                            <Border Grid.Row="2" Padding="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>

                            <!-- button bar -->
                            <Border Grid.Row="3" Background="{StaticResource NewDesignBlueBrush}" Style="{TemplateBinding ButtonBorderStyle}" Visibility="{Binding IsButtonBorderVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}, Converter={StaticResource trueToVisibilityConverter}}" >
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Orientation="Horizontal" Margin="5" Grid.Column="1">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                            <Condition Binding="{Binding SelectedItem.IsSummaryPage, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding IsNavigationButtonVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <Button Content="{x:Static Localisation:ResourcesCommon.Back}" MinWidth="75" Click="AssistantControlLast_OnClick" 
                                                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BackAllowed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}" Value="False" >
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                                <Condition Binding="{Binding SelectedItem.BackAllowed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button Content="{x:Static Localisation:ResourcesCommon.Next}" Margin="5,0,0,0" MinWidth="75" Click="AssistantControlNext_OnClick" 
                                                Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NextAllowed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}" Value="False" >
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding SelectedItem, Converter={StaticResource ObjectToTypeStringConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="AssistantTabItem" />
                                                                <Condition Binding="{Binding SelectedItem.NextAllowed, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </MultiDataTrigger>
                                                        <!-- If NextButtonCaptionLastPage is not null, then the next button will be converted to a finish button-->
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding NextAllowed, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}" Value="False" />
                                                                <Condition Binding="{Binding NextButtonCaptionLastPage, Converter={StaticResource ValueExistsToBoolConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}}}" Value="True" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="True" />
                                                            <Setter Property="ContentTemplate" >
                                                                <Setter.Value>
                                                                    <DataTemplate DataType="Button">
                                                                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:AssistantControl}},Path=NextButtonCaptionLastPage}" />
                                                                    </DataTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>

                                    <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5" HorizontalAlignment="Left">
                                        <Button Content="{TemplateBinding OkButtonCaption}" IsEnabled="{TemplateBinding OkButtonEnabled}" Margin="5,0,0,0" MinWidth="75" Click="AssistantControlOk_OnClick"
                                                Visibility="{Binding OkButtonCaption, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ValueExistsToVisibilityConverter}}" Height="23"/>
                                        <ItemsControl ItemsSource="{TemplateBinding Buttons}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                        <Button Content="{x:Static Localisation:ResourcesCommon.Cancel}" Visibility="{TemplateBinding CancelButtonVisibility}" Height="23"
                                                IsEnabled="{TemplateBinding CancelButtonEnabled}" Margin="5,0,0,0" MinWidth="75" Click="AssistantControlCancel_OnClick" />
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <Grid Grid.Row="3">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ReplaceFooter, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ValueExistsToBoolConverter}}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <ItemsControl ItemsSource="{Binding ReplaceFooter, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AvdTabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AvdTabItem}">
                    <Grid>
                        <Border Name="Border" Background="{StaticResource NewDesignLightGreyBrush}" BorderBrush="{StaticResource NewDesignLightGreyBrush}" Padding="5,2" Width="{TemplateBinding TabWidth}">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}" Orientation="Horizontal">
                                <Image Source="{TemplateBinding ImageSource}" Height="16" Margin="0,0,2,0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="Source" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock VerticalAlignment="Center" x:Name="ContentSite" Foreground="{StaticResource AvdMenuTextEnabled}" Text="{TemplateBinding Caption}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="ContentSite" Property="Foreground" Value="{StaticResource HeaderTextBrush}" />
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#243553" Offset="0" />
                                        <GradientStop Color="#243553" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#243553" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="Border" Property="Background" Value="#EEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#888" />
                            <Setter TargetName="ContentSite" Property="Foreground" Value="#666" />-->
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NewDesignDeepBlueBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource AvdMenuSplitter}" />
                            <Setter TargetName="ContentSite" Property="Foreground" Value="{StaticResource HeaderTextBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Top">
                            <!--<Setter TargetName="Border" Property="CornerRadius" Value="6,6,0,0" />
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />-->
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Left">
                            <!--<Setter TargetName="Border" Property="CornerRadius" Value="6,0,0,6" />
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />-->
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Right">
                            <!--<Setter TargetName="Border" Property="CornerRadius" Value="0,6,6,0" />
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,1,1" />-->
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,1,1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Bottom">
                            <!--<Setter TargetName="Border" Property="CornerRadius" Value="0,0,6,6" />
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />-->
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource NewDesignBlueBrush}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <dg:DataGridHeaderBorder x:Name="headerBorder" Background="{StaticResource NewDesignBlueBrush}">
                        <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource NewDesignWhiteBrush}">
                            <Grid>
                                <TextBlock Text="{TemplateBinding Content}" VerticalAlignment="Center" TextWrapping="Wrap" Margin="20,0"/>
                            </Grid>
                        </Border>
                    </dg:DataGridHeaderBorder>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" VerticalAlignment="Center" Padding="20,0">
                        <TextBlock Foreground="Black">
                                <TextBlock.Text>
                                  <MultiBinding Converter="{StaticResource dataGridCellToTextConverter}">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Column.DisplayIndex" />
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Content.Content.RowEntries" />
                                  </MultiBinding>
                                </TextBlock.Text>
                        </TextBlock>
                    </Border>
                </ControlTemplate> 
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>