<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountGroupsCaption" xml:space="preserve">
    <value>Account groups</value>
  </data>
  <data name="AccountListCaption" xml:space="preserve">
    <value>Accounts</value>
  </data>
  <data name="BtnAddBalanceListTooltip" xml:space="preserve">
    <value>import new balance list</value>
  </data>
  <data name="BtnCloseCaption" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="BtnCreateAccountGroupTooltip" xml:space="preserve">
    <value>create new account group</value>
  </data>
  <data name="BtnCreateTemplateTooltip" xml:space="preserve">
    <value>create new template</value>
  </data>
  <data name="BtnDeleteAccountGroupTooltip" xml:space="preserve">
    <value>delete account group</value>
  </data>
  <data name="BtnDeleteBalanceListTooltip" xml:space="preserve">
    <value>delete selected balance list</value>
  </data>
  <data name="BtnDeleteSplitAccountGroupTooltip" xml:space="preserve">
    <value>delete account splitting</value>
  </data>
  <data name="BtnEditAccountGroupTooltip" xml:space="preserve">
    <value>edit account group</value>
  </data>
  <data name="BtnEditBalanceListTooltip" xml:space="preserve">
    <value>edit selected balance list</value>
  </data>
  <data name="BtnEditSplitAccountGroupTooltip" xml:space="preserve">
    <value>edit account splitting</value>
  </data>
  <data name="BtnReimportBalanceList" xml:space="preserve">
    <value>Reimport</value>
  </data>
  <data name="BtnReimportBalanceListTooltip" xml:space="preserve">
    <value>reimport balance list</value>
  </data>
  <data name="CommentCaption" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CommentCaption1" xml:space="preserve">
    <value>Comment:</value>
  </data>
  <data name="CommonCaption" xml:space="preserve">
    <value>Common</value>
  </data>
  <data name="DlgEditAccountGroupCaption" xml:space="preserve">
    <value>Edit Account Group</value>
  </data>
  <data name="DlgEditBalanceListCaption" xml:space="preserve">
    <value>Edit balance list</value>
  </data>
  <data name="HiddenAccountsCaption" xml:space="preserve">
    <value>Hidden Accounts</value>
  </data>
  <data name="ImportConfigCaption" xml:space="preserve">
    <value>Import configuration</value>
  </data>
  <data name="NameCaption" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameCaption1" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NumberOfAccountsCaption" xml:space="preserve">
    <value>Number of accounts: </value>
  </data>
  <data name="RequestDeleteBalanceList" xml:space="preserve">
    <value>Are you sure, that the balance list should be deleted?</value>
  </data>
  <data name="SourceCaption" xml:space="preserve">
    <value>Source: </value>
  </data>
  <data name="SplittedAccountsCaption" xml:space="preserve">
    <value>Account splittings</value>
  </data>
  <data name="TemplatesCaption" xml:space="preserve">
    <value>Templates for balance lists</value>
  </data>
  <data name="ChooseProfile" xml:space="preserve">
    <value>Choose saved profile for import or leave it as the default to use no profile</value>
  </data>
  <data name="SaveAsProfile" xml:space="preserve">
    <value>Save as profile</value>
  </data>
  <data name="ProfileNameCaption" xml:space="preserve">
    <value>The name of the profile</value>
  </data>
  <data name="VirtualAccountComment" xml:space="preserve">
    <value>This is an virtual Account that contains the value of {0}</value>
  </data>
  <data name="VirtualBalanceListName" xml:space="preserve">
    <value>virtual accounts</value>
  </data>
  <data name="VirtualBalanceListComment" xml:space="preserve">
    <value>a balance list that contains virtual accounts</value>
  </data>
  <data name="VirtualAccountDefaultName" xml:space="preserve">
    <value>virtual account</value>
  </data>
  <data name="SplitAccount" xml:space="preserve">
    <value>Split account</value>
  </data>
  <data name="VirtualAccountAssignmentAllowedTo_bs_eqLiab" xml:space="preserve">
    <value>the liabilities part of the balance</value>
  </data>
  <data name="BalListImportAssistant_BtnSaveProfileOnClick_Successfully_saved_import_profile_" xml:space="preserve">
    <value>Successfully saved import profile.</value>
  </data>
  <data name="BalListImportAssistant_NavigateNext_TooFewColumnsToUseImportProfile" xml:space="preserve">
    <value>In the saved profile there was a column at position {0}, but now only {1} columns exist. This CSV file cannot be imported by this profile.</value>
  </data>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigned to:</value>
  </data>
  <data name="LoadingPositions" xml:space="preserve">
    <value>Loading positions...</value>
  </data>
  <data name="ModifySelectedBalanceList" xml:space="preserve">
    <value>modify selected balance list</value>
  </data>
  <data name="ModificationNotAllowed" xml:space="preserve">
    <value>Modifications for this balance list not allowed</value>
  </data>
  <data name="AccountBelongsToCurrentlySelectedTooltip" xml:space="preserve">
    <value>Account belongs to the currently selected balances List</value>
  </data>
  <data name="CreditAbbreviation" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="CreditSide" xml:space="preserve">
    <value>Credit side</value>
  </data>
  <data name="DebitAbbreviation" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="DebitSide" xml:space="preserve">
    <value>Debit side</value>
  </data>
  <data name="MainAccount" xml:space="preserve">
    <value>Main account: </value>
  </data>
  <data name="NumberOfAssignedAccounts" xml:space="preserve">
    <value>Number of assigned accounts: </value>
  </data>
  <data name="LoadReferenceListException" xml:space="preserve">
    <value>Could not load reference list: </value>
  </data>
  <data name="UnknownAccountType" xml:space="preserve">
    <value>Unknown account type: </value>
  </data>
  <data name="ReferenceListAccountNote" xml:space="preserve">
    <value>Account Note</value>
  </data>
  <data name="ReferenceListAccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="BalanceInTwoColsLabel" xml:space="preserve">
    <value>Columns expense and income</value>
  </data>
  <data name="BalanceSettingsLabel" xml:space="preserve">
    <value>balance settings</value>
  </data>
  <data name="BalanceWithDcFlagOneColLabel" xml:space="preserve">
    <value>Column total balance (expense / income characteristics are in the same column)</value>
  </data>
  <data name="BalanceWithDcFlagTwoColsLabel" xml:space="preserve">
    <value>Column total balance (expense / income characteristics are in different columns)</value>
  </data>
  <data name="HeadLineFirst" xml:space="preserve">
    <value>The first row is headline</value>
  </data>
  <data name="IndexLabel" xml:space="preserve">
    <value>Import column index (optional extra column for sorting, if sorting is not available by the import order)</value>
  </data>
  <data name="NotesLabel" xml:space="preserve">
    <value>Import notes</value>
  </data>
  <data name="PleaseSelectLabel" xml:space="preserve">
    <value>Please select the options for the importing of the CSV file. With the correct selection, the columns of the CSV file will be shown individually.</value>
  </data>
  <data name="SetCsvOptionsLabel" xml:space="preserve">
    <value>Setting the CSV import options</value>
  </data>
  <data name="TaxonomyColumnExistsLabel" xml:space="preserve">
    <value>Import account assignment</value>
  </data>
  <data name="AccountName" xml:space="preserve">
    <value>- Account name</value>
  </data>
  <data name="AccountNumber" xml:space="preserve">
    <value>- Account number</value>
  </data>
  <data name="BalListImportAssistantTitle" xml:space="preserve">
    <value>Import assistent for balance lists</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Please check whether all column mappings and the number of accounts are correct.</value>
  </data>
  <data name="ColumnChoice" xml:space="preserve">
    <value>Column choice </value>
  </data>
  <data name="ColumnMappings" xml:space="preserve">
    <value>Column mappings</value>
  </data>
  <data name="CurrentColumn" xml:space="preserve">
    <value>Current column to select: </value>
  </data>
  <data name="ExampleLong" xml:space="preserve">
    <value>Example as it appears in the preview of eBilan-kit or in Excel</value>
  </data>
  <data name="ExampleShort" xml:space="preserve">
    <value>see example for CSV file</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Csv file</value>
  </data>
  <data name="FileContent" xml:space="preserve">
    <value>Inhalt der Datei</value>
  </data>
  <data name="FileNotExist" xml:space="preserve">
    <value>The specified file does not exist.</value>
  </data>
  <data name="FileSelectionLabel" xml:space="preserve">
    <value>File selection</value>
  </data>
  <data name="Hint" xml:space="preserve">
    <value>Hint:</value>
  </data>
  <data name="HintContent" xml:space="preserve">
    <value>The below specified balance closing date can be changed via the company data options in the management section.</value>
  </data>
  <data name="MarkIncomeExpense" xml:space="preserve">
    <value>- Mark income / expense (S/H)</value>
  </data>
  <data name="MarkLong" xml:space="preserve">
    <value>(optional, may be separated into two different columns)</value>
  </data>
  <data name="Overview" xml:space="preserve">
    <value>Overview </value>
  </data>
  <data name="PleaseSelectColumn" xml:space="preserve">
    <value>Please select by clicking on the relevant column.</value>
  </data>
  <data name="SelectCsv" xml:space="preserve">
    <value>Please select a CSV file</value>
  </data>
  <data name="SelectCsvIncluding" xml:space="preserve">
    <value>Select the CSV file that contains the balance list information. The following fields have to be included in the CSV file :</value>
  </data>
  <data name="SignedBalanceLabel" xml:space="preserve">
    <value>Column total balance (signed)</value>
  </data>
  <data name="SignedLong" xml:space="preserve">
    <value>(signing with income / expense (S/H) mark, or the income and expense are in separate columns)</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Please start by selecting a column.</value>
  </data>
  <data name="SumOfAccountLabel" xml:space="preserve">
    <value>Sum of accounts: </value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>test</value>
  </data>
  <data name="TooBig" xml:space="preserve">
    <value>The specified file is too large, the maximum size is 20MB. Please check if the selected file is correct.</value>
  </data>
  <data name="TotalBalance" xml:space="preserve">
    <value>- Total balance</value>
  </data>
  <data name="ImportError" xml:space="preserve">
    <value>Import data error: </value>
  </data>
  <data name="AssignmentInfo" xml:space="preserve">
    <value>{0} accounts were assigned and {1} accounts were skipped.</value>
  </data>
  <data name="UnknownTaxonomyPosition" xml:space="preserve">
    <value>The account "{0}" couldn't be added to the taxonomy, because there is no taxonomy position with the name "{1}".</value>
  </data>
  <data name="ColumnToNameName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="ColumnToNameIncome" xml:space="preserve">
    <value>total balance credit</value>
  </data>
  <data name="ColumnToNameSigned" xml:space="preserve">
    <value>total balance (signed)</value>
  </data>
  <data name="ColumnToNameMarkIncomeExpense" xml:space="preserve">
    <value>indicator debit/credit</value>
  </data>
  <data name="ColumnToNameExpense" xml:space="preserve">
    <value>total balance debit</value>
  </data>
  <data name="ColumnToNameMarkExpense" xml:space="preserve">
    <value>debits indicator</value>
  </data>
  <data name="ColumnToNameMarkIncome" xml:space="preserve">
    <value>credits indicator</value>
  </data>
  <data name="ColumnToNameBalance" xml:space="preserve">
    <value>total balance (with debit/credit indicator)</value>
  </data>
  <data name="ColumnToNameTaxonomy" xml:space="preserve">
    <value>Column for taxonomy assignment</value>
  </data>
  <data name="ColumnToNameComment" xml:space="preserve">
    <value>Additional information</value>
  </data>
  <data name="ColumnToNameIndex" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="InvalidAccountNumber" xml:space="preserve">
    <value>Invalid account number in line {0}: '{1}'</value>
  </data>
  <data name="InvalidDebitRow" xml:space="preserve">
    <value>Invalid expense value (S) in row {0}: '{1}'</value>
  </data>
  <data name="InvalidCreditRow" xml:space="preserve">
    <value>Invalid income value (H) in row {0}: '{1}'</value>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>Invalid value in Zeile {0}: '{1}'</value>
  </data>
  <data name="NotUnique" xml:space="preserve">
    <value>The account number {0} is not unique.</value>
  </data>
  <data name="CreditRegularExpression" xml:space="preserve">
    <value>c|C|h|H</value>
  </data>
  <data name="DefaultBalanceListName" xml:space="preserve">
    <value>Balance list</value>
  </data>
  <data name="TestBalanceList" xml:space="preserve">
    <value>use example balance list</value>
  </data>
  <data name="NotAssignedAccounts_Count" xml:space="preserve">
    <value>Not assigned accounts ({0})</value>
  </data>
  <data name="AssignedAccounts_Count" xml:space="preserve">
    <value>Assigned accounts ({0})</value>
  </data>
</root>