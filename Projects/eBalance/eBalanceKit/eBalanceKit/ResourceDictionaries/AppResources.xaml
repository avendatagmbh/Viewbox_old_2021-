<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c1="clr-namespace:eBalanceKit.Converters"
                    xmlns:ctl="clr-namespace:AvdWpfControls;assembly=AvdWpfControls"
                    xmlns:wpfc="clr-namespace:AvdWpfControls;assembly=AvdWpfControls"
                    xmlns:Converters="clr-namespace:AvdWpfControls.Converters;assembly=AvdWpfControls">

    <c1:ValueExistsToVisibilityConverter x:Key="valueExistsToVisibilityConverter" />
    <c1:ValueNotExistsToVisibilityConverter x:Key="valueNotExistsToVisibilityConverter" />
    <c1:BoolToVisibilityConverter x:Key="TrueIsVisibleConverter1" VisibleValue="True" HiddenState="Hidden" />
    <c1:BoolToVisibilityConverter x:Key="TrueToVisibilityConverter" VisibleValue="True" HiddenState="Collapsed" />
    <c1:BoolToVisibilityConverter x:Key="FalseToVisibilityConverter" VisibleValue="False" HiddenState="Collapsed" />
    <Converters:ObjectToTypeStringConverter x:Key="ObjectToTypeStringConverter" />

    <c1:FileReadAllowedToBoolConverter x:Key="FileReadAllowedToBoolConverter" />
    <c1:FileNotExistsToStringConverter x:Key="FileNotExistsToStringConverter" />
    <c1:ValueExistsToVisibilityConverter x:Key="ValueExistsToVisibilityConverter" />
    <c1:ValueNotExistsToVisibilityConverter x:Key="ValueNotExistsToVisibilityConverter" />
    <c1:StringToDecimalConverter x:Key="StringToDecimalConverter" />
    <c1:StringToNullableDecimalConverter x:Key="StringToNullableDecimalConverter" />
    <c1:StringToMonetaryConverter x:Key="StringToMonetaryConverter" />
    <c1:StringToNullableMonetaryConverter x:Key="StringToNullableMonetaryConverter" />
    <c1:ValueExistsToBoolConverter x:Key="ValueExistsToBoolConverter" />
    <c1:ValueNotExistsToBoolConverter x:Key="ValueNotExistsToBoolConverter" />
    <Converters:BoolInverter x:Key="BoolInverter" />
    <c1:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
    <Converters:EnumMatchToVisibilityConverter x:Key="EnumMatchToVisibilityConverter" />
    <Converters:EmptyListToVisibilityConverter x:Key="EmptyListToVisibleConverter" EmptyIsVisible="True" />
    <Converters:CountToVisibilityConverter x:Key="CountZeroToVisibleConverter" IsZeroState="Visible" IsNotZeroState="Collapsed"/>
    <Converters:CountToVisibilityConverter x:Key="CountZeroToCollapsedConverter" IsZeroState="Collapsed" IsNotZeroState="Visible"/>

    <c1:StringIsNullOrEmptyToBoolConverter x:Key="EmptyStringIsFalse" Inverted="True" />
    
    <!-- ********************************************************************************
        * Brushes
         ******************************************************************************** -->

    <SolidColorBrush x:Key="ListBgBrush" Color="#80FFFFFF" />

    <ImageBrush x:Key="headerBgBrush" ImageSource="/eBalanceKitResources;component/Resources/head.png" ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewbox="7,0,460,55" TileMode="FlipXY" Viewport="0,0,471,55" />
    <ImageBrush x:Key="infoBgBrush" ImageSource="/eBalanceKitResources;component/Resources/head.png" ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewbox="7,0,460,55" TileMode="FlipXY" Viewport="0,0,471,175" />

    <!-- brush for default border (background) -->
    <LinearGradientBrush x:Key="DefaultBorderBgBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#F0F0F0" Offset="0" />
        <GradientStop Color="White" Offset="1" />
    </LinearGradientBrush>

    <!-- brush for default border (border line) -->
    <LinearGradientBrush x:Key="DefaultBorderBorderBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#D0909090" Offset="0" />
        <GradientStop Color="#D0A4A4A4" Offset="0.35" />
        <GradientStop Color="#D0B7B5B5" Offset="0.4" />
        <GradientStop Color="#D0A0A0A0" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalBorderBrush" Color="Silver" />

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BlueGradientBrushBorder" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#D0A0A0A0" Offset="0" />
        <GradientStop Color="#D0B4B4B4" Offset="0.35" />
        <GradientStop Color="#D0C7C5C5" Offset="0.4" />
        <GradientStop Color="#D0B0B0B0" Offset="1" />
        <!--
            <GradientStop Color="#A0A0D0" Offset="0" />
            <GradientStop Color="#A0A0B0" Offset="1" />
            -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonMouseOverBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#D0FFFFFF" Offset="0"/>
        <GradientStop Color="#40FFFFFF" Offset="0.15"/>
        <GradientStop Color="#40FFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#AAA" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#C0FFFFFF" Offset="0"/>
        <GradientStop Color="#80FFFFFF" Offset="0.15"/>
        <GradientStop Color="#80FFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#777" Offset="0.0"/>
                <GradientStop Color="#000" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- ********************************************************************************
        * Styles
         ******************************************************************************** -->




    <Style x:Key="DetailContentBorder" TargetType="{x:Type Border}">
        <!--<Setter Property="Margin" Value="24,0,0,0" />-->
        <Setter Property="Margin" Value="48,0,0,0" />
    </Style>

    <Style x:Key="DetailContentBorder1" TargetType="{x:Type Border}">
        <!--<Setter Property="Margin" Value="24,0,0,0" />-->
        <Setter Property="Margin" Value="24,0,0,0" />
    </Style>

    <!-- style for image buttons -->
    <Style x:Key="MyFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="0,0,0,0">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="{StaticResource DefaultBorderBorderBrush}" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" CornerRadius="2" BorderThickness="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="11px"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0" BorderBrush="{StaticResource DefaultBorderBorderBrush}" CornerRadius="2" Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="6" Opacity="0.75" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="15" CenterY="15" ScaleX="1.05" ScaleY="1.05"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="10" CenterY="10" ScaleX="0.95" ScaleY="0.95"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DefaultBorderBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DefaultBorderBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle1" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="11px"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                            BorderThickness="1"
                            Padding="3,3,3,1" 
                            BorderBrush="Transparent" 
                            CornerRadius="5" 
                            Background="Transparent">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="contentShadow">
                                <ContentPresenter.RenderTransform>
                                    <TranslateTransform X="1.0" Y="1.0" />
                                </ContentPresenter.RenderTransform>
                            </ContentPresenter>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle2FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="3 2">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle2" BasedOn="{StaticResource {x:Type Button}}"  TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ImageButtonStyle2FocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"  
                                CornerRadius="2" 
                                BorderThickness="1"
                                Background="{StaticResource NormalBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}">
                        <ContentPresenter Margin="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#E0E0E0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <!-- style for image buttons -->
    <Style x:Key="MyFocusVisual3">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="0,0,0,0">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="{StaticResource DefaultBorderBorderBrush}" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" CornerRadius="2" BorderThickness="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="11px"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual3}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" 
                                BorderThickness="0"
                                Padding="0" 
                                BorderBrush="Transparent" 
                                Background="Transparent">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationTreeItemBg" TargetType="{x:Type Border}">        
        <Style.Triggers>
            <!-- selected & valid -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#06597b" Offset="0" />
                            <GradientStop Color="#054a66" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}" Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#0c8fc6" Offset="0" />
                            <GradientStop Color="#177da7" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#edb75f" Offset="0" />
                            <GradientStop Color="#b77401" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PopupBorder" TargetType="Border" BasedOn="{StaticResource GroupBoxBorder}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="5" Opacity="0.5" BlurRadius="5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource GroupBoxBorderBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBorderBrush}" />
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="Padding" Value="5"/>
    </Style>



    <!-- **************************************************************************************** -->
    <!-- control colors -->
    <!-- **************************************************************************************** -->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#A0A0A0</Color>
    <Color x:Key="ControlDarkColor">#404040</Color>

    <Color x:Key="ControlMouseOverLightColor">#B0B0B0</Color>
    <Color x:Key="ControlMouseOverDarkColor">#A0A0A0</Color>
    <Color x:Key="ControlPressedLightColor">#909090</Color>
    <Color x:Key="ControlPressedDarkColor">#808080</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#000000FF" Offset="0" />
                <GradientStop Color="#600000FF" Offset="0.4" />
                <GradientStop Color="#600000FF" Offset="0.6" />
                <GradientStop Color="#000000FF" Offset="1" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- **************************************************************************************** -->
    <!-- EXPANDER                                                                                 -->
    <!-- **************************************************************************************** -->

    <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" CornerRadius="2,0,0,0" BorderThickness="0,0,1,0">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="1" />
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>

            </Border.BorderBrush>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames 
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames 
                                Storyboard.TargetName="Border"
                                Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames 
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames 
                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                Storyboard.TargetName="ExpandededArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Path x:Name="CollapsedArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <Path x:Name="ExpandededArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" Data="M 0 0 L 4 4 L 8 0 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
            </Grid>
        </Border>
    </ControlTemplate>

    <Style x:Key="ExpanderDown" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition x:Name="ContentRow" Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border" 
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames 
                                            Storyboard.TargetName="Border" 
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>

                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton OverridesDefaultStyle="True" Template="{StaticResource ExpanderToggleButton}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                        </LinearGradientBrush>
                                    </ToggleButton.Background>
                                </ToggleButton>
                                <ContentPresenter Grid.Column="1" Margin="5,2" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border x:Name="Content" Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ContentRow" Property="Height" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type wpfc:SlideControlHeader}">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource OrangeGradientBrush}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="#222" />
        </Style.Setters>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border" Padding="2,1" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#06597b"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalGridSplitter" TargetType="GridSplitter">
        <Setter Property="Width" Value="5" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/eBalanceKitResources;component/Resources/splitterH.png" TileMode="FlipXY" 
                            Stretch="None" Viewport="0,0,5,20" ViewportUnits="Absolute" Viewbox="0,0,5,20" ViewboxUnits="Absolute"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalGridSplitter" TargetType="GridSplitter">
        <Setter Property="Height" Value="5" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/eBalanceKitResources;component/Resources/splitterV.png" TileMode="FlipXY"
                            Stretch="None" Viewport="0,0,20,5" ViewportUnits="Absolute" Viewbox="0,0,20,5" ViewboxUnits="Absolute"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#3000"/>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
        
    <Style x:Key="TreeViewItemBaseStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton 
                                x:Name="Expander" 
                                Style="{StaticResource ExpandCollapseToggleStyle}" 
                                IsChecked="{Binding Path=IsExpanded, 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                        <Border Name="Bd"
                                  Grid.Column="1"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="Stretch"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ctl:AssistantControl">
        <Setter Property="ButtonBorderStyle" Value="{StaticResource ButtonBorder}" />
    </Style>

    <SolidColorBrush x:Key="BalanceAccountTextBrush" Color="Black" />
    <SolidColorBrush x:Key="BalanceAccountSelectedTextBrush" Color="#202020" />

    <Style x:Key="AccountTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BalanceAccountTextBrush}" />
        <Style.Triggers>
            <DataTrigger Binding ="{Binding Path=IsSelected}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BalanceAccountSelectedTextBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource AccountTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource BalanceAccountTextBrush}" />
        <Style.Triggers>
            <DataTrigger Binding ="{Binding Path=Value.IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="AuditCorrectionTransactionBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#ff8F6F" Offset="0.0" />
        <GradientStop Color="#ff6F3F" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="AuditCorrectionBorder" TargetType="Border" BasedOn="{StaticResource ListBoxItemBaseBorder}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource AuditCorrectionTransactionBackgroundBrush}" />
    </Style>
    
    
    <!--Login form-->
    <Style TargetType="{x:Type Label}" x:Key="LoginLabelStyle">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="#FFFF" />
        <Setter Property="FontSize" Value="12px" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="LoginVersionLabelStyle" BasedOn="{StaticResource LoginLabelStyle}">
        <Setter Property="FontSize" Value="10px" />
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="LoginCheckboxStyle">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="#A2B9C2" />
        <Setter Property="FontSize" Value="12px" />
    </Style>

    <LinearGradientBrush x:Key="LoginButtonBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#F8B32D" Offset="0"/>
        <GradientStop Color="#DF8C19" Offset="0.5"/>
        <GradientStop Color="#DF8C19" Offset="1.0"/>
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="LoginButtonHoverBrush" StartPoint="0,0" EndPoint="0,1" >
        <GradientStop Color="#F9CC75" Offset="0"/>
        <GradientStop Color="#DF8C19" Offset="0.5"/>
        <GradientStop Color="#DF8C19" Offset="1.0"/>
    </LinearGradientBrush>
    
    <Style x:Key="LoginFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="0,0,0,0">
                        <Rectangle Name="r1" StrokeThickness="1" Stroke="{StaticResource LoginButtonBrush}" StrokeDashArray="2 2"/>
                        <Border Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" CornerRadius="7" BorderThickness="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="LoginButtonStyle">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="#FFFF" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource LoginFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="border" BorderThickness="0" Padding="0" BorderBrush="{StaticResource DefaultedBorderBrush}" CornerRadius="7" Background="{StaticResource LoginButtonBrush}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="1" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="15" CenterY="15" ScaleX="1.02" ScaleY="1.02"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource LoginButtonHoverBrush}" />
                            <Setter Property="Foreground" Value="#FFFF" />
                            <Setter Property="Background" Value="#DF8C19"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="RenderTransform" >
                                <Setter.Value>
                                    <ScaleTransform CenterX="10" CenterY="10" ScaleX="0.95" ScaleY="0.95"></ScaleTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.75" />
                            <Setter Property="Foreground" Value="#CCCC" />
                            <Setter Property="Background" Value="#E2911B"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="PasswordBox" x:Key="loginPasswordBox">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border CornerRadius="7" x:Name="border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{StaticResource DefaultedBorderBrush}" BorderThickness="1" OpacityMask="{x:Null}">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost" Template="{DynamicResource ScrollViewerControlTemplate1}" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="#A2B9C1"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
-->
</ResourceDictionary>