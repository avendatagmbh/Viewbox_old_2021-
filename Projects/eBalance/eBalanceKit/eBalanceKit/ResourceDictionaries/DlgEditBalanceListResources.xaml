<ResourceDictionary x:Class="eBalanceKit.ResourceDictionaries.DlgEditBalanceListResources"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:ts="clr-namespace:eBalanceKit.TemplateSelectors"
                    xmlns:loc="clr-namespace:eBalanceKitResources.Localisation;assembly=eBalanceKitResources"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:AvdWpfControls="clr-namespace:AvdWpfControls;assembly=AvdWpfControls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ResourceDictionaries/TaxonomyAndBalanceListBase.xaml" />
        <ResourceDictionary Source="/ResourceDictionaries/DetailViews.xaml" />
    </ResourceDictionary.MergedDictionaries>
    

    
    <ts:EditBalanceListAccountGroupTemplateSelector x:Key="AccountGroupTemplateSelector" />

    
    
    <HierarchicalDataTemplate x:Key="AccountGroup" ItemsSource="{Binding Items}">
        <Grid MinHeight="36">
            <Border Style="{StaticResource AccountGroupBorder}"/>
            <Border Style="{StaticResource SelectionOverlayBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="140"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{Binding Path=Label}" TextWrapping="Wrap" Style="{StaticResource AccountTextStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding Path=ValueDisplayString}" Style="{StaticResource AccountTextStyle}"/>

                    <StackPanel DataContext="{Binding}" Grid.Row="1" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,2">
                        <AvdWpfControls:ImageButton 
                            Click="btnDeleteAccountGroup_Click" ToolTip="{x:Static loc:ResourcesBalanceList.BtnDeleteAccountGroupTooltip}"
                            ImageSource="/eBalanceKitResources;component/Resources/delete.png" ImageHeight="14" />

                        <AvdWpfControls:ImageButton 
                            Click="btnEditAccountGroup_Click" Margin="5,0,0,0" ToolTip="{x:Static loc:ResourcesBalanceList.BtnEditAccountGroupTooltip}" 
                            ImageSource="/eBalanceKitResources;component/Resources/edit.png" ImageHeight="14" />

                    </StackPanel>
                    
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ItemsCount}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Anzahl zugeordneter Konten: " Style="{StaticResource AccountTextStyle}"/>
                        <TextBlock Text="{Binding Path=ItemsCount}" Style="{StaticResource AccountTextStyle}" />
                    </StackPanel>

                    <!-- text shown if no accounts are assigned -->
                    <TextBlock Grid.Row="1" Text="keine Konten zugeordnet">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource AccountTextStyle}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=ItemsCount}" Value="0">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>                                       

                    <TextBlock Grid.Row="2" Grid.ColumnSpan="2" Text="{Binding Path=Comment}" ToolTip="{Binding Path=Comment}" Style="{StaticResource AccountTextStyle}" 
                               Visibility="{Binding HasComment, Converter={StaticResource TrueToVisibilityConverter}}" FontSize="10" FontStyle="Italic" Foreground="#444" />
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

    
    
    <DataTemplate x:Key="Account">
        <Grid>
            <Border Style="{StaticResource AccountBorder}" />
            <Border Style="{StaticResource SelectionOverlayBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="140"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="txtLabel" Text="{Binding Path=Label}" Style="{StaticResource AccountTextStyle}"/>
                    <TextBlock x:Name="txtValue" Grid.Column="1" HorizontalAlignment="Right" Text="{Binding Path=ValueDisplayString}" Style="{StaticResource AccountTextStyle}"/>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    

<Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
        <Setter.Value>
            <ControlTemplate>
                <Border>
                    <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                </Border>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="IsSelected" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <!--<Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
    <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource TrueIsVisibleConverter}}"/>-->
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton 
                                x:Name="Expander" 
                                Style="{StaticResource ExpandCollapseToggleStyle}" 
                                IsChecked="{Binding Path=IsExpanded, 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                        <Border Name="Bd"
                                  Grid.Column="1"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="Stretch"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
