<ResourceDictionary x:Class="eBalanceKit.ResourceDictionaries.FederalGazetteResources"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Localisation="clr-namespace:eBalanceKitResources.Localisation;assembly=eBalanceKitResources"
                    xmlns:AvdWpfControls="clr-namespace:AvdWpfControls;assembly=AvdWpfControls"
                    xmlns:Converters1="clr-namespace:AvdWpfControls.Converters;assembly=AvdWpfControls"
                    xmlns:Controls="clr-namespace:eBalanceKit.Controls"
                    xmlns:Options="clr-namespace:eBalanceKitBusiness.Options;assembly=eBalanceKitBusiness"
                    xmlns:TemplateSelectors="clr-namespace:eBalanceKit.TemplateSelectors"
                    xmlns:Rights="clr-namespace:eBalanceKitBusiness.Rights;assembly=eBalanceKitBusiness"
                    xmlns:Structures="clr-namespace:federalGazetteBusiness.Structures;assembly=federalGazetteBusiness"
                    xmlns:ValueTypes="clr-namespace:federalGazetteBusiness.Structures.ValueTypes;assembly=federalGazetteBusiness"
                    xmlns:Converter="clr-namespace:eBalanceKit.Windows.Management.ManagementAssistant.Converter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Windows/Reconciliation/ReconciliationResources.xaml" />
        <!--<ResourceDictionary Source="/ResourceDictionaries/TaxonomyTreeView.xaml" />-->
    </ResourceDictionary.MergedDictionaries>

    <!--<TemplateSelectors:ImportedValuesDetailTemplateSelector x:Key="ImportedValuesDetailTemplateSelector" />
    <TemplateSelectors:SimplifiedTreeViewItemTemplateSelector x:Key="SimplifiedTreeViewItemTemplateSelector" />-->
    <TemplateSelectors:FederalGazetteTemplateSelector x:Key="TreeViewItemTemplateSelector" />
    <Converters1:ObjectToTypeStringConverter x:Key="ObjectToTypeStringConverter" />
    <Converters1:EmptyListToVisibilityConverter x:Key="EmptyListToVisibilityConverter" />

    <Converter:IsEqualToBoolConverter x:Key="IsEqualToBoolConverter"/>
    
    <!-- override default TreeViewTextStyle resource from TaxonomyAndBalanceListBase.xaml -->
    <Style x:Key="TreeViewTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource AccountTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource BalanceAccountTextBrush}" />
    </Style>


    <Style TargetType="{x:Type CheckBox}" x:Key="AutoSumItemCheckbox">
        <Setter Property="IsEnabled" Value="{Binding Value.ReportRights.ReadRestAllowed}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Border x:Name="Border" Height="16" Width="16" CornerRadius="3" />
                                <Image x:Name="Image" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputedD.png" Visibility="Hidden" Opacity="0.8"/>
                                <Image x:Name="CheckMark" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputed.png" Visibility="Hidden" />
                                <Image x:Name="ImageLocked" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputedL.png" Visibility="Hidden"/>
                            </Grid>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content"
                                              Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value.AutoComputeAllowed}" Value="False">
                            <Setter TargetName="ImageLocked" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="Image" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Image" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#40000000" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeEnabled}" Value="True"/>
                    <Condition Binding="{Binding Value.AutoComputeAllowed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Wert wird in übergeordneten Knoten aufsummiert (deaktivieren durch Linksklick)" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeEnabled}" Value="False"/>
                    <Condition Binding="{Binding Value.AutoComputeAllowed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Aufsummierung des Wertes in übergeordneten Knoten ist deaktiviert (aktivieren durch Linksklick)" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeAllowed}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Aufsummierung nicht möglich, da die übergeordnete Position deaktiviert oder automatisch gemäß Taxnomie berechnet ist" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.IsComputationOrphanedNode}" Value="True" />
                    <Condition Binding="{Binding Value.HasMonetaryParent}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>


    <!--<HierarchicalDataTemplate x:Key="DefaultNode" ItemsSource="{Binding Path=Children}">
        <Grid>
            <Border Style="{StaticResource ListBoxItemBaseBorder}">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#E0E0E0" Offset="0.0" />
                        <GradientStop Color="#C0C0C0" Offset="1.0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Style="{StaticResource SelectionOverlayBorder}">
                <Grid Height="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />
                    <TextBlock Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=Value.DisplayString}" Style="{StaticResource TreeViewTextStyle}" />
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>-->


    <HierarchicalDataTemplate x:Key="DefaultNode" ItemsSource="{Binding Path=Children}">
        <Grid>
            <Border Grid.Column="1" Style="{StaticResource BalanceTreeNodeBackground}" x:Name="border" />
            <!--<Border Style="{StaticResource ListBoxItemBaseBorder}">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#E0E0E0" Offset="0.0" />
                        <GradientStop Color="#C0C0C0" Offset="1.0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>-->
            <Border Style="{StaticResource SelectionOverlayBorder}">
            <!--<Border BorderBrush="Silver" Style="{StaticResource ListBoxItemBaseBorder}" Background="{StaticResource BalanceTreeLeafNodeBackgroundBrush}" />
            <Border Style="{StaticResource SelectionOverlayBorder}">-->
                <Grid Height="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">                        
                        <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/sumPos.png"
                               Visibility="{Binding IsPositiveComputationSource, Converter={StaticResource TrueToVisibilityConverter}}" />
                        <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/sumNeg.png"
                               Visibility="{Binding IsNegativeComputationSource, Converter={StaticResource TrueToVisibilityConverter}}" />
                    </StackPanel>

                    <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />
                    <TextBlock Grid.Column="2" HorizontalAlignment="Stretch" Text="{Binding Path=Value.DisplayString}" Style="{StaticResource TreeViewTextStyle}" />

                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>


    <!--<HierarchicalDataTemplate x:Key="PresentationTreeNodeMonetary" ItemsSource="{Binding Path=Children}">-->
        <HierarchicalDataTemplate x:Key="MonetaryNode1" ItemsSource="{Binding Path=Children}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="1" Style="{StaticResource BalanceTreeNodeBackground}" x:Name="border" />
            <Border Grid.Column="1" Style="{StaticResource SelectionOverlayBorder}">
                <Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- placeholder -->
                        <Border Grid.ColumnSpan="3" MinWidth="250" />

                        <!-- assignment buttons -->
                        <StackPanel Grid.RowSpan="3" Orientation="Horizontal" VerticalAlignment="Top">
                            <AvdWpfControls:ImageButton Margin="-2,0,2,0" ImageHeight="16" ToolTip="{x:Static Localisation:ResourcesAuditCorrections.AddKorrektionValue}" 
                                            ImageSource="/eBalanceKitResources;component/Resources/AssignPosition.png" VerticalAlignment="Center" IsTabStop="False" >
                                <AvdWpfControls:ImageButton.Style>
                                    <Style TargetType="AvdWpfControls:ImageButton">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Value.Parent.ValueTree.Document.AuditCorrectionManager.ShowAssignButton}" Value="True" />
                                                    <Condition Binding="{Binding Value.IsEnabled}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </AvdWpfControls:ImageButton.Style>
                            </AvdWpfControls:ImageButton>

                            <CheckBox IsChecked="{Binding Value.AutoComputeEnabled}" Margin="0,0,2,0" VerticalAlignment="Center" 
                                      Style="{StaticResource AutoSumItemCheckbox}" IsTabStop="False"/>
                            <Controls:MonetaryNodeInfoIcons VerticalAlignment="Center"/>
                        </StackPanel>

                        <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />

                        <!-- value -->
                        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" Visibility="{Binding Value.IsEnabled, Converter={StaticResource TrueToVisibilityConverter}}">
                            <Image Source="/eBalanceKitResources;component/Resources/PenDoc.png" Height="12" ToolTip="{x:Static Localisation:ResourcesCommon.HasManualValue}">
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding ="{Binding Path=IsValueEditingAllowed}" Value="True" />
                                                    <Condition Binding ="{Binding Path=Value.HasManualValue}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding Path=Value.DisplayString}" Style="{StaticResource TreeViewTextStyle}" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="3" VerticalAlignment="Center" >

                            <AvdWpfControls:ImageButton IsTabStop="False" ImageSource="/eBalanceKitResources;component/Resources/EditPen.png"
                                            ToolTip="Elementdetails bearbeiten (F2)" Click="BtnEditDetails_Click" Margin="5,0,0,0" />

                            <CheckBox IsChecked="{Binding Value.SendAccountBalancesRecursive}" Margin="5,0,0,0" 
                                      Style="{StaticResource SendBalanceCheckBox}" IsTabStop="False" IsEnabled="{Binding Value.ReportRights.WriteRestAllowed}" 
                                      Visibility="{Binding Value.ReportRights.ReadRestAllowed, Converter={StaticResource TrueToVisibilityConverter}}"/>

                            <TextBlock Width="12" HorizontalAlignment="Center" Text="{x:Static Localisation:ResourcesBalanceList.DebitAbbreviation}" Visibility="{Binding Element.IsDebitBalance, Converter={StaticResource TrueToVisibilityConverter}}" ToolTip="{x:Static Localisation:ResourcesBalanceList.DebitSide}" Margin="5,0,0,0"/>
                            <TextBlock Width="12" HorizontalAlignment="Center" Text="{x:Static Localisation:ResourcesBalanceList.CreditAbbreviation}" Visibility="{Binding Element.IsCreditBalance, Converter={StaticResource TrueToVisibilityConverter}}" ToolTip="{x:Static Localisation:ResourcesBalanceList.CreditSide}" Margin="5,0,0,0"/>
                        </StackPanel>

                        <TextBlock Grid.Row="2" Grid.ColumnSpan="3" Text="{Binding Path=Value.Comment}" TextWrapping="Wrap" Style="{StaticResource AccountTextStyle}" 
                               Visibility="{Binding Value.Comment, Converter={StaticResource ValueExistsToVisibilityConverter}}" FontSize="10" FontStyle="Italic" Foreground="#444" />

                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>


    <!-- template for PresentationTreeNode text objects -->
    <HierarchicalDataTemplate x:Key="TextNode" ItemsSource="{Binding Path=Children}">
        <Grid>
            <!--<Border Style="{StaticResource BalanceTreeNodeBackground}" />-->

            <Border Style="{StaticResource ListBoxItemBaseBorder}">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#E0E0E0" Offset="0.0" />
                        <GradientStop Color="#C0C0C0" Offset="1.0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border Style="{StaticResource SelectionOverlayBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" 
                               TextWrapping="Wrap" VerticalAlignment="Center" Margin="0,1,0,1"/>

                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <AvdWpfControls:ImageButton IsTabStop="False" ImageSource="/eBalanceKitResources;component/Resources/EditPen.png"
                                        ToolTip="Elementdetails bearbeiten (F2)" Click="BtnEditDetails_Click" />
                    </StackPanel>

                    <TextBlock Grid.Row="1" Grid.ColumnSpan="3" Text="{Binding Path=Value.Comment}" TextWrapping="Wrap" Style="{StaticResource AccountTextStyle}"
                               Visibility="{Binding Value.Comment, Converter={StaticResource ValueExistsToVisibilityConverter}}" FontSize="10" FontStyle="Italic" Foreground="#444" 
                               IsEnabled="{Binding Value.ReportRights.WriteRestAllowed}"/>

                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="MonetaryNode" ItemsSource="{Binding Path=Children}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--<CheckBox HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="An den BAnz übermitteln" IsChecked="{Binding Value.SendAccountBalances, Mode=OneWay}" />-->


            <CheckBox IsChecked="{Binding isSendAccountBalanceForAllParents}" 
                      Margin="5,0" 
                      IsEnabled="{Binding IsCheckBoxEnabled}"
                      HorizontalAlignment="Left" 
                      VerticalAlignment="Center" 
                      ToolTip="An den BAnz übermitteln" 
                      Visibility="{Binding Value.ReportRights.ReadRestAllowed, Converter={StaticResource TrueToVisibilityConverter}}"/>
            <!-- IsEnabled="{Binding Value.ReportRights.WriteRestAllowed}"-->

            <!--<Image Height="12" Source="/eBalanceKitResources;component/Resources/LightBlueRound16.png" HorizontalAlignment="Left" VerticalAlignment="Center"
                   ToolTip="{x:Static Localisation:ResourcesReconciliation.ReconciliationIsSelectedIconTooltip}"
                   Visibility="{Binding IsAssignedToSelectedReconciliation, Converter={StaticResource TrueToVisibilityConverter}}"/>-->

            <!--<Border Grid.Column="1" BorderBrush="Silver" Style="{StaticResource ListBoxItemBaseBorder}" Background="{StaticResource BalanceTreeLeafNodeBackgroundBrush}" />-->
            <Border Grid.Column="1" Style="{StaticResource BalanceTreeNodeBackground}" />
            <Border Grid.Column="1" Style="{StaticResource SelectionOverlayBorder}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>

                        <!--<ColumnDefinition>
                            <ColumnDefinition.Style>
                                <Style TargetType="ColumnDefinition">
                                    <Setter Property="Width" Value="160" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding VisualOptions.ShowReconciliationValues}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Width" Value="Auto" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ColumnDefinition.Style>
                        </ColumnDefinition>

                        <ColumnDefinition Width="Auto"/>

                        <ColumnDefinition>
                            <ColumnDefinition.Style>
                                <Style TargetType="ColumnDefinition">
                                    <Setter Property="Width" Value="160" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding VisualOptions.ShowCommercialBalanceValues}" Value="False" />
                                                <Condition Binding="{Binding VisualOptions.ShowTaxBalanceValues}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Width" Value="Auto" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ColumnDefinition.Style>
                        </ColumnDefinition>
-->
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!-- placeholder -->
                    <!--<Border Grid.ColumnSpan="1" MinWidth="250" />-->


                    <!-- assignment buttons -->
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Top">
                        <!-- the next stackpanel only needed for allow the validation signs even the user have only read rights so the next elements are not in the same group with the validation signs -->
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top"  >

                            <CheckBox IsChecked="{Binding Value.AutoComputeEnabled}" Margin="0,0,2,0" VerticalAlignment="Center" 
                                      Style="{StaticResource AutoSumItemCheckbox}" IsTabStop="False" />
                        </StackPanel>
                        <Controls:MonetaryNodeInfoIconsReconciliation VerticalAlignment="Center" />
                    </StackPanel>

                    <TextBlock Grid.Column="1" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />
                    
                    
                    <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal"> <!--Visibility="{Binding Value.IsEnabled, Converter={StaticResource TrueToVisibilityConverter}}"-->
                        <Image Source="/eBalanceKitResources;component/Resources/PenDoc.png" Height="12" ToolTip="Es wurde ein Wert eingegeben">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding ="{Binding Path=IsValueEditingAllowed}" Value="True" />
                                                <Condition Binding ="{Binding Path=Value.HasManualValue}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <TextBlock Text="{Binding Path=Value.DisplayString}" Style="{StaticResource TreeViewTextStyle}" />
                    </StackPanel>

                    <!-- enter values directly in the TreeView-->
                    <StackPanel Grid.Row="3" Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,2,0,0">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <!--<Setter Property="Visibility" Value="{Binding VisualOptions.EnterValuesInTree, Converter={StaticResource TrueToVisibilityConverter}}" />-->
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                        </StackPanel.Style>

                        <!-- values as textbox -->
                        <AvdWpfControls:MonetaryTextBox Margin="5,0,0,0" Background="White" Width="120"                                                        
                                                        Text="{Binding Value.Value, Converter={StaticResource StringToNullableMonetaryConverter}}"
                                                        IsEnabled="{Binding Value.IsEnabled}"/>

                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal" Grid.Column="4" VerticalAlignment="Center" >

                        <AvdWpfControls:ImageButton IsTabStop="False" ImageSource="/eBalanceKitResources;component/Resources/EditPen.png"
                                            ToolTip="Elementdetails bearbeiten (F2)" Click="BtnEditDetails_Click" Margin="5,0,0,0" />

                        <TextBlock Width="12" HorizontalAlignment="Center" Text="{x:Static Localisation:ResourcesBalanceList.DebitAbbreviation}" Visibility="{Binding Element.IsDebitBalance, Converter={StaticResource TrueToVisibilityConverter}}" ToolTip="{x:Static Localisation:ResourcesBalanceList.DebitSide}" Margin="5,0,0,0"/>
                        <TextBlock Width="12" HorizontalAlignment="Center" Text="{x:Static Localisation:ResourcesBalanceList.CreditAbbreviation}" Visibility="{Binding Element.IsCreditBalance, Converter={StaticResource TrueToVisibilityConverter}}" ToolTip="{x:Static Localisation:ResourcesBalanceList.CreditSide}" Margin="5,0,0,0"/>
                    </StackPanel>
                    

                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

    <SolidColorBrush x:Key="AssignedPositionBorderBorderBrush" Color="#9fba7b" />

    <LinearGradientBrush x:Key="AssignedPositionBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#def5cb" Offset="0.0" />
        <GradientStop Color="#b6d68d" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="AssignedPositionBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
        <Setter Property="Background" Value="{StaticResource AssignedPositionBorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource AssignedPositionBorderBorderBrush}" />
    </Style>

    <Style x:Key="FederalGazetteElementCaption" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    
    <Style x:Key="FederalGazetteElementGrid" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="15" />
    </Style>

    <DataTemplate x:Key="FederalGazetteValidationError">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="Es ist ein Fehler aufgetreten : " />
            <!--<ContentPresenter Grid.Column="1"/>-->
            <TextBlock Text="{Binding .}" Grid.Column="1"/>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="FederalGazetteElementList" DataType="{x:Type Structures:FederalGazetteElementList}">
        <ScrollViewer >
            <Grid>
                <Grid.RowDefinitions>
                    <!--<ColumnDefinition Width="16" />
                <ColumnDefinition Width="*" />-->
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <!--<StackPanel>-->
                <!--<ListBox ItemsSource="{Binding Items}" ItemTemplateSelector="{StaticResource TreeViewItemTemplateSelector}" Margin="15"/>-->
                <ItemsControl ItemsSource="{Binding Items}" ItemTemplateSelector="{StaticResource TreeViewItemTemplateSelector}" MaxWidth="400"/>

                <!--<ContentControl Content="{Binding .}" ContentTemplateSelector="{StaticResource TreeViewItemTemplateSelector}" />-->
                <!--<Border Background="AliceBlue">
                <Label Content="{TemplateBinding ContentPresenter.Content}" />
            </Border>-->
                <ItemsControl ItemsSource="{Binding ValidationErrors}" ItemTemplate="{StaticResource FederalGazetteValidationError}" Grid.Row="1"/>
                <!--<ListBox ItemsSource="{Binding ValidationErrors}" ItemTemplate="{StaticResource FederalGazetteValidationError}" />-->
                <!--<ListBox ItemsSource="{Binding ValidationErrors}" />-->
                <!--<ItemsControl ItemsSource="{Binding ValidationErrors}" ItemTemplateSelector="{StaticResource TreeViewItemTemplateSelector}" />-->
                <!--</StackPanel>-->
                <!--ValidationErrors-->
            </Grid>
        </ScrollViewer>
    </DataTemplate>


    <DataTemplate x:Key="FederalGazetteElementInfoString" DataType="{x:Type ValueTypes:FederalGazetteElementInfoString}">
        <Grid Visibility="{Binding IsAllowed, Converter={StaticResource TrueToVisibilityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Caption}" Margin="0" />
            <!--<Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="  (" Margin="0" />
                <TextBlock Text="{Binding Id}" Margin="0" Grid.Column="1" />
                <TextBlock Text=")" Margin="0" Grid.Column="2" />
                <TextBlock Grid.Column="3" />
            </Grid>-->
            <StackPanel Orientation="Horizontal" Margin="0" Grid.Column="1">
                <TextBlock Text="  ("/>
                <TextBlock Text="{Binding Id}" />
                <TextBlock Text=")" />
                <TextBlock />
            </StackPanel>
            <!--Requiered so that the user can change the selection without moving the mouse exactly over some text -->
            <TextBlock Grid.Column="2" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FederalGazetteElementInfoDate" DataType="{x:Type ValueTypes:FederalGazetteElementDate}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibilityConverter}}" Style="{StaticResource FederalGazetteElementGrid}">
            <Grid.RowDefinitions>
                <!--<ColumnDefinition Width="16" />
                <ColumnDefinition Width="*" />-->
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--<Label>
                <StackPanel Orientation="Horizontal">-->
                    <TextBlock Text="{Binding Caption}" Style="{StaticResource FederalGazetteElementCaption}" />
                <!--</StackPanel>
            </Label>-->

            <!--<Grid Grid.Row="1" IsEnabled="{Binding IsAllowed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>-->
            <StackPanel Grid.Row="1" IsEnabled="{Binding IsAllowed}" Orientation="Horizontal">
                <DatePicker SelectedDate="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="150" HorizontalAlignment="Left" IsTabStop="False" IsEnabled="{Binding IsAllowed}">
                    <!--<DatePicker.Style>
                    <Style TargetType="{x:Type DatePicker}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsAllowed}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DatePicker.Style>-->
                </DatePicker>
                <Button ToolTip="{x:Static Localisation:ResourcesTaxonomy.ResetCombobox}" Click="btnResetIconClick" Margin="3,2,0,0">
                    <Button.Content>
                        <Image Source="/eBalanceKitResources;component/Resources/clear.png" Stretch="Fill"/>
                    </Button.Content>
                    <Button.Style>
                        <Style BasedOn="{StaticResource ImageButtonStyle}" TargetType="Button">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsNullable}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsAllowed}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource ValueExistsToBoolConverter}, Path=Value}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--</Grid>-->
            </StackPanel>
        </Grid>
        </DataTemplate>

    <DataTemplate x:Key="FederalGazetteElementListBox" DataType="{x:Type ValueTypes:FederalGazetteElementSelectionList}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibilityConverter}}" Style="{StaticResource FederalGazetteElementGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--<Label>
                <StackPanel Orientation="Horizontal">-->
            <TextBlock Text="{Binding Caption}" Style="{StaticResource FederalGazetteElementCaption}" />
            <!--</StackPanel>
            </Label>-->
            <Grid Grid.Row="1" IsEnabled="{Binding IsAllowed}" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AvdWpfControls:AvdComboBox SelectValueMessage="Bitte auswählen ..." ItemsSource="{Binding Options}" SelectedItem="{Binding SelectedOption}" ItemTemplateSelector="{StaticResource TreeViewItemTemplateSelector}"/>
                <Button Grid.Column="1" ToolTip="{x:Static Localisation:ResourcesTaxonomy.ResetCombobox}" Click="btnResetIconClick" Margin="3,2,0,0">
                    <Button.Content>
                        <Image Source="/eBalanceKitResources;component/Resources/clear.png" Stretch="Fill"/>
                    </Button.Content>
                    <Button.Style>
                        <Style BasedOn="{StaticResource ImageButtonStyle}" TargetType="Button">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsNullable}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource ValueExistsToBoolConverter}, Path=SelectedOption}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style TargetType="AvdWpfControls:AvdComboBox" x:Key="DeletableCombobox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Style="{StaticResource FederalGazetteElementGrid}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Grid.Column="0"/>
                        <Button Grid.Column="1" ToolTip="{x:Static Localisation:ResourcesTaxonomy.ResetCombobox}" Click="btnResetIconClick">
                            <Button.Content>
                                <Image Source="/eBalanceKitResources;component/Resources/clear.png" Stretch="Fill"/>
                            </Button.Content>
                            <Button.Style>
                                <Style BasedOn="{StaticResource ImageButtonStyle}" TargetType="Button">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Converter={StaticResource ValueExistsToBoolConverter}, Path=SelectedOption}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
        <!-- ControlTemplate taken from MSDN http://msdn.microsoft.com/en-us/library/ms754242.aspx -->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <!--<Setter Property="MinWidth" Value="120"/>-->
        <!--<Setter Property="MinHeight" Value="95"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" CornerRadius="2">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Background="Transparent">
                                    <RadioButton Focusable="False" IsHitTestVisible="False" IsChecked="{TemplateBinding IsSelected}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="FederalGazetteElementRadioOptions" DataType="{x:Type ValueTypes:FederalGazetteElementSelectionList}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibilityConverter}}" Style="{StaticResource FederalGazetteElementGrid}">
            <Grid.RowDefinitions>
                <!--<ColumnDefinition Width="16" />
                <ColumnDefinition Width="*" />-->
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--<Label>
                <StackPanel Orientation="Horizontal">-->
            <TextBlock Text="{Binding Caption}" Style="{StaticResource FederalGazetteElementCaption}" />
            <!--</StackPanel>
            </Label>-->
            
            <!--<RadioButtons-->
            <ListBox Background="Transparent" Grid.Row="1"
			IsEnabled="{Binding Path=IsAllowed}"
			Style="{StaticResource RadioButtonList}" ItemTemplateSelector="{StaticResource TreeViewItemTemplateSelector}"
			ItemsSource="{Binding Options}"
			SelectedValue="{Binding Path=SelectedOption, UpdateSourceTrigger=PropertyChanged}"/>
            
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="FederalGazetteElementRadioOptions2" DataType="{x:Type ValueTypes:FederalGazetteElementSelectionList}">
        <Grid>
            <Grid.RowDefinitions>
                <!--<ColumnDefinition Width="16" />
                <ColumnDefinition Width="*" />-->
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--<Label>
                <StackPanel Orientation="Horizontal">-->
                    <TextBlock Text="{Binding Caption}" Style="{StaticResource FederalGazetteElementCaption}" />
                <!--</StackPanel>
            </Label>-->
            <!--<RadioButton-->
            <ListBox Grid.Row="1" ItemsSource="{Binding Options}" SelectedItem="{Binding SelectedOption}" IsEnabled="{Binding IsAllowed}" x:Name="lstOptions">
                <ListBox.Resources>
                    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="2, 2, 2, 0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border Background="Transparent">
                                        <!--IsHitTestVisible="false" Focusable="false"-->
                                        <RadioButton Content="{TemplateBinding ContentPresenter.Content}">
                                            <!-- IsChecked="{Binding Path=ItemsSource.SelectedOption, Converter={StaticResource IsEqualToBoolConverter}, ConverterParameter=., ElementName=lstOptions, Mode=TwoWay}"-->
                                            <!--<RadioButton.IsChecked>-->
                                                <!--<Binding Converter="{StaticResource IsEqualToBoolConverter}" Path="SelectedOption" RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.ConverterParameter>
                                                        <FrameworkElement DataContext="{TemplateBinding DataContext}" />
                                                    </Binding.ConverterParameter>
                                                </Binding>-->
                                                <!--<MultiBinding Converter="{StaticResource myNameConverter}" ConverterParameter="FormatLastFirst">
                                                    <Binding Path="SelectedOption" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <TemplateBinding "/>
                                                </MultiBinding>-->
                                            <!--</RadioButton.IsChecked>-->
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.Resources>
            </ListBox>

        </Grid>
        </DataTemplate>

    <DataTemplate x:Key="FederalGazetteElementText" DataType="{x:Type ValueTypes:FederalGazetteElementText}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibilityConverter}}">            
            <TextBlock Text="{Binding Caption}" Margin="0" />

            <Grid IsEnabled="{Binding Path=IsAllowed}">
                <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>   
                <TextBox Margin="0" Grid.Column="1" Text="{Binding Value}"/>
                <Button ToolTip="{x:Static Localisation:ResourcesTaxonomy.ResetCombobox}" Click="btnResetIconClick" Margin="3,2,0,0">
                    <Button.Content>
                        <Image Source="/eBalanceKitResources;component/Resources/clear.png" Stretch="Fill"/>
                    </Button.Content>
                    <Button.Style>
                        <Style BasedOn="{StaticResource ImageButtonStyle}" TargetType="Button">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAllowed}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource ValueExistsToBoolConverter}, Path=Value}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="Order" DataType="{x:Type Structures:Order}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding Document.Name}" Grid.Column="0"/>
            <TextBlock Text="{Binding OrderNo}" Grid.Column="1"/>
            <TextBlock Text="{Binding Sent}" Grid.Column="2"/>
            <TextBlock Text="{Binding LastChecked}" Grid.Column="3"/>
            <Button Command="{Binding Path=CmdShowDetails, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                    CommandParameter="{Binding .}" ToolTip="See more information">
                <Button.Content>
                    <Image Source="/eBalanceKitResources;component/Resources/SearchColored.png" Stretch="Fill" Grid.Column="4"/>
                </Button.Content>
            </Button>
            <Button Tag="{Binding .}" ToolTip="Query status" Command="{Binding CmdRefreshStatus, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                <Button.Content>
                    <Image Source="/eBalanceKitResources;component/Resources/Refresh.png" Stretch="Fill" Grid.Column="5"/>
                </Button.Content>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FederalGazetteElementBool" DataType="{x:Type ValueTypes:FederalGazetteElementBool}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource TrueToVisibilityConverter}}" IsEnabled="{Binding Path=IsAllowed}" Style="{StaticResource FederalGazetteElementGrid}">
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>-->
            <AvdWpfControls:ThreeStateCheckBox IsChecked="{Binding Value}" Content="{Binding Caption}" Visibility="{Binding IsNullable, Converter={StaticResource TrueToVisibilityConverter}}" />
            <CheckBox IsChecked="{Binding BoolValue}" Content="{Binding Caption}" Visibility="{Binding IsNullable, Converter={StaticResource FalseToVisibilityConverter}}" />
            
        </Grid>
    </DataTemplate>


</ResourceDictionary>
    