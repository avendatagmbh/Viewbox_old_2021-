<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:business_rights="clr-namespace:eBalanceKitBusiness.Rights;assembly=eBalanceKitBusiness"
                    xmlns:loc="clr-namespace:eBalanceKitResources.Localisation;assembly=eBalanceKitResources"
                    xmlns:Models="clr-namespace:eBalanceKit.Windows.Security.Models">

    <LinearGradientBrush x:Key="ItemAllowedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FF038003" Offset="0" />
        <GradientStop Color="#FF064806" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ItemAllowedInheritedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#d8e8cf" Offset="0" />
        <GradientStop Color="#c6e8b1" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ItemDisallowedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#FFBA0707" Offset="0" />
        <GradientStop Color="#FFBA0707" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ItemDisallowedInheritedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#e0e0e0" Offset="0" />
        <GradientStop Color="#b0b0b0" Offset="1" />
        <!--<GradientStop Color="#c96563" Offset="0" />
        <GradientStop Color="#824140" Offset="1" />-->
    </LinearGradientBrush>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <!--<Border>
                        <Rectangle Margin="15,0,0,0" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2"/>
                    </Border>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="RoleCheckboxGrant" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Grid>
                                    <Path Width="9" Height="9" x:Name="CheckMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img1" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img2" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="UncheckedMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditAllowed}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSpecialRight}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="ToolTip" Value="{x:Static loc:ResourcesCommon.ModifyRightNotPossible}"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="UncheckedMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding GrantChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultGrant}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding GrantChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultGrant}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img2" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                            <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="CheckMark" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="#CCC" Offset="0"/>
                                        <GradientStop Color="#CCC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="RoleCheckboxWrite" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Grid>
                                    <Path Width="9" Height="9" x:Name="CheckMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img1" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img2" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="UncheckedMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditAllowed}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="UncheckedMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding WriteChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultWrite}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding WriteChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultWrite}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img2" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                            <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="CheckMark" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="#CCC" Offset="0"/>
                                        <GradientStop Color="#CCC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="RoleCheckboxRead" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Grid>
                                    <Path Width="9" Height="9" x:Name="CheckMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img1" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img2" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="UncheckedMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditAllowed}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="UncheckedMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ReadChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultRead}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ReadChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultRead}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img2" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                            <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="CheckMark" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="#CCC" Offset="0"/>
                                        <GradientStop Color="#CCC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type CheckBox}" x:Key="RoleCheckboxSend" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Grid>
                                    <Path Width="9" Height="9" x:Name="CheckMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img1" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img2" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="UncheckedMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditAllowed}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSpecialRight}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="ToolTip" Value="{x:Static loc:ResourcesCommon.ModifyRightNotPossible}"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="UncheckedMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SendChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultSend}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding SendChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultSend}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img2" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                            <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="CheckMark" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="#CCC" Offset="0"/>
                                        <GradientStop Color="#CCC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="RoleCheckboxExport" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                                <Grid>
                                    <Path Width="9" Height="9" x:Name="CheckMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img1" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="img2" Visibility="Collapsed" SnapsToDevicePixels="False" Opacity="0.25" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                    <Path Width="9" Height="9" x:Name="UncheckedMark" Visibility="Collapsed" SnapsToDevicePixels="False" Stroke="Red" StrokeThickness="2" Data="M 1 1 L 8 8 M 1 8 L 8 1"/>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" RecognizesAccessKey="True"/>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEditAllowed}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSpecialRight}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="ToolTip" Value="{x:Static loc:ResourcesCommon.ModifyRightNotPossible}"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="UncheckedMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ExportChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultExport}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img1" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ExportChecked}" Value="{x:Null}" />
                                <Condition Binding="{Binding InheritResultExport}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="img2" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                            <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="CheckMark" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                        <GradientStop Color="#CCC" Offset="0"/>
                                        <GradientStop Color="#CCC" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <HierarchicalDataTemplate DataType="{x:Type business_rights:RoleRightTreeNode}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding HeaderString}" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type Models:RightObjectTreeNode}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding HeaderString}" />
        </StackPanel>
    </HierarchicalDataTemplate>


    <HierarchicalDataTemplate DataType="{x:Type business_rights:EffectiveUserRightTreeNode}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding HeaderString}" />
        </StackPanel>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type business_rights:RoleRightTreeNodeReportRights}" ItemsSource="{Binding Children}">
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding HeaderString}" />
        </StackPanel>
    </HierarchicalDataTemplate>
    
</ResourceDictionary>