<UserControl x:Class="eBalanceKit.Windows.Security.CtlRightObjectTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:loc="clr-namespace:eBalanceKitResources.Localisation;assembly=eBalanceKitResources"
             xmlns:wpfc="clr-namespace:AvdWpfControls;assembly=AvdWpfControls"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300">


    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/ResourceDictionaries/RoleDialogResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <TreeView x:Name="tvRights" ItemsSource="{Binding RootNodes}" PreviewMouseLeftButtonDown ="tvRights_PreviewMouseLeftButtonDown">
        <TreeView.ItemContainerStyle>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="UIElement.Focusable" Value="false" />
                                                <Setter Property="FrameworkElement.Width" Value="16" />
                                                <Setter Property="FrameworkElement.Height" Value="16" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="Silver" CornerRadius="5" Padding="5,1"
                                            SnapsToDevicePixels="True" Grid.Column="1" ToolTip="{Binding ToolTip, Mode=OneWay}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>

                                                    <!-- allowed -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsChecked}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource ItemAllowedBrush}" />
                                                    </MultiDataTrigger>

                                                    <!-- disallowed -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsChecked}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource ItemDisallowedBrush}" />
                                                    </MultiDataTrigger>

                                                    <!-- allowed / inherited -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsChecked}" Value="{x:Null}" />
                                                            <Condition Binding="{Binding IsInherited}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource ItemAllowedInheritedBrush}" />                                                        
                                                    </MultiDataTrigger>

                                                    <!-- disallowed / inherited -->
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsChecked}" Value="{x:Null}" />
                                                            <Condition Binding="{Binding IsInherited}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" Value="{StaticResource ItemDisallowedInheritedBrush}" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        
                                        <StackPanel Orientation="Horizontal">
                                            <Image Source="/eBalanceKitResources;component/Resources/Locked.png" Visibility="{Binding IsEditAllowed, Converter={StaticResource FalseToVisibilityConverter}}" Margin="0,0,2,0" Width="16"/>
                                            <ContentPresenter x:Name="PART_Header"
                                                            Content="{TemplateBinding HeaderedContentControl.Header}"
                                                            ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                            ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                            ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                            ContentSource="Header"
                                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" >
                                                <ContentPresenter.Style>
                                                    <Style TargetType="ContentPresenter">
                                                        <Style.Triggers>
                                                            
                                                            <!-- allowed -->
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsChecked}" Value="True" />
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextElement.Foreground" Value="White" />
                                                            </MultiDataTrigger>

                                                            <!-- disallowed -->
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsChecked}" Value="False"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextElement.Foreground" Value="White" />
                                                            </MultiDataTrigger>

                                                            <!-- allowed / inherited -->
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsChecked}" Value="{x:Null}" />
                                                                    <Condition Binding="{Binding IsInherited}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextElement.Foreground" Value="Black" />
                                                            </MultiDataTrigger>

                                                            <!-- disallowed / inherited -->
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsChecked}" Value="{x:Null}" />
                                                                    <Condition Binding="{Binding IsInherited}" Value="False"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="TextElement.Foreground" Value="Black" />
                                                            </MultiDataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ContentPresenter.Style>
                                            </ContentPresenter>
                                        </StackPanel>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="ItemsControl.HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TreeView.ItemContainerStyle>

    </TreeView>
</UserControl>
