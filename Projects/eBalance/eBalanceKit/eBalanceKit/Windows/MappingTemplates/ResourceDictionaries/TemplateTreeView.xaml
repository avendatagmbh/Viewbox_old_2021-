<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c1="clr-namespace:eBalanceKit.Converters"
                    xmlns:xbrlPre="clr-namespace:Taxonomy.PresentationTree;assembly=Taxonomy"
                    xmlns:MappingTemplate="clr-namespace:eBalanceKitBusiness.MappingTemplate;assembly=eBalanceKitBusiness"
                    xmlns:TemplateSelectors="clr-namespace:eBalanceKit.Windows.MappingTemplates.TemplateSelectors"
                    xmlns:c3="clr-namespace:AvdWpfControls;assembly=AvdWpfControls">

    <TemplateSelectors:TemplateTreeTemplateSelector x:Key="templateTreeTemplateSelector" />

    <!--******************************************************************************************************************************************************
        account
        *******************************************************************************************************************************************************-->

    <Style TargetType="{x:Type CheckBox}" x:Key="AutoSumItemCheckbox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Border x:Name="Border" Height="16" Width="16" CornerRadius="3" />
                                <Image x:Name="Image" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputedD.png" Visibility="Hidden" Opacity="0.8"/>
                                <Image x:Name="ImageLocked" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputedL.png" Visibility="Hidden"/>
                                <Image x:Name="CheckMark" Width="16" Source="/eBalanceKitResources;component/Resources/sumManualComputed.png" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content"
                                              Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value.AutoComputeAllowed}" Value="False">
                            <Setter TargetName="ImageLocked" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Image" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#40000000" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeEnabled}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Wert wird in übergeordneten Knoten aufsummiert (deaktivieren durch Linksklick)" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeEnabled}" Value="False"/>
                    <Condition Binding="{Binding Value.AutoComputeAllowed}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Aufsummierung des Wertes in übergeordneten Knoten ist deaktiviert (aktivieren durch Linksklick)" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value.AutoComputeEnabled}" Value="False"/>
                    <Condition Binding="{Binding Value.AutoComputeAllowed}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="ToolTip" Value="Aufsummierung nicht möglich, da die übergeordnete Position deaktiviert oder automatisch gemäß Taxnomie berechnet ist" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <SolidColorBrush x:Key="BalanceAccountTextBrush" Color="Black" />
    <SolidColorBrush x:Key="BalanceAccountSelectedTextBrush" Color="#202020" />
    
    <Style x:Key="TreeViewImage" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="12" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="BalanceAssignmentLineBorderBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#FF7CD87C" Offset="0" />
        <GradientStop Color="#FF91DE91" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BalanceAssignmentLineBrushCreditor" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#f5d4cb" Offset="0.0" />
        <GradientStop Color="#d76969" Offset="1.0" />
    </LinearGradientBrush>
    
    <LinearGradientBrush x:Key="BalanceAssignmentLineBrushDebitor" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#def5cb" Offset="0.0" />
        <GradientStop Color="#b6d68d" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BalanceAssignmentLineBrushNone" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#d2ddea" Offset="0.0" />
        <GradientStop Color="#aebdcf" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedBalanceAssignmentLineBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#c6e4a8" Offset="0.0" />
        <GradientStop Color="#7da14a" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="assignmentLine" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="#80b6d68d" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type}">
                <DataTrigger.Value>
                    <MappingTemplate:MappingTemplateTypes>None</MappingTemplate:MappingTemplateTypes>
                </DataTrigger.Value>
                <Setter Property="Background" Value="{StaticResource BalanceAssignmentLineBrushNone}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}">
                <DataTrigger.Value>
                    <MappingTemplate:MappingTemplateTypes>Debitor</MappingTemplate:MappingTemplateTypes>
                </DataTrigger.Value>
                <Setter Property="Background" Value="{StaticResource BalanceAssignmentLineBrushDebitor}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Type}">
                <DataTrigger.Value>
                    <MappingTemplate:MappingTemplateTypes>Creditor</MappingTemplate:MappingTemplateTypes>
                </DataTrigger.Value>
                <Setter Property="Background" Value="{StaticResource BalanceAssignmentLineBrushCreditor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <LinearGradientBrush x:Key="selectionOverlayBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#20303030" Offset="0.0" />
        <GradientStop Color="#40303030" Offset="0.8" />
        <GradientStop Color="#50303030" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="selectionOverlayBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5" />
        <Style.Triggers>
            <DataTrigger Binding ="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="{StaticResource selectionOverlayBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TreeViewTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BalanceAccountTextBrush}" />
        <Style.Triggers>
            <DataTrigger Binding ="{Binding Path=Value.IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ********************************************************************** -->

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="IsExpanded" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="IsSelected" Value="{Binding RelativeSource={RelativeSource Self}, Path=Header.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton 
                                x:Name="Expander" 
                                Style="{StaticResource ExpandCollapseToggleStyle}" 
                                IsChecked="{Binding Path=IsExpanded, 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                        <Border Name="Bd"
                                  Grid.Column="1"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="PART_Header"
                                    ContentSource="Header"
                                    HorizontalAlignment="Stretch"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                  Grid.Row="1"
                  Grid.Column="1"
                  Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type CheckBox}" x:Key="SendBalanceCheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle"	Value="{StaticResource CheckBoxFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Border x:Name="Border" Height="16" Width="16" CornerRadius="3" />
                                <Image x:Name="Image" Width="16" Source="/eBalanceKitResources;component/Resources/SendAccountsD.png" Visibility="Hidden" Opacity="0.8" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <Image x:Name="CheckMark" Width="16" Source="/eBalanceKitResources;component/Resources/SendAccounts.png" Visibility="Hidden" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>
                        </BulletDecorator.Bullet>

                        <ContentPresenter x:Name="content"
                                              Margin="4,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="Image" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#40000000" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding Value.SendAccountBalances}" Value="True">
                <Setter Property="ToolTip" Value="Kontennachweise zu dieser Position beim Senden mit übertragen (deaktivieren durch Linksklick)" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Value.SendAccountBalances}" Value="False">
                <Setter Property="ToolTip" Value="Kontennachweise zu dieser Position beim Senden nicht übertragen (aktivieren durch Linksklick)" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <!-- default nodes -->
    <LinearGradientBrush x:Key="BalanceTreeNodeDefaultBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E0E0E0" Offset="0.0" />
        <GradientStop Color="#C0C0C0" Offset="1.0" />
    </LinearGradientBrush>

    <!-- monatary computed nodes -->
    <LinearGradientBrush x:Key="BalanceTreeNodeMonetaryDefaultBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#E0E0E0" Offset="0.0" />
        <GradientStop Color="#C0C0C0" Offset="1.0" />
    </LinearGradientBrush>

    <!-- leaf nodes -->
    <LinearGradientBrush x:Key="BalanceTreeLeafNodeBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#f6deae" Offset="0.0" />
        <GradientStop Color="#deb84b" Offset="1.0" />
    </LinearGradientBrush>

    <!-- manual input nodes -->
    <LinearGradientBrush x:Key="BalanceTreeManualInputNodeBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#f4ee88" Offset="0.0" />
        <GradientStop Color="#FFFFFCC4" Offset="1.0" />
    </LinearGradientBrush>
   
    <!-- balance tree background -->
    <Style x:Key="BalanceTreeNodeBackground" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
        <Setter Property="BorderBrush" Value="Silver" />
        <Setter Property="Background" Value="{StaticResource BalanceTreeNodeDefaultBrush}" />

        <Style.Triggers>

            <!-- all monetary nodes -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=Element.ValueType}" Value="Monetary" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BalanceTreeNodeMonetaryDefaultBrush}" />
            </MultiDataTrigger>

            <!-- disabled node -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=Value.IsEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
            </MultiDataTrigger>

            <!-- drop target node -->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding ="{Binding Path=Value.HasComputedValue}" Value="False" />
                    <Condition Binding ="{Binding Path=Value.IsEnabled}" Value="True" />
                    <Condition Binding ="{Binding Path=IsValueEditingAllowed}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource BalanceTreeLeafNodeBackgroundBrush}" />
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <HierarchicalDataTemplate x:Key="PresentationTreeNodeList" DataType="{x:Type xbrlPre:PresentationTreeNode}">
        <Grid>
            <Border Style="{StaticResource BalanceTreeNodeBackground}" Padding="3,1" Margin="0,1" x:Name="border" />
            <Border Style="{StaticResource selectionOverlayBorder}" Padding="3,1" Margin="0,1">
                <Grid Height="16">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />
                        <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="(Listenelement - Einträge werden nicht angezeigt)" />
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="PresentationTreeNodeDefault" DataType="{x:Type xbrlPre:PresentationTreeNode}" ItemsSource="{Binding Path=Children}">
        <Grid>
            <Border Style="{StaticResource BalanceTreeNodeBackground}" Padding="3,1" Margin="0,1" x:Name="border" />
            <Border Style="{StaticResource selectionOverlayBorder}" Padding="3,1" Margin="0,1">
                <Grid Height="16">
                    <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="PresentationTreeNodeMonetary" DataType="{x:Type xbrlPre:PresentationTreeNode}" ItemsSource="{Binding Path=Children}">
        <Grid>            
            <Border Style="{StaticResource BalanceTreeNodeBackground}" Padding="3,1" Margin="0,1" x:Name="border" />
            <Border Style="{StaticResource selectionOverlayBorder}" Padding="3,1" Margin="0,1">
                <Grid>

                    <!-- enabled values -->
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Value.IsEnabled}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal">

                            <Image Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/Calculator16.png" 
                                   Visibility="{Binding IsComputed, Converter={StaticResource TrueToVisibilityConverter}}">
                                <Image.Style>
                                    <Style TargetType="Image" BasedOn="{StaticResource TreeViewImage}">
                                        <Setter Property="ToolTip" Value="Wert wird gemäß Taxonomie berechnet" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Value.HasComputedValue}" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                                <Setter Property="ToolTip" Value="{x:Null}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                            <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/sumPos.png" 
                                   Visibility="{Binding IsPositiveComputationSource, Converter={StaticResource TrueToVisibilityConverter}}"
                                   ToolTip="Wert fließt positiv in Berechnung gemäß Taxonomie ein" IsEnabled="{Binding Value.IsEnabled}"/>

                            <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/sumNeg.png" 
                                   Visibility="{Binding IsNegativeComputationSource, Converter={StaticResource TrueToVisibilityConverter}}"
                                   ToolTip="Wert fließt negativ in Berechnung gemäß Taxonomie ein" IsEnabled="{Binding Value.IsEnabled}"/>

                            <CheckBox IsChecked="{Binding Value.AutoComputeEnabled}" Margin="0,0,2,0" VerticalAlignment="Center" Style="{StaticResource AutoSumItemCheckbox}" 
                                      Visibility="{Binding Value.IsComputationOrphanedNode, Converter={StaticResource TrueToVisibilityConverter}}" IsTabStop="False" />
                            
                            <Image Style="{StaticResource TreeViewImage}"  Source="/eBalanceKitResources;component/Resources/notPermittedForFiscal.png" 
                                   Visibility="{Binding Element.NotPermittedForFiscal, Converter={StaticResource TrueToVisibilityConverter}}" Margin="0,0,5,0" 
                                   ToolTip="Steuerlich unzulässig"/>
                            <Image Style="{StaticResource TreeViewImage}"  Source="/eBalanceKitResources;component/Resources/notPermittedForCommercial.png" 
                                   Visibility="{Binding Element.NotPermittedForCommercial, Converter={StaticResource TrueToVisibilityConverter}}" Margin="0,0,5,0" 
                                   ToolTip="Handelsrechtlich unzulässig"/>

                        </StackPanel>

                        <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" />

                        <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="5,0,0,0" VerticalAlignment="Center" >
                            <CheckBox IsChecked="{Binding Value.SendAccountBalancesRecursive}" Margin="5,0,0,0" 
                                      Style="{StaticResource SendBalanceCheckBox}" IsTabStop="False"/>
                        </StackPanel>
                    </Grid>

                    <!-- disabled values -->
                    <Grid>
                        <Grid.Style>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Value.IsEnabled}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal">
                            
                            <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/Calculator16.png" IsEnabled="False"
                                   Visibility="{Binding IsComputed, Converter={StaticResource TrueToVisibilityConverter}}"
                                   ToolTip="Wert wird gemäß Taxonomie berechnet" />
                            
                            <Image Style="{StaticResource TreeViewImage}" Margin="0,0,2,0" Source="/eBalanceKitResources;component/Resources/sum.png" IsEnabled="False"
                                   Visibility="{Binding IsComputationSource, Converter={StaticResource TrueToVisibilityConverter}}" 
                                   ToolTip="Wert fließt in Berechnung gemäß Taxonomie ein"/>

                            <CheckBox IsChecked="{Binding Value.AutoComputeEnabled}"  Margin="0,0,2,0" VerticalAlignment="Center" Style="{StaticResource AutoSumItemCheckbox}" 
                                      Visibility="{Binding Value.IsComputationOrphanedNode, Converter={StaticResource TrueToVisibilityConverter}}" IsTabStop="False" />

                            <Image Style="{StaticResource TreeViewImage}"  Source="/eBalanceKitResources;component/Resources/notPermittedForFiscal.png" 
                                   Visibility="{Binding Element.NotPermittedForFiscal, Converter={StaticResource TrueToVisibilityConverter}}" Margin="0,0,5,0" IsEnabled="False"
                                   ToolTip="Steuerlich unzulässig" />
                            
                            <Image Style="{StaticResource TreeViewImage}"  Source="/eBalanceKitResources;component/Resources/notPermittedForCommercial.png" 
                                   Visibility="{Binding Element.NotPermittedForCommercial, Converter={StaticResource TrueToVisibilityConverter}}" Margin="0,0,5,0" IsEnabled="False" 
                                   ToolTip="Handelsrechtlich unzulässig" />
                        </StackPanel>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Path=Element.MandatoryLabel}" Style="{StaticResource TreeViewTextStyle}" IsEnabled="False"/>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>
    
    <!-- template for AssignmentLineGui objects -->
    <HierarchicalDataTemplate x:Key="PresentationTreeNodeAssignmentLineGui" DataType="{x:Type MappingTemplate:MappingLineGui}">
        <Grid>
            <Border Padding="3,1" Margin="0,1" Style="{StaticResource assignmentLine}" />
            <Border Style="{StaticResource selectionOverlayBorder}" Padding="3,1" Margin="0,1" Cursor="Hand" >
                <Grid Height="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock HorizontalAlignment="Stretch" Foreground="{StaticResource BalanceAccountTextBrush}" TextWrapping="Wrap" Text="{Binding Path=AccountLabel}" />
                    <TextBlock Grid.Column="1" Text="{Binding Path=TypeDisplayString}" Foreground="{StaticResource BalanceAccountTextBrush}" Margin="5,0,5,0" />
                </Grid>
            </Border>
        </Grid>
    </HierarchicalDataTemplate>

</ResourceDictionary>    