<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c1="clr-namespace:TransDATA.Converter"
                    xmlns:Localisation="clr-namespace:Base.Localisation;assembly=Base"
                    x:Class="TransDATA.ResourceDictionaries.AppResources">


    <c1:EnumToTransferStateImage x:Key="EnumToTransferStateImage" />
    <c1:PercentageConverter x:Key="PercentageConverter" />
    <c1:ValueExistsToVisibilityConverter x:Key="valueExistsToVisibilityConverter" />
    <c1:ValueNotExistsToVisibilityConverter x:Key="valueNotExistsToVisibilityConverter" />
    <c1:BoolToVisibilityConverter x:Key="TrueToVisibilityConverter" VisibleValue="True" HiddenState="Collapsed" />
    <c1:BoolToVisibilityConverter x:Key="FalseToVisibilityConverter" VisibleValue="False" HiddenState="Collapsed" />
    <c1:ValueExistsToVisibilityConverter x:Key="ValueExistsToVisibilityConverter" />
    <c1:StringToDecimalConverter x:Key="StringToDecimalConverter" />
    <c1:StringToNullableDecimalConverter x:Key="StringToNullableDecimalConverter" />
    <c1:StringToMonetaryConverter x:Key="StringToMonetaryConverter" />
    <c1:StringToNullableMonetaryConverter x:Key="StringToNullableMonetaryConverter" />
    <c1:ValueExistsToBoolConverter x:Key="ValueExistsToBoolConverter" />
    <c1:EnumMatchToBooleanConverter x:Key="EnumMatchToBooleanConverter" />
    <c1:MyDebugConverter x:Key="MyDebugConverter" />
    
    <!--********************************************************************************
        * Brushes
        ******************************************************************************** -->

    <SolidColorBrush x:Key="ListBgBrush" Color="#80FFFFFF" />

    <ImageBrush x:Key="headerBgBrush" ImageSource="/TransDATA;component/Resources/head.png" ViewportUnits="Absolute"
                ViewboxUnits="Absolute" Viewbox="7,0,460,55" TileMode="FlipX" Viewport="0,0,471,55" />
    <ImageBrush x:Key="infoBgBrush" ImageSource="/TransDATA;component/Resources/head.png" ViewportUnits="Absolute"
                ViewboxUnits="Absolute" Viewbox="7,0,460,55" TileMode="FlipXY" Viewport="0,0,471,175" />

    <!-- brush for default border (background) -->
    <LinearGradientBrush x:Key="DefaultBorderBgBrush" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#F0F0F0" Offset="0" />
    <GradientStop Color="White" Offset="1" />
    </LinearGradientBrush>

    <!-- brush for default border (border line) -->
    <LinearGradientBrush x:Key="DefaultBorderBorderBrush" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#D0909090" Offset="0" />
    <GradientStop Color="#D0A4A4A4" Offset="0.35" />
    <GradientStop Color="#D0B7B5B5" Offset="0.4" />
    <GradientStop Color="#D0A0A0A0" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalBorderBrush" Color="Silver" />

    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BlueGradientBrushBorder" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#D0A0A0A0" Offset="0" />
    <GradientStop Color="#D0B4B4B4" Offset="0.35" />
    <GradientStop Color="#D0C7C5C5" Offset="0.4" />
    <GradientStop Color="#D0B0B0B0" Offset="1" />
    <!--
            <GradientStop Color="#A0A0D0" Offset="0" />
            <GradientStop Color="#A0A0B0" Offset="1" />
            -->
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonMouseOverBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#D0FFFFFF" Offset="0" />
    <GradientStop Color="#40FFFFFF" Offset="0.15" />
    <GradientStop Color="#40FFFFFF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#AAA" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonPressedBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#C0FFFFFF" Offset="0" />
    <GradientStop Color="#80FFFFFF" Offset="0.15" />
    <GradientStop Color="#80FFFFFF" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#CCC" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#BBB" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="0.1" />
        <GradientStop Color="#EEE" Offset="0.9" />
        <GradientStop Color="#FFF" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#444" Offset="0.0" />
        <GradientStop Color="#888" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
        </GradientStopCollection>
    </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- ********************************************************************************
        * Styles
            ******************************************************************************** -->




    <Style x:Key="DetailContentBorder" TargetType="{x:Type Border}">
    <!--<Setter Property="Margin" Value="24,0,0,0" />-->
    <Setter Property="Margin" Value="48,0,0,0" />
    </Style>

    <Style x:Key="DetailContentBorder1" TargetType="{x:Type Border}">
    <!--<Setter Property="Margin" Value="24,0,0,0" />-->
    <Setter Property="Margin" Value="24,0,0,0" />
    </Style>

    <!-- style for image buttons -->
    <Style x:Key="MyFocusVisual">
    <Setter Property="Control.Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
            <Grid Margin="0,0,0,0">
            <Rectangle Name="r1" StrokeThickness="1" Stroke="{StaticResource DefaultBorderBorderBrush}"
                        StrokeDashArray="2 2" />
            <Border Name="border" Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}" CornerRadius="2" BorderThickness="2" />
            </Grid>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle" TargetType="Button">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11px" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="Button">
            <Border Name="border" BorderThickness="0" Padding="0"
                    BorderBrush="{StaticResource DefaultBorderBorderBrush}" CornerRadius="2" Background="{TemplateBinding Background}">
            <Grid>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content" />
            </Grid>
            </Border>
            <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="6" Opacity="0.75" />
                </Setter.Value>
                </Setter>
                <Setter TargetName="content" Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform CenterX="15" CenterY="15" ScaleX="1.05" ScaleY="1.05"></ScaleTransform>
                </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="content" Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform CenterX="10" CenterY="10" ScaleX="0.95" ScaleY="0.95"></ScaleTransform>
                </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush"
                        Value="{StaticResource DefaultBorderBorderBrush}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="BorderBrush"
                        Value="{StaticResource DefaultBorderBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle1" TargetType="Button">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Margin" Value="2" />
    <Setter Property="Width" Value="85" />
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11px" />
    <Setter Property="FontWeight" Value="Bold" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="Button">
            <Border Name="border" BorderThickness="1" Padding="3,3,3,1" BorderBrush="Transparent"
                    CornerRadius="5" Background="Transparent">
            <Grid>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                                Name="contentShadow">
                <ContentPresenter.RenderTransform>
                    <TranslateTransform X="1.0" Y="1.0" />
                </ContentPresenter.RenderTransform>
                </ContentPresenter>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content" />
            </Grid>
            </Border>
            <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="border" Property="Background"
                        Value="{StaticResource ButtonMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background"
                        Value="{StaticResource ButtonMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background"
                        Value="{StaticResource ButtonPressedBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle2FocusVisual">
    <Setter Property="Control.Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
            <Grid Margin="3 2">
            <Rectangle Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2" />
            <Border Name="border" Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}" CornerRadius="2" BorderThickness="1" />
            </Grid>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ImageButtonStyle2" BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource ImageButtonStyle2FocusVisual}" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="Button">
            <Border x:Name="Border" CornerRadius="2" BorderThickness="1"
                    Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}">
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
            </Border>
            <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource DefaultedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Opacity" Value="0.5" />
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ImageButtonText" TargetType="TextBlock">
    <Setter Property="Foreground" Value="#E0E0E0" />
    <Setter Property="HorizontalAlignment" Value="Center" />
    <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
    <Setter Property="Control.Template">
        <Setter.Value>
        <ControlTemplate>
            <Border>
            <Rectangle Margin="15,0,0,0" StrokeThickness="1" Stroke="#60000000" StrokeDashArray="1 2" />
            </Border>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
            <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Border x:Name="Border" Width="13" Height="13" CornerRadius="2"
                        Background="{StaticResource NormalBrush}" BorderThickness="1" BorderBrush="{StaticResource NormalBorderBrush}">
                <Path Width="9" Height="9" x:Name="CheckMark" SnapsToDevicePixels="False"
                        Stroke="Green" StrokeThickness="2" Data="M 2 5 L 4 8 L 8 1" />
                </Border>
            </BulletDecorator.Bullet>

            <ContentPresenter x:Name="content" Margin="4,0,0,0" VerticalAlignment="Center"
                                HorizontalAlignment="Stretch" RecognizesAccessKey="True" />
            </BulletDecorator>
            <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="content" Property="Margin" Value="0,0,0,0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="CheckMark" Property="Data" Value="M 0 0 H 9 V 9 H 0 V 0" />
                <Setter TargetName="CheckMark" Property="StrokeThickness" Value="0" />
                <Setter TargetName="CheckMark" Property="Fill">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFC1D6FF" Offset="0" />
                    <GradientStop Color="#FF3737EF" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>


    <!-- style for image buttons -->
    <Style x:Key="MyFocusVisual3">
    <Setter Property="Control.Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
            <Grid Margin="0,0,0,0">
            <Rectangle Name="r1" StrokeThickness="1" Stroke="{StaticResource DefaultBorderBorderBrush}"
                        StrokeDashArray="2 2" />
            <Border Name="border" Width="{TemplateBinding ActualWidth}"
                    Height="{TemplateBinding ActualHeight}" CornerRadius="2" BorderThickness="2" />
            </Grid>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="TransparentButtonStyle" TargetType="Button">
    <Setter Property="OverridesDefaultStyle" Value="True" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="FontFamily" Value="Verdana" />
    <Setter Property="FontSize" Value="11px" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual3}" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="Button">
            <Border Name="border" BorderThickness="0" Padding="0" BorderBrush="Transparent"
                    Background="Transparent">
            <Grid>
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content" />
            </Grid>
            </Border>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="NavigationTreeItemBg" TargetType="{x:Type Border}">
    <Setter Property="Background" Value="#06597b" />
    <Style.Triggers>
        <!-- selected & valid -->
        <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
            <Condition Binding="{Binding IsSelected}" Value="True" />
        </MultiDataTrigger.Conditions>
        <Setter Property="Background">
            <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="#edb75f" Offset="0" />
                <GradientStop Color="#b77401" Offset="1" />
            </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        </MultiDataTrigger>
    </Style.Triggers>
    </Style>

    <Style x:Key="PopupBorder" TargetType="Border" BasedOn="{StaticResource GroupBoxBorder}">
    <Setter Property="Effect">
        <Setter.Value>
        <DropShadowEffect ShadowDepth="5" Opacity="0.5" BlurRadius="5" />
        </Setter.Value>
    </Setter>
    <Setter Property="Background" Value="{StaticResource GroupBoxBorderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{StaticResource GroupBoxBorderBorderBrush}" />
    <Setter Property="CornerRadius" Value="5" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Margin" Value="0,0,5,5" />
    <Setter Property="Padding" Value="5" />
    </Style>



    <!-- **************************************************************************************** -->
    <!-- control colors -->
    <!-- **************************************************************************************** -->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#A0A0A0</Color>
    <Color x:Key="ControlDarkColor">#404040</Color>

    <Color x:Key="ControlMouseOverLightColor">#B0B0B0</Color>
    <Color x:Key="ControlMouseOverDarkColor">#A0A0A0</Color>
    <Color x:Key="ControlPressedLightColor">#909090</Color>
    <Color x:Key="ControlPressedDarkColor">#808080</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">
    sc#1, 0.004391443, 0.002428215, 0.242281124
    </Color>

    <!--Border colors-->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--Control-specific resources.-->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
    <GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
    <LinearGradientBrush.GradientStops>
        <GradientStopCollection>
        <GradientStop Color="#000000FF" Offset="0" />
        <GradientStop Color="#600000FF" Offset="0.4" />
        <GradientStop Color="#600000FF" Offset="0.6" />
        <GradientStop Color="#000000FF" Offset="1" />
        </GradientStopCollection>
    </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- **************************************************************************************** -->
    <!-- EXPANDER                                                                                 -->
    <!-- **************************************************************************************** -->

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}">
    <Border x:Name="Border" CornerRadius="2,0,0,0" BorderThickness="0,0,1,0">
        <Border.Background>
        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}" />
            <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
        </LinearGradientBrush>
        </Border.Background>
        <Border.BorderBrush>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
            </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        </Border.BorderBrush>
        <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
            <VisualState x:Name="Normal" />
            <VisualState x:Name="MouseOver">
            <Storyboard>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverLightColor}" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverDarkColor}" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            </VisualState>
            <VisualState x:Name="Pressed">
            <Storyboard>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedLightColor}" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedDarkColor}" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            </VisualState>
            <VisualState x:Name="Disabled">
            <Storyboard>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderLightColor}" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            </VisualState>
        </VisualStateGroup>
        <VisualStateGroup x:Name="CheckStates">
            <VisualState x:Name="Checked">
            <Storyboard>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="CollapsedArrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                </ObjectAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ExpandededArrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            </VisualState>
            <VisualState x:Name="Unchecked" />
            <VisualState x:Name="Indeterminate" />
        </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid>
        <Path x:Name="CollapsedArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                Data="M 0 4 L 4 0 L 8 4 Z">
            <Path.Fill>
            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
            </Path.Fill>
        </Path>
        <Path x:Name="ExpandededArrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                Visibility="Collapsed" Data="M 0 0 L 4 4 L 8 0 Z">
            <Path.Fill>
            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
            </Path.Fill>
        </Path>
        </Grid>
    </Border>
    </ControlTemplate>

    <Style x:Key="ExpanderDown" TargetType="{x:Type Expander}">
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
            <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition x:Name="ContentRow" Height="*" />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="MouseOver" />
                <VisualState x:Name="Disabled">
                    <Storyboard>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                            Value="{StaticResource DisabledControlDarkColor}" />
                    </ColorAnimationUsingKeyFrames>
                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0"
                                            Value="{StaticResource DisabledBorderLightColor}" />
                    </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="Border" Grid.Row="0" BorderThickness="1" CornerRadius="2,2,0,0">
                <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
                </LinearGradientBrush>
                </Border.BorderBrush>

                <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                    </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
                </Border.Background>
                <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ToggleButton OverridesDefaultStyle="True"
                                Template="{StaticResource ExpanderToggleButton}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                    </LinearGradientBrush>
                    </ToggleButton.Background>
                </ToggleButton>
                <ContentPresenter Grid.Column="1" Margin="5,2" VerticalAlignment="Center"
                                    ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <Border Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2">
                <ContentPresenter x:Name="Content" />
            </Border>
            </Grid>
            <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
                <Setter TargetName="ContentRow" Property="Height" Value="0" />
            </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>


    <Style TargetType="ComboBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="Template">
        <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
            <Border Name="Border" Padding="2,1" SnapsToDevicePixels="true">
            <ContentPresenter />
            </Border>
            <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#06597b" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        </Setter.Value>
    </Setter>
    </Style>

    <Style x:Key="ListBoxItemBaseBorder" TargetType="{x:Type Border}">
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="CornerRadius" Value="3" />
    <Setter Property="Padding" Value="3,1,3,1" />
    <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <SolidColorBrush x:Key="ListItemTextBrush" Color="Black" />
    <SolidColorBrush x:Key="ListItemSelectedTextBrush" Color="#202020" />

    <Style x:Key="ListItemBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="#CCC" />
    <Setter Property="BorderBrush" Value="Silver" />
    </Style>

    <LinearGradientBrush x:Key="selectionOverlayBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#30303030" Offset="0.0" />
    <GradientStop Color="#45303030" Offset="0.8" />
    <GradientStop Color="#55303030" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="SelectionOverlayBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Style.Triggers>
        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
        <Setter Property="Background" Value="{StaticResource selectionOverlayBackgroundBrush}" />
        </DataTrigger>
    </Style.Triggers>
    </Style>

    <Style x:Key="ListDetailBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#10000000" />
        <Setter Property="BorderBrush" Value="#60000000" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="TransDataTabItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Background="#06597b" BorderBrush="#06597b" Padding="5,2">
                            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,2,0">
                                <TextBlock VerticalAlignment="Center" x:Name="ContentSite" Foreground="White" Text="{TemplateBinding Header}" />
                            </StackPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="ContentSite" Property="Foreground" Value="#222" />
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#edb75f" Offset="0" />
                                        <GradientStop Color="#b77401" Offset="1" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#edb75f" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#EEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#888" />
                            <Setter TargetName="ContentSite" Property="Foreground" Value="#666" />
                        </Trigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Top">
                            <Setter TargetName="Border" Property="CornerRadius" Value="6,6,0,0" />
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Left">
                            <Setter TargetName="Border" Property="CornerRadius" Value="6,0,0,6" />
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,0,1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Right">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,6,6,0" />
                            <Setter TargetName="Border" Property="Margin" Value="0,1,0,1" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,1,1" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}" Value="Bottom">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,6,6" />
                            <Setter TargetName="Border" Property="Margin" Value="1,0,1,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,0,1,1" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ProfileBorderBorderBrush" Color="Silver" />

    <LinearGradientBrush x:Key="ProfileBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F4F4F4" Offset="0.0" />
        <GradientStop Color="#E0E0F0" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="ProfileBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
        <Setter Property="Background" Value="{StaticResource ProfileBorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource ProfileBorderBorderBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="{StaticResource OrangeGradientBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ProfileItem">
        <Grid Height="20" Margin="1">
            <Border Style="{StaticResource ProfileBorder}" Padding="3,1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Path=DisplayString}" Foreground="#333" />
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <!-- ********************************************************************************************************** -->
    
    <SolidColorBrush x:Key="TableBorderBorderBrush" Color="Silver" />

    <LinearGradientBrush x:Key="TableBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="#F4F4F4" Offset="0.0" />
        <GradientStop Color="#E0E0F0" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="TableBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource ListBoxItemBaseBorder}">
        <Setter Property="Background" Value="{StaticResource TableBorderBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TableBorderBorderBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="{StaticResource OrangeGradientBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="TableItem">
        <Border Margin="1" ToolTip="{Binding Name}" Style="{StaticResource ProfileBorder}" Padding="3,1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <CheckBox VerticalAlignment="Center" IsChecked="{Binding DoExport, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0" Checked="TableItemChecked" Unchecked="TableItemUnchecked"/>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=Name}" Foreground="#333" TextWrapping="Wrap" />
                    <Grid Grid.Row="1" Margin="0,2,0,0">

                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Count}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Right" Grid.Column="0" Text="{Binding Path=Count, Converter={StaticResource StringToDecimalConverter}}" Foreground="#333" FontSize="10" FontStyle="Italic" />
                        <TextBlock Grid.Column="1" Text="{x:Static Localisation:ResourcesCommon.Datasets}" Foreground="#333" FontSize="10" FontStyle="Italic" Margin="3,0,0,0" />

                    </Grid>
                    <TextBlock Grid.Row="2" HorizontalAlignment="Left" Text="{Binding Path=Comment}" Foreground="#333" FontSize="10" FontStyle="Italic"
                                   Visibility="{Binding HasComment, Converter={StaticResource TrueToVisibilityConverter}}" TextWrapping="Wrap"/>
                </Grid>

                <Image Grid.Column="2" Width="16" VerticalAlignment="Center" Source="{Binding TransferState.State, Converter={StaticResource EnumToTransferStateImage}}" ToolTip="{Binding TransferState.Message}"/>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ColumnItem">
        <Border Style="{StaticResource ProfileBorder}" Padding="3,1" Margin="1" ToolTip="{Binding Name}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <CheckBox VerticalAlignment="Center" IsChecked="{Binding DoExport}" Margin="0,0,5,0" Checked="ColumnItemChecked" Unchecked="ColumnItemUnchecked"/>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Path=Name}" Foreground="#333" TextWrapping="Wrap" />
                    <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Path=Comment, UpdateSourceTrigger=PropertyChanged}" Foreground="#333" FontSize="10" FontStyle="Italic"
                            Visibility="{Binding HasComment, Converter={StaticResource TrueToVisibilityConverter}}" TextWrapping="Wrap"/>
                    <Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{x:Static Localisation:ResourcesCommon.DatabaseType}" Foreground="#333" FontSize="10" FontStyle="Italic"
                            TextWrapping="Wrap"/>
                        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Text="{Binding Path=TypeName, UpdateSourceTrigger=PropertyChanged}" Foreground="#333" FontSize="10" FontStyle="Italic"
                            TextWrapping="Wrap" Margin="5,0,0,0"/>
                        <TextBlock Grid.Column="2" HorizontalAlignment="Left" Text="{x:Static Localisation:ResourcesCommon.ColumnLength}" Foreground="#333" FontSize="10" FontStyle="Italic"
                            TextWrapping="Wrap" Margin="5,0,0,0"/>
                        <TextBlock Grid.Column="3" HorizontalAlignment="Left" Text="{Binding Path=MaxLength, UpdateSourceTrigger=PropertyChanged}" Foreground="#333" FontSize="10" FontStyle="Italic"
                            TextWrapping="Wrap" Margin="5,0,0,0"/>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>